<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="dg-additional-custom-selectors">
  <title>Additional CSS Selectors</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>CSS extensions<indexterm>Additional CSS selectors</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p id="p_bjc_dgk_54b"><ph keyref="product"/> provides support for selecting additional types of nodes. These custom
      selectors apply to: <i>document</i>, <i>doctype</i>, <i>processing-instruction</i>,
        <i>comment</i>, <i>CDATA sections</i>, <i>entities</i>, and <i>reference sections</i>.
        <i>Processing-instructions</i> are not displayed by default. To display them, <ph
        conkeyref="reusables-preferences-pages/open-the-preferences-page"/>, go to <menucascade>
        <uicontrol>Editor</uicontrol>
        <uicontrol>Author</uicontrol>
      </menucascade>, and select <uicontrol>Show processing instructions</uicontrol>.</p>
    <p id="p_cjc_dgk_54b">
      <note id="note_djc_dgk_54b">The custom selectors are presented in the default CSS for <uicontrol>Author</uicontrol>
        mode and all of their properties are marked with the <i>!important</i> flag. For this
        reason, you have to set the <i>!important</i> flag on each property of the custom selectors
        from your CSS to be applicable.</note>
    </p>
    <p id="p_ejc_dgk_54b">For the custom selectors to work in your CSS stylesheets, declare the
        <uicontrol>Author</uicontrol> mode extensions namespace at the beginning of the stylesheet
      documents: </p>
    <codeblock outputclass="language-css" id="codeblock_fjc_dgk_54b">@namespace oxy url('http://www.oxygenxml.com/extensions/author');</codeblock>
    <ul id="ul_gh4_fyr_gd">
      <li id="li_gjc_dgk_54b" irina="irina"><b>oxy|document</b> - The <codeph>oxy|document</codeph> selector matches the entire
        document:<codeblock outputclass="language-css" id="codeblock_hjc_dgk_54b">oxy|document {
    display:block !important;
}</codeblock></li>
      <li id="li_ijc_dgk_54b" irina="irina"><b>oxy|doctype</b> - The following example changes the rendering of
          <codeph>doctype</codeph> sections:
        <codeblock outputclass="language-css" id="codeblock_jjc_dgk_54b">oxy|doctype {
    display:block !important;
    color:blue !important;
    background-color:transparent !important;
}</codeblock></li>
      <li id="li_kjc_dgk_54b" irina="irina">
        <p id="p_ljc_dgk_54b"><b>oxy|processing-instruction</b> - To match the processing instructions, you can use the
            <codeph>oxy|processing-instruction</codeph> selector:
          <codeblock outputclass="language-css" id="codeblock_mjc_dgk_54b">oxy|processing-instruction {
    display:block !important;
    color:purple !important;
    background-color:transparent !important;
}</codeblock></p>
        <p id="p_njc_dgk_54b">A processing instruction usually has a target and one or more pseudo
          attributes:<codeblock outputclass="language-xml" id="codeblock_ojc_dgk_54b">&lt;?target_name data="b"?&gt;</codeblock></p>
        <p id="p_pjc_dgk_54b">You can match a processing instruction with a particular target from the CSS using the
          following
          construct:<codeblock outputclass="language-css" id="codeblock_qjc_dgk_54b">oxy|processing-instruction[target_name]</codeblock></p>
        <p id="p_rjc_dgk_54b">You can also match the processing instructions having a certain target and pseudo
          attribute value, such
          as:<codeblock outputclass="language-css" id="codeblock_sjc_dgk_54b">oxy|processing-instruction[target_name][data="b"]</codeblock></p>
      </li>
      <li id="li_tjc_dgk_54b" irina="irina"><b>oxy|comment</b> - The XML comments displayed in <uicontrol>Author</uicontrol> mode can
        be changed using the <codeph>oxy|comment</codeph> selector:
        <codeblock outputclass="language-css" id="codeblock_ujc_dgk_54b">oxy|comment {
    display:block !important;
    color:green !important;
    background-color:transparent !important;
}</codeblock></li>
      <li id="li_vjc_dgk_54b" irina="irina"><b>oxy|cdata</b> - The <codeph>oxy|cdata</codeph> selector matches <codeph>CDATA</codeph>
        sections:
        <codeblock outputclass="language-css" id="codeblock_wjc_dgk_54b">oxy|cdata{
    display:block !important;
    color:gray !important;
    background-color:transparent !important;
} </codeblock></li>
      <li id="li_xjc_dgk_54b" irina="irina">
        <p id="p_yjc_dgk_54b"><b>oxy|entity</b> - The <codeph>oxy|entity</codeph> selector matches the entity
          content:<codeblock outputclass="language-css" id="codeblock_zjc_dgk_54b">oxy|entity {
    display:morph !important;
    editable:false !important;
    color:orange !important;
    background-color:transparent !important;
}</codeblock></p>
        <p id="p_akc_dgk_54b">To match particular entities, use the <codeph>oxy|entity</codeph> selector in expressions
          such
          as:<codeblock outputclass="language-css" id="codeblock_bkc_dgk_54b">oxy|entity[name='amp'],
oxy|entity[name='lt'],
oxy|entity[name='gt'],
oxy|entity[name='quot'],
oxy|entity[name='apos'],
oxy|entity[name^='#']{
    -oxy-display-tags: none;
}</codeblock></p>
      </li>
      <li id="li_ckc_dgk_54b" irina="irina">
        <p id="p_dkc_dgk_54b"><b>oxy|reference</b> - The <i>references to entities</i>, <i>XInclude</i>, and DITA
            <xmlatt>conref</xmlatt> and <xmlatt>conkeyref</xmlatt> attributes are expanded by
          default in <uicontrol>Author</uicontrol> mode and the referenced content is displayed. The
          referenced resources are displayed inside the element or entity that references them.</p>
        <p id="p_ekc_dgk_54b">You can use the <codeph>reference</codeph> property to customize the way these references
          are rendered in <uicontrol>Author</uicontrol>
          mode:<codeblock outputclass="language-css" id="codeblock_fkc_dgk_54b">oxy|reference {
  border:1px solid gray !important;
}</codeblock></p>
        <p id="p_gkc_dgk_54b">In the <uicontrol>Author</uicontrol> mode, content is highlighted when text contains
            <xref keyref="author_change-tracking">comments</xref> and changes (if <xref
            keyref="author_change-tracking"><i>Track Changes</i></xref> was active when the content
          was modified).</p>
        <p id="p_hkc_dgk_54b">If this content is referenced, the <uicontrol>Author</uicontrol> mode does not display
          the highlighted areas in the new context. If you want to mark the existence of the
          comments and changes, you can use the <codeph>oxy|reference[comments]</codeph>,
            <codeph>oxy|reference[changeTracking]</codeph>, and
            <codeph>oxy|reference[changeTracking][comments]</codeph> selectors.<note id="note_ikc_dgk_54b">Two artificial
            attributes (<codeph>comments</codeph> and <codeph>changeTracking</codeph>) are set on
            the reference node, containing information about the number of comments and tracked
            changes in the content.</note></p>
        <p id="p_jkc_dgk_54b">
          <ul id="ul_udv_z3b_v3b">
            <li id="li_kkc_dgk_54b" irina="irina">The following example represents the customization of the reference fragments that
              contain
              comments:<codeblock outputclass="language-css" id="codeblock_lkc_dgk_54b">oxy|reference[comments]:before {
  content: "Comments: " attr(comments) !important;  
}</codeblock></li>
            <li id="li_mkc_dgk_54b" irina="irina">To match reference fragments based on the fact that they contain tracked changes
              inside, use the <codeph>oxy|reference[changeTracking]</codeph>
              selector:<codeblock outputclass="language-css" id="codeblock_nkc_dgk_54b">oxy|reference[changeTracking]:before {
  content: "Change tracking: " attr(changeTracking) !important;  
}</codeblock></li>
            <li id="li_okc_dgk_54b" irina="irina">Here is an example of how you can set a custom color for the reference containing
              both tracked changes and
              comments:<codeblock outputclass="language-css" id="codeblock_pkc_dgk_54b">oxy|reference[changeTracking][comments]:before {
  content: "Change tracking: " attr(changeTracking) 
           " and comments: " attr(comments) !important;  
}</codeblock></li>
          </ul>
        </p>
      </li>
    </ul>
    <p id="p_qkc_dgk_54b">
      <fig id="fig_rkc_dgk_54b">
        <title>Example: A Document Rendered Using these Rules</title>
        <image href="../img/dg_custom_selectors_sample.png"/>
      </fig>
    </p>
  </body>
</topic>
