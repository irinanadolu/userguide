<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="pdf-xslt-extensions-pub-template_usecase_9_remove_terms_links">
  <title>How to Remove Links from Terms</title>
  <body>
    <p>Your topics might contain multiple references to the same <xmlelement>term</xmlelement>.
      These terms can further be explained in the glossary. In this case, you may want to only keep
      the first occurrence of this term to be a link to the glossary and display the other terms as
      text.</p>
    <p>To add this functionality, use an <i>Oxygen Publishing Template</i> and follow these
        steps:<ol id="ol_o1m_xrs_qsb">
        <li conkeyref="reusables-dcpp/pt-li1" irina="irina"/>
        <li conkeyref="reusables-dcpp/pt-li2" irina="irina"/>
        <li conkeyref="reusables-dcpp/pt-li3" irina="irina"/>
        <li irina="irina">In the newly created folder, create an XSL file (for example, named
            <filepath>merged2html5Extension.xsl</filepath>) with the following
          content:<codeblock outputclass="language-xml" id="codeblock_p1m_xrs_qsb">&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  exclude-result-prefixes="xs"
  version="2.0">
  
  &lt;xsl:template match="*[contains(@class, ' topic/term ')]" name="topic.term">
    &lt;!-- Save the current @href value -->
    &lt;xsl:variable name="current-href" select="@href"/>
    &lt;!-- Get the closest parent topic -->
    &lt;xsl:variable name="closest-parent"
      select="ancestor::*[contains(@class, ' topic/topic ')][1]"/>
    &lt;!-- Get the first &lt;term> having the same href -->
    &lt;xsl:variable name="first-term-with-same-href" select="($closest-parent//
      *[contains(@class, ' topic/term ')][@href=$current-href])[1]"/>
    
    &lt;!-- Call the HTML5 default template -->
    &lt;xsl:variable name="result">
      &lt;xsl:next-match/>
    &lt;/xsl:variable>
    
    &lt;!-- Call the copy template that will remove the links -->
    &lt;xsl:apply-templates select="$result" mode="remove-extra-links">
      &lt;xsl:with-param name="is-first-term-with-same-href"
        select="generate-id(.) = generate-id($first-term-with-same-href)" tunnel="yes"/>
    &lt;/xsl:apply-templates>
  &lt;/xsl:template>
  
  &lt;xsl:template match="node() | @*" mode="remove-extra-links">
    &lt;xsl:copy>
      &lt;xsl:apply-templates select="node() | @*" mode="#current"/>
    &lt;/xsl:copy>
  &lt;/xsl:template>
  
  &lt;xsl:template match="a" mode="remove-extra-links">
    &lt;xsl:param name="is-first-term-with-same-href" tunnel="yes"/>
    &lt;xsl:choose>
      &lt;!-- Process the first term as a link -->
      &lt;xsl:when test="$is-first-term-with-same-href">
        &lt;xsl:next-match/>
      &lt;/xsl:when>
      &lt;xsl:otherwise>
        &lt;!-- Process the other terms as text -->
        &lt;xsl:copy-of select="child::*"/>
      &lt;/xsl:otherwise>
    &lt;/xsl:choose>
  &lt;/xsl:template>  
  
&lt;/xsl:stylesheet></codeblock></li>
        <li irina="irina">Open the <xref href="pdf_publishing_template_contents.dita#template_descritpor_file_pdf"
              ><i>template descriptor file</i></xref> associated with your <i>publishing
            template</i> (the <i>.opt</i> file) and set the XSLT stylesheet created in the previous
          step with the <codeph>com.oxygenxml.pdf.css.xsl.merged2html5</codeph> XSLT extension
          point:<codeblock outputclass="language-xml" id="codeblock_q1m_xrs_qsb">&lt;publishing-template&gt;
  ...
  &lt;pdf&gt;
    ...        
    &lt;xslt&gt;
      &lt;extension
        id="com.oxygenxml.pdf.css.xsl.merged2html5"
        file="xslt/merged2html5Extension.xsl"/>
    &lt;/xslt&gt;</codeblock></li>
        <li conkeyref="reusables-dcpp/pt-li6" irina="irina"/>
        <li conkeyref="reusables-dcpp/pt-li7" irina="irina"/>
        <li conkeyref="reusables-dcpp/pt-li8" irina="irina"/>
      </ol></p>
  </body>
</topic>
