<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="customizing_plugins">
  <title>Customizing Web Author with Plugins</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Customizing plugins</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <section id="what_is_a_plugin">
      <title>What is a Plugin</title>
      <p id="p_dvs_dgk_54b">A <b><term>plugin</term></b> (also referred to as an <term>add-on</term> or
          <term>extension</term>) is a component that adds specific features to an existing
        application. <ph keyref="webappProduct"/> supports <term>plugins</term> to enable numerous
        customizations.</p>
    </section>
    <section id="general_configuration_of_a_plugin">
      <title>General Configuration of a Plugin</title>
      <p id="p_evs_dgk_54b">For information about what the general configuration requirements for a
        <term>plugin</term>, see <xref
          href="https://www.oxygenxml.com/doc/ug-editor/topics/oxygen-plugin.html" format="html"
          scope="external">General Configuration of an Oxygen Plugin</xref>.</p>
    </section>
    <section id="supported_extension_types">
      <title>Supported Extension Types</title>
      <p id="p_fvs_dgk_54b"><ph keyref="webappProduct"/> provides support for the following extension types: </p>
      <ul id="ol_dn1_c23_br">
        <li id="li_gvs_dgk_54b" irina="irina"><b>URLStreamHandler</b> - This extension can be used to integrate the <ph
            keyref="webappProduct"/> with an XML database or CMS. Some examples include the <xref
            href="https://github.com/oxygenxml/webapp-webdav-integration" format="html"
            scope="external">WebDAV connector</xref> and the <xref
            href="https://github.com/oxygenxml/web-author-rest-plugin" format="html"
            scope="external">REST API connector</xref>.<note id="note_hvs_dgk_54b">For details about implementing an
            authentication mechanism, see <xref href="how_to_cms_auth.dita"/>.</note></li>
        <li id="li_ivs_dgk_54b" irina="irina"><b>WorkspaceAccess</b> - This extension can be used to execute code when the application
          is started. For example, you can:<ul id="ul_esz_gyz_b2b">
            <li id="li_jvs_dgk_54b" irina="irina">Register a listener to be notified when editing sessions are started or closed using
                <xref keyref="url_addEditingSessionLifecycleListener"
                  ><i>ro.sync.ecss.extensions.api.webapp.access.WebappPluginWorkspace.addEditingSessionLifecycleListener()</i></xref>.</li>
            <li id="li_kvs_dgk_54b" irina="irina">Configure a <codeph>javax.xml.transform.URIResolver</codeph>.</li>
          </ul><note id="note_lvs_dgk_54b">The <xref keyref="url_PluginWorkspace"
                ><i>ro.sync.exml.workspace.api.PluginWorkspace</i></xref> instance passed to the
            extension also implements the <xref keyref="url_WebappPLuginWorkspace"
                ><i>ro.sync.ecss.extensions.api.webapp.access.WebappPluginWorkspace</i></xref>
            interface and provides access to some <ph keyref="webappProduct"/>-specific
            functionality.</note><note id="note_mvs_dgk_54b">Most of the methods used to configure the <term>Oxygen XML
              Editor/Author</term> GUI are unavailable in these extensions.</note></li>
        <li id="li_nvs_dgk_54b" irina="irina">
          <p id="p_ovs_dgk_54b"><b>WebappServlet</b> - This extension allows you to provide an
            implementation of a servlet-like interface (<xref
              keyref="url_WebappServletPluginExtension"
                ><i>ro.sync.ecss.extensions.api.webapp.plugin.ServletPluginExtension</i></xref>)
            that will be dynamically loaded by the <ph keyref="webappProduct"/>. Your implementation
            will also provide the path to the location where the servlet will be exposed.</p>
          <p id="p_pvs_dgk_54b">This extension can also be used to <xref href="webapp_plugin_configuration.dita">create
              a configuration page</xref> for a plugin.</p>
        </li>
        <li id="li_qvs_dgk_54b" irina="irina"><b>WebappServletFilter</b> - This extension allows you to provide an implementation of a
          servlet filter (<xref keyref="url_WebappServletPluginExtension"
              ><i>javax.servlet.Filter</i></xref>) that will be dynamically loaded by <ph
            keyref="webappProduct"/>.</li>
        <li id="li_rvs_dgk_54b" irina="irina"><b>AuthorStylesheet</b> - Allows you to add a stylesheet (CSS or LESS) used for
          rendering all XML documents. For more details, see <xref
            href="https://www.oxygenxml.com/doc/ug-editor/topics/author-stylesheet-extension.html"
            format="html" scope="external">Author Stylesheet Plugin Extension</xref>.</li>
        <li id="webapp-static-resource-folder" irina="irina">
          <p id="p_svs_dgk_54b"><b>WebappStaticResourcesFolder</b> - This extension allows you to access a static
            resource folder. It should provide a <xmlatt>path</xmlatt> attribute (the static
            resources folder path relative to the <filepath>plugins</filepath> directory) and an
              <xmlatt>href</xmlatt> attribute that declares the <term>plugin</term>. An example of a
            use-case is you can use it to have the <ph keyref="webappProduct"/> provide icons for
              <term>plugin</term>-specific actions.</p>
          <p id="p_tvs_dgk_54b">In the following example, the static resources will be available at
              <filepath>http://example.com/oxygen-xml-web-author/plugin-resources/&lt;relative-href>/path-to-file</filepath>,
            with the <filepath>path-to-file</filepath> being relative to the static resources
            folder:
            <codeblock outputclass="language-javascript" id="codeblock_uvs_dgk_54b">&lt;extension type="WebappStaticResourcesFolder" path="path-to-resorce-folder" 
           href="relative-href"/></codeblock></p>
          <note id="note_vvs_dgk_54b">You can find a sample plugin that uses this extension <xref
              href="https://github.com/oxygenxml/web-author-sample-plugins/tree/master/web-author-change-ui-with-css"
              format="html" scope="external">here</xref>.</note>
        </li>
        <li id="li_wvs_dgk_54b" irina="irina">
          <p id="p_xvs_dgk_54b"><b>WebappCSSResource</b> - This extension allows you to specify a CSS stylesheet in the
            plugin descriptor file to be loaded for styling the Web Author interface. All the CSS
            resources declared by all plugins will be loaded in one single request.</p>
          <p id="p_yvs_dgk_54b">For
              example:<codeblock outputclass="language-xml" id="codeblock_zvs_dgk_54b">&lt;extension type="WebappCSSResource" href="web/static/style.css"/></codeblock><note id="note_aws_dgk_54b">The
              path is relative to the base directory of the plugin.</note><note type="warning" id="note_bws_dgk_54b">The
              encoding used to load a CSS resource in Web Author is <i>UTF-8</i>. CSS files that use
              other encoding might fail to load.</note></p>
        </li>
      </ul>
    </section>
    <section id="webapp_bundle_js_files_in_plugin">
      <title>Loading plugin-related custom JavaScript code</title>
      <p id="p_cws_dgk_54b">If your <term>plugin</term> needs accompanying JavaScript code to be loaded and executed on
        the client-side you can bundle it together with your <term>plugin</term> code. The <ph
          keyref="webappProduct"/> loads all files with the <filepath>.js</filepath> extension
        located in the <filepath>web</filepath> folder of the <term>plugin</term>. The files are
        loaded in <term>lexicographical</term> order, meaning that their alphabetical order is based
        upon the <i>total order</i> rather than <i>sequence</i> (for example,
          <filepath>abc10.js</filepath> would be loaded before <filepath>abc2.js</filepath>).</p>
    </section>
    <section id="add-plugin-section">
      <title>Adding the Plugins in the <ph keyref="webappProduct"/></title>
      <p id="p_dws_dgk_54b">If you have already developed <term>Oxygen XML Editor/Author</term>
        <term>plugins</term>, they can be added in the <filepath>bundle-plugin/dropins</filepath>
        folder in the Maven project.</p>
      <p id="p_ews_dgk_54b">If you are developing a new <term>plugin</term>, you are encouraged to use any of the
        existing <term>plugins</term> as a starting point. Then you should add the resulting Maven
        project as a dependency (or even a sub-module) in the
          <filepath>oxygen-sample-plugins</filepath> module.</p>
    </section>
    <section id="public_plugin_integration_projects">
      <title>Public Plugin Integration Projects</title>
      <p id="p_fws_dgk_54b">Some public projects are available on <b>github.com</b> that can be used to help you
        integrate <ph keyref="webappProduct"/>. <ul id="ul_gws_dgk_54b">
          <li id="li_hws_dgk_54b" irina="irina"><b>WebDAV Support for Oxygen XML Web Author</b> (<xref
              href="https://github.com/oxygenxml/webapp-webdav-integration" format="html"
              scope="external"/>) - This project is a very simple integration of <ph
              keyref="webappProduct"/> with a WebDAV-enabled server, which can be extended with more
            features or can be adapted to work with any CMS.</li>
          <li id="li_iws_dgk_54b" irina="irina"><b>Other Open-Source Plugins</b> - Here is a list with <xref
              href="https://github.com/search?q=topic%3Aoxygen-web-author-plugin+org%3Aoxygenxml&amp;type=Repositories"
              format="html" scope="external">all open-source <ph keyref="webappProduct"/> plugins
              provided by Oxygen</xref>. For example, there are plugins for integrating with Google
            Drive, editing files in a GitHub repository, adding support for special UTF-8
            characters, adding support for SVG graphics, adding support for MathML, implementing
            REST-endpoints for content handling, and more.</li>
        </ul></p>
    </section>
  </body>
  <related-links>
    <linklist>
      <title>Related Information:</title>
      <link href="webapp-plugin-prototyping.dita#webapp-plugin-prototyping"/>
      <link href="webapp-configure-plugins.dita#webapp-configure-plugins"/>
    </linklist>
  </related-links>
</topic>
