<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="openapi-framework">
  <title>OpenAPI (Swagger) Document Type (Framework)</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Supported frameworks<indexterm>OpenAPI</indexterm></indexterm>
        <indexterm>OpenAPI document type</indexterm>
        <indexterm>Swagger</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p id="p_mtk_cgk_54b"><b>OpenAPI</b> specification, previously known as Swagger specification,
      is a specification that defines a standard, programming language-agnostic interface
      description for HTTP APIs, which allows both humans and computers to discover and understand
      the capabilities of a service without requiring access to source code, additional
      documentation, or inspection of network traffic. Use cases for machine-readable API definition
      documents include interactive documentation, code generation for documentation, automation of
      test cases, and more. OpenAPI documents describe an API's services and are represented in
      either YAML or JSON format.</p>
    <p id="p_kmh_nyf_ktb"><ph keyref="product"/> includes three OpenAPI frameworks:<ul
        id="ul_r3c_qyf_ktb">
        <li id="li_s3c_qyf_ktb" irina="irina">OpenAPI 2.0</li>
        <li id="li_r2l_qyf_ktb" irina="irina">OpenAPI 3.0</li>
        <li id="li_czt_qyf_ktb" irina="irina">OpenAPI 3.1</li>
      </ul></p>
    <section id="section_xj4_pxf_ktb">
      <title>Editing OpenAPI Documents</title>
      <p id="p_ntk_cgk_54b">You can edit OpenAPI files in <uicontrol>Text</uicontrol> mode and you
        have access to all the usual text editing actions<ph product="editor editorEclipse"> and you
          can also edit them in the visual <uicontrol>Author</uicontrol> editing mode and you have
          access to the various features and actions that are available when <xref
            href="editing-xml-documents-author.dita">editing XML documents in
              <uicontrol>Author</uicontrol> mode</xref></ph>.</p>
      <p id="p_sqw_wt3_45b" product="editor editorEclipse">When opening a detected OpenAPI document
        in <uicontrol>Author</uicontrol> mode, you have access to some form controls, collapsible
        sections, descriptions can be edited inline in a text area that features syntax
        highlighting, and other features to help you visualize and edit these documents. Also, when
        editing OpenAPI files in <uicontrol>Author</uicontrol> mode, a <uicontrol>+ Markdown Syntax
          Highlight</uicontrol> CSS style can be selected from the <uicontrol>Styles</uicontrol>
        drop-down menu (available on the toolbar) to visualize descriptions with Markdown style
        syntax highlights.</p>
      <note type="tip" id="note_otk_cgk_54b">There is an OpenAPI sample document named
          <filepath>petsore.json</filepath> located in
          <filepath>[OXYGEN-INSTALL-DIR]/samples/json/openapi</filepath> that you can use to see how
        these documents are rendered in <ph keyref="product"/>.</note>
    </section>
    <section id="section_rm1_txf_ktb">
      <title>Validation and Content Completion</title>
      <p id="p_sm1_txf_ktb">Validation and content completion is supported in <ph keyref="product"/>
        for OpenAPI documents (version 2.0, 3.0, 3.1). The validation and content completion in
        OpenAPI documents are driven by schemas according to the OpenAPI version in the document.
        Each of the three frameworks (OpenAPI 2.0, OpenAPI 3.0, and OpenAPI 3.1) have a unique
        schema specified for content completion and validation. When opening an OpenAPI document (in
        JSON or YAML format), <ph keyref="product"/> automatically associates the corresponding
        schema based on the OpenAPI version of the document.</p>
    </section>
    <section id="section_vvs_vvd_1rb">
      <title>Resources</title>
      <ul id="ul_rll_xfn_dtb">
        <li product="developer editor json" irina="irina">​ <ph keyref="product"/> ​includes a tool for generating
          documentation for ​ ​OpenAPI​ components in HTML format: <xref
            href="openapi-documentation-generator.dita"/>.</li>
        <li product="developer editor json" irina="irina"><ph keyref="product"/> includes a testing tool for
            <term>OpenAPI</term> files: <xref href="openapi-tester.dita"/>.</li>
        <li id="li_us3_yfn_dtb" irina="irina">For more details about the <i>OpenAPI Specification</i>, along with
          example documents, go to <xref href="https://spec.openapis.org/oas/latest.html"
            format="html" scope="external"/>.</li>
        <li id="li_vzk_cnp_dvb" irina="irina"><xref href="https://www.youtube.com/watch?v=1WcETCUFqlw"
            format="html" scope="external">Video: <b>OpenAPI Document Editing in Oxygen XML
              Editor</b></xref></li>
        <li id="li_fzt_xfn_dtb" irina="irina"><xref href="https://www.youtube.com/watch?v=gKdabeh49Qk"
            format="html" scope="external">Webinar: <b>OpenAPI Editing, Testing, and
            Documenting</b></xref></li>
        <li id="li_mfk_vm5_vvb" irina="irina"><xref
            href="https://www.oxygenxml.com/events/2022/webinar_openapi_support_in_oxygen.html"
            format="html" scope="external">Webinar: <b>OpenAPI/AsyncAPI Support in
          Oxygen</b></xref></li>
      </ul>
    </section>
  </body>
</topic>
