<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="example-custom-dita-ot-plugin">
  <title>Example: Creating a DITA-OT Plugin for Embedding Video Resources</title>
  <body>
    <p id="p_unn_dgk_54b">To offer a detailed example of the steps required to create a new <b>DITA Open Toolkit</b>
      <xref keyref="glossentry_plugin"><term>plugin</term></xref>, this topic uses an example of
      creating an <b>XSLT</b> customization <term>plugin</term> that provides support for
      referencing video and audio content using the DITA <xmlelement>object</xmlelement> element and then
      publishing to <b>HTML</b> and <b>PDF</b> output formats. This <term>plugin</term>
        (<b>com.oxygenxml.media</b>) is available in the <b>DITA Open Toolkit</b> distribution that
      comes bundled with the latest version of <ph keyref="product"/>, but these instructions show
      you how you could create it if it were not included.</p>
    <p id="p_vnn_dgk_54b">The following procedure is meant to help you with creating the <term>plugin</term>:</p>
    <p id="p_wnn_dgk_54b">
      <ol id="ol_icd_rdt_pm">
        <li id="li_xnn_dgk_54b" irina="irina">Create a folder for your <term>plugin</term> in the DITA-OT <b>plugins</b> folder
              (<filepath><term keyref="glossentry_dita_ot_dir"/>/plugins/</filepath>).</li>
        <li id="li_ynn_dgk_54b" irina="irina">
          <p id="p_znn_dgk_54b">Create a <b>plugin.xml</b> file (in the same <term>plugin</term> folder) that contains
            the extension points of the <term>plugin</term>.<note id="note_a4n_dgk_54b">You can easily create this file by
              using the <uicontrol>DITA-OT Plugin</uicontrol> template that is included in <ph
                keyref="product"/> (from the <xref href="new-dialog-sa.dita#new-dialog-sa"
                product="author editor"><uicontrol>New</uicontrol> document wizard</xref><xref
                href="creating-from-templates.dita#creating-from-templates"
                product="authorEclipse editorEclipse"><uicontrol>New from templates</uicontrol>
                wizard</xref> you can find this template in <menucascade>
                <uicontrol>Framework templates</uicontrol>
                <uicontrol>DITA</uicontrol>
                <uicontrol>plugin</uicontrol>
              </menucascade>).</note></p>
          <p id="p_b4n_dgk_54b"><u><b>Example: Media Plugin
            File</b></u><codeblock outputclass="language-xml" id="codeblock_c4n_dgk_54b">&lt;plugin id="com.oxygenxml.media">
  &lt;feature extension="package.support.name" value="Oxygen XML Editor Support"/>
  &lt;feature extension="package.support.email" value="support@oxygenxml.com"/>
  &lt;feature extension="package.version" value="21.0"/>
  &lt;feature extension="dita.xsl.xhtml" value="xhtmlMedia.xsl" type="file"/>
  &lt;feature extension="dita.xsl.xslfo" value="pdfMedia.xsl" type="file"/>
&lt;/plugin></codeblock></p>
          <p id="p_d4n_dgk_54b">The most important extensions in it are the references to the XSLT stylesheets that
            will be used to style the HTML and PDF outputs. </p>
          <p id="p_e4n_dgk_54b">You can find other <b>DITA-OT</b>
            <term>plugin</term> extension points here: <xref
              href="http://www.dita-ot.org/dev/extension-points/extension-points-by-plugin.html"
              format="html" scope="external"/>.</p>
        </li>
        <li id="li_f4n_dgk_54b" irina="irina">
          <p id="p_g4n_dgk_54b">Create an XSLT stylesheet to customize the output types. In this example, to customize
            the HTML output, it is necessary to create an XSLT stylesheet called
              <b>xhtmlMedia.xsl</b> (in the same <term>plugin</term> folder).<note type="tip" id="note_h4n_dgk_54b">You
              can <ph product="author editor">use the <xref
                  href="find-and-replace-text-in-files.dita#find-and-replace-text-in-files"
                    ><uicontrol>Find/Replace in Files</uicontrol> action</xref> to </ph>find an XSLT
              stylesheet with content that is similar to the desired output and use it as a template
              to overwrite parts of your stylesheet. For example, suppose you want to overwrite HTML
              content produced from a DITA <b>codeblock</b> element. Since a DITA
                <xmlelement>object</xmlelement> element has the <xmlatt>class</xmlatt> attribute
              value <codeph>- topic/object </codeph>, you can take part of the class attribute value
                (<b>topic/object</b>) and search the <b>DITA-OT</b> resources for a similar
              stylesheet. The search might find the XSLT stylesheet <filepath><term
                  keyref="glossentry_dita_ot_dir"
                />/plugins/org.dita.xhtml/xsl/xslhtml/xsl/xslhtml/dita2htmlImpl.xsl</filepath>.</note></p>
          <p id="p_i4n_dgk_54b">You can use it as a starting point to overwrite the <b>xhtmlMedia.xsl</b> stylesheet.
            For example, the results might
            be:<codeblock outputclass="language-xml" id="codeblock_j4n_dgk_54b">&lt;xsl:template 
   match="*[contains(@class, ' topic/object ')][contains(@outputclass, 'video')]">
 &lt;video class="embed-responsive-item">
   &lt;xsl:call-template name="commonattributes"/>
   &lt;xsl:call-template name="setidaname"/>
   &lt;xsl:call-template name="copySource"/>
 &lt;/video>
&lt;/xsl:template></codeblock></p>
        </li>
        <li id="li_k4n_dgk_54b" irina="irina">
          <p id="p_l4n_dgk_54b">Create additional XSLT stylesheets to customize all other desired output types. In this
            example, to customize the PDF output it is necessary to create an XSLT stylesheet called
              <b>pdfMedia.xsl</b> (in the same <term>plugin</term> folder).</p>
          <p id="p_m4n_dgk_54b">In this case, you might find an appropriate XSLT stylesheet called <filepath><term
                keyref="glossentry_dita_ot_dir"/>/plugins/org.dita.pdf2/xsl/fo/topic.xsl</filepath>
            to use as a starting point to overwrite the <b>pdfMedia.xsl</b> stylesheet, with results
            looking something like
            this:<codeblock outputclass="language-xml" id="codeblock_n4n_dgk_54b">&lt;!--Treat video, audio or iframe objects as links-->
&lt;xsl:template 
           match="*[contains(@class,' topic/object ')][@outputclass = 'video']">
    &lt;xsl:variable name="target" select="@data"/>
    &lt;xsl:variable name="baseDir">
      &lt;xsl:call-template name="substring-before-last">
       &lt;xsl:with-param name="text" select="@xtrf"/>
       &lt;xsl:with-param name="delim" select="'/'"/>
      &lt;/xsl:call-template>
    &lt;/xsl:variable>
  
     &lt;fo:inline xsl:use-attribute-sets="object">
       &lt;xsl:call-template name="commonattributes"/>
        &lt;xsl:if test="exists($target)">
           &lt;fo:basic-link external-destination="url({$target})" 
                                      xsl:use-attribute-sets="xref">
              &lt;xsl:value-of select="$target"/>
           &lt;/fo:basic-link>                        
        &lt;/xsl:if>
     &lt;/fo:inline>
&lt;/xsl:template></codeblock></p>
        </li>
        <li id="li_o4n_dgk_54b" irina="irina">
          <p id="p_p4n_dgk_54b">To install the created <term>plugin</term> in the <b>DITA-OT</b>,
            run the built-in transformation scenario called <xref
              href="ditamap-run-dita-ot-integrator.dita#ditamap-run-dita-ot-integrator"
                ><uicontrol>Integrate/Install DITA-OT Plugins</uicontrol></xref> by executing it
            from the <xref
              href="builtin-transformation-scenarios.dita#builtin-transformation-scenarios"
                  ><uicontrol><image href="../img/ApplyStyleSheet16.png" id="image_qwt_3ts_yq"
                />Apply Transformation Scenario(s)</uicontrol> dialog box</xref>. If the integrator
            is not visible, select the <b>Show all scenarios</b> option that is available in the
                <uicontrol><image href="../img/Settings16.png" id="image_km5_xrs_yq"
              />Settings</uicontrol> drop-down menu. For more information, see <xref
              href="dita-ot-install-plugin.dita"/>.</p>
          <p id="p_q4n_dgk_54b"><b>Results of running the integrator using the media plugin example:</b></p>
          <p id="p_r4n_dgk_54b">XSLT content is applied with priority when publishing to both HTML and PDF outputs.<ol
              id="ol_vnx_h2t_pm">
              <li id="li_s4n_dgk_54b" irina="irina">
                <p id="p_t4n_dgk_54b">For the HTML output, in the XSLT stylesheet <filepath><term
                      keyref="glossentry_dita_ot_dir"
                    />/plugins/org.dita.xhtml/xsl/dita2html-base.xsl</filepath>, a new import
                  automatically
                  appeared:<codeblock outputclass="language-xml" id="codeblock_u4n_dgk_54b">&lt;xsl:import href="../plugins/com.oxygenxml.media/xhtmlMedia.xsl"/&gt;</codeblock></p>
                <p id="p_v4n_dgk_54b">This import is placed after all base imports and thus has a higher priority. For
                  more information about imported template precedence, see: <xref
                    href="http://www.w3.org/TR/xslt#import" format="html" scope="external"/>.</p>
              </li>
              <li id="li_w4n_dgk_54b" irina="irina">Likewise, for the PDF output, in the top-level stylesheet <filepath><term
                    keyref="glossentry_dita_ot_dir"
                  />/plugins/org.dita.pdf2/xsl/fo/topic2fo_shell_fop.xsl</filepath>, a new import
                statement
                appeared:<codeblock outputclass="language-xml" id="codeblock_x4n_dgk_54b">&lt;xsl:import href="../../../com.oxygenxml.media/pdfMedia.xsl"/&gt;</codeblock></li>
            </ol></p>
        </li>
      </ol>
    </p>
    <p id="p_y4n_dgk_54b">Now, you can distribute your <term>plugin</term> folder to anyone that has a DITA-OT
      installation along with some simple installation notes. Your customization will work provided
      the templates you are overwriting have not changed from one DITA-OT distribution to the other.
    </p>
  </body>
  <related-links>
    <linklist>
      <title>Related Information:</title>
      <link format="html" href="http://www.dita-ot.org/" scope="external">
        <linktext>DITA Open Toolkit Documentation</linktext>
      </link>
    </linklist>
  </related-links>
</topic>
