<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="SVG-documents">
  <title>Editing SVG Files</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>SVG files</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p id="p_ush_cgk_54b"><i>SVG</i> (Scalable Vector Graphics) is a platform for two-dimensional graphics. It has two
      parts: an XML-based file format and a programming API for graphical applications. Some of the
      key features include support for shapes, text, and embedded raster graphics with many painting
      styles, scripting through languages such as <i>ECMAScript</i>, and support for animation.</p>
    <p id="p_vsh_cgk_54b">SVG is a vendor-neutral, open standard that has important industry support. Companies such as
      Adobe, Apple, and IBM have contributed to its W3C specifications. Many documentation <xref
        keyref="glossentry_framework"><term>frameworks</term></xref> (including DocBook) have
      support for SVG by defining the graphics directly in the document.</p>
    <p id="p_wsh_cgk_54b"><ph keyref="product"/> adds SVG support by using the <xref
        href="http://xml.apache.org/batik/" scope="external" format="html">Batik distribution</xref>
      package (an open source project developed by the Apache Software Foundation) and the <xref
        href="using-XML-Catalogs.dita">default <term>XML Catalog</term></xref> resolves the SVG
        DTD.<note id="note_xsh_cgk_54b">Batik partially supports SVG 1.1. For a detailed list of supported elements,
        attributes, and properties, see the <xref
          href="http://xmlgraphics.apache.org/batik/status.html" format="html" scope="external"
          >Batik Implementation Status</xref> page.</note></p>
    <section id="how_to_render_svg_images_that_use_java_scripting">
      <title>How to Render SVG Images that Use Java Scripting</title>
      <ol id="ol_ysh_cgk_54b">
        <li id="li_zsh_cgk_54b" irina="irina">Copy the <filepath>js.jar</filepath> library from the <xref
            href="http://xml.apache.org/batik/" scope="external" format="html">Batik
            distribution</xref> into the <ph keyref="product"/>
          <filepath>lib</filepath> folder.</li>
        <li id="li_ath_cgk_54b" irina="irina">Restart the application.</li>
      </ol>
    </section>
    <section id="svg_12_rendering_issues">
      <title>SVG 1.2 Rendering Issues</title>
      <p id="p_bth_cgk_54b"><ph keyref="product"/> uses the <i>Apache Batik</i> open source library to render SVG
        images and it only has partial support for SVG 1.2. For more information, see <xref
          href="http://xmlgraphics.apache.org/batik/dev/svg12.html" format="html" scope="external"
        />. </p>
      <p id="p_cth_cgk_54b">This partial support could lead to some rendering issues in <ph keyref="product"/>. For
        example, if you are using the <term>Inkscape</term> SVG editor, it is possible for it to
        save the SVG as 1.1, while using SVG 1.2 elements (such as <xmlelement>flowRoot</xmlelement>) inside
        it. This means that the image will not be properly rendered inside the application.<note
          product="author editor authorEclipse editorEclipse" id="note_dth_cgk_54b">SVG images shown in the
            <uicontrol>Author</uicontrol> visual editing mode are rendered as static images, without
          support for animations and JavaScript.</note></p>
    </section>
  </body>
</topic>
