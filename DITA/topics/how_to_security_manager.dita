<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="how_to_security_manager">
  <title>Security Manager</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>File permissions</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p id="p_jnr_dgk_54b">By default, <ph keyref="webappProduct"/> comes with Java Security Manager
      configured. It is enabled by default when using the <b>Windows Installer</b>, <b>Linux
        Installer</b>, or <b>All Platforms Kit</b>. When enabled, it only allows the minimal file
      access permissions that are required for the application to function properly:<ul
        id="ul_rjs_5hd_cr">
        <li id="li_knr_dgk_54b" irina="irina"><i>READ</i> access to the directory where the <ph
            keyref="webappProduct"/> is deployed.</li>
        <li id="li_lnr_dgk_54b" irina="irina"><i>READ</i> and <i>WRITE</i> access to the application's working
          directory.</li>
        <li id="li_mnr_dgk_54b" irina="irina"><i>READ</i> and <i>WRITE</i> access to JVM's temporary
          directory.</li>
      </ul></p>
    <section id="disabling_security_mode">
      <title>Disabling Security Manager</title>
      <p id="p_nnr_dgk_54b">To disable the default security mode that only allows minimal file permissions, follow this
        procedure (depending on your installation method):</p>
      <p id="p_onr_dgk_54b"><u><i><b>Windows Installer</b></i></u><ol id="ol_pnr_dgk_54b">
          <li id="li_qnr_dgk_54b" irina="irina">Go to the installation directory of <ph keyref="webappProduct"/>.</li>
          <li id="li_rnr_dgk_54b" irina="irina">Launch <uicontrol>Manage Web Author Service</uicontrol>.</li>
          <li id="li_snr_dgk_54b" irina="irina">Go to the <uicontrol>Java</uicontrol> tab.</li>
          <li id="li_tnr_dgk_54b" irina="irina">In the <uicontrol>Java Options</uicontrol> section, remove the
              <codeph>-Djava.security.manager</codeph> system property.</li>
          <li id="li_unr_dgk_54b" irina="irina">Click <uicontrol>Apply</uicontrol>.</li>
          <li id="li_vnr_dgk_54b" irina="irina"><xref href="webauthor-restart.dita#webauthor-restart">Restart the
            application</xref>.</li>
        </ol></p>
      <p id="p_wnr_dgk_54b"><u><i><b>Linux Installer or All Platforms Kit</b></i></u><ol id="ol_xnr_dgk_54b">
          <li id="li_ynr_dgk_54b" irina="irina">Go to the installation directory of <ph keyref="webappProduct"/>.</li>
          <li id="li_znr_dgk_54b" irina="irina">Edit the <filepath>oXygenXmlWebAuthor.vmoptions</filepath> file.</li>
          <li id="li_a4r_dgk_54b" irina="irina">Remove the <codeph>-Djava.security.manager</codeph> system property.</li>
          <li id="li_b4r_dgk_54b" irina="irina">Save the file.</li>
          <li id="li_c4r_dgk_54b" irina="irina"><xref href="webauthor-restart.dita#webauthor-restart">Restart the
            application</xref>.</li>
        </ol></p>
    </section>
    <section id="enabling_security_mode">
      <title>Enabling Security Manager</title>
      <p id="p_d4r_dgk_54b">To enable security mode, use the following procedure (depending on your installation
        method):</p>
      <p id="p_e4r_dgk_54b"><u><i><b>Windows Installer</b></i></u><ol id="ol_f4r_dgk_54b">
          <li id="li_g4r_dgk_54b" irina="irina">Go to the installation directory of <ph keyref="webappProduct"/>.</li>
          <li id="li_h4r_dgk_54b" irina="irina">Launch <uicontrol>Manage Web Author Service</uicontrol>.</li>
          <li id="li_i4r_dgk_54b" irina="irina">Go to the <uicontrol>Java</uicontrol> tab.</li>
          <li id="li_j4r_dgk_54b" irina="irina">In the <uicontrol>Java Options</uicontrol> section, add the
              <codeph>-Djava.security.manager</codeph> system property.</li>
          <li id="li_k4r_dgk_54b" irina="irina">Click <uicontrol>Apply</uicontrol>.</li>
          <li id="li_l4r_dgk_54b" irina="irina"><xref href="webauthor-restart.dita#webauthor-restart">Restart the
            application</xref>.</li>
        </ol></p>
      <p id="p_m4r_dgk_54b"><u><i><b>Linux Installer or All Platforms Kit</b></i></u><ol id="ol_n4r_dgk_54b">
          <li id="li_o4r_dgk_54b" irina="irina">Go to the installation directory of <ph keyref="webappProduct"/>.</li>
          <li id="li_p4r_dgk_54b" irina="irina">Edit the <filepath>oXygenXmlWebAuthor.vmoptions</filepath> file.</li>
          <li id="li_q4r_dgk_54b" irina="irina">Add the <codeph>-Djava.security.manager</codeph> property.</li>
          <li id="li_r4r_dgk_54b" irina="irina">Save the file.</li>
          <li id="li_s4r_dgk_54b" irina="irina"><xref href="webauthor-restart.dita#webauthor-restart">Restart the
            application</xref>.</li>
        </ol></p>
      <p id="p_t4r_dgk_54b"><u><i><b>WAR distribution</b></i></u> (when deployed on an Apache Tomcat server)<ol
          id="ul_ojh_g3d_cr">
          <li id="li_u4r_dgk_54b" irina="irina">Edit the <filepath>catalina.policy</filepath> file and add the following
              snippet:<codeblock outputclass="language-ini" id="codeblock_v4r_dgk_54b">grant codeBase "file:${catalina.base}/webapps/oxygenxml-web-author/-" {
  // Oxygen uses System properties for various configuration purposes.
  permission java.util.PropertyPermission "*", "read,write";
  // Oxygen custom protocols need access to network.
  permission java.net.NetPermission "*";
  permission java.net.SocketPermission "*", "accept,connect,listen,resolve";
  // The web framework used by Oxygen Webapp uses reflection and classloaders.
  permission java.lang.reflect.ReflectPermission "suppressAccessChecks";
  permission java.security.SecurityPermission "*";
  permission java.util.logging.LoggingPermission "control";
  permission java.lang.RuntimePermission "*";

  // Oxygen requires these permissions to connect to a URL.
  permission java.net.URLPermission "http:*", "*";
  permission java.net.URLPermission "https:*", "*";
  permission java.net.URLPermission "file:*", "*";

  // Oxygen should be allowed to read JVM jars
  permission java.io.FilePermission "${java.home}/-", "read";
	
  // Oxygen uses the JVM's java.io.tempdir for various file handling tasks.
  permission java.io.FilePermission "${java.io.tmpdir}/-", "read,write,delete";
  permission java.io.FilePermission "${java.io.tmpdir}", "read,write,delete";

  // Folder used by Oxygen to deploy the plugins to.
  permission java.io.FilePermission "${oxygen.data.dir}/-", "read,write,delete";
  permission java.io.FilePermission "${oxygen.data.dir}", "read,write,delete";
};
// The jar that contains sandboxing code.
grant codeBase 
  "jar:file:${catalina.base}/webapps/oxygenxml-web-author/WEB-INF/lib/
oxygen-sandbox.jar!/-" {
    permission java.security.AllPermission;
};
// Give all permissions to plugins code unless otherwise instructed by vendor.
grant codeBase "file:${oxygen.data.dir}/plugins/-" {
    permission java.security.AllPermission;
};
// Give all permissions to frameworks code unless otherwise instructed by vendor
grant codeBase "file:${oxygen.data.dir}/frameworks/-" {
    permission java.security.AllPermission;
};
...</codeblock><note id="note_w4r_dgk_54b">Replace
                <codeph>oxygenxml-web-author</codeph> with the name of your deployment of <ph
                keyref="webappProduct"/>.</note></li>
          <li id="li_x4r_dgk_54b" irina="irina">Start the Apache Tomcat server using the <codeph>-security</codeph> flag.</li>
        </ol></p>
    </section>
    <section id="section_hx3_qvc_drb">
      <title>Security Manager Restrictions</title>
      <p id="p_ix3_qvc_drb">
        <ul id="ul_cdg_svc_drb">
          <li id="li_ddg_svc_drb" irina="irina"><term>XML External Entities</term> that reference files inside JAR
            archives are not allowed.</li>
        </ul>
      </p>
    </section>
    <section id="configuring_file_permissions_to_custom_locations">
      <title>Configuring File Permissions to Custom Locations</title>
      <p id="p_y4r_dgk_54b">There are cases when the <ph keyref="webappProduct"/> needs to access files system
        resources, but due to security reasons, you want to prevent your users from opening them
        directly in the <ph keyref="webappProduct"/> editing page using the
          <filepath>file://</filepath> protocol.</p>
      <p id="p_z4r_dgk_54b">You can do this by following these steps:<ol id="ul_rfq_nvr_qr">
          <li id="li_apr_dgk_54b" irina="irina">Edit the <filepath>catalina.policy</filepath> file and add a line such
            as:<codeblock outputclass="language-java" id="codeblock_bpr_dgk_54b">permission java.io.FilePermission "path/to/yourSecretDir/-", "read,write,delete";
permission java.io.FilePermission "path/to/yourSecretDir", "read,write,delete";</codeblock></li>
          <li id="li_cpr_dgk_54b" irina="irina">Use the following system property when starting the Tomcat
              server:<codeblock outputclass="language-ini" id="codeblock_dpr_dgk_54b">-Dfile.protocol.blacklist=/path/to/yourSecretDir</codeblock><note id="note_epr_dgk_54b">Use
              the value of <codeph>path.separator</codeph> system property to separate more
              directories. For example, under Linux, the value of <codeph>path.separator</codeph>
              property is a colon punctuation character <codeph>:</codeph>.</note></li>
        </ol></p>
    </section>
    <section id="section_u2x_dzv_brb">
      <title>Security Options</title>
      <p><ph keyref="webappProduct"/> comes with several security <xref
          href="customizing-options.dita#customizing-options/oxygen_standalone_options_supported_by_web_author"
          >options</xref> preconfigured and they may prevent loading some documents (for example, in
        development mode). These options are:</p>
      <p>
        <ul id="ul_rt3_4zv_brb">
          <li irina="irina"><uicontrol>ignore.absolute.file.system.entities</uicontrol> - If set to <b>true</b>
            (default value), system entities with an absolute URL (<filepath>file://URL</filepath>)
            are ignored.</li>
          <li irina="irina"><uicontrol>ignore.extenal.entities.outside.frameworks</uicontrol> - If set to
              <b>true</b> (default value), XML external entities are resolved only if their target
            is inside a framework folder in the DITA-OT folder.</li>
          <li irina="irina"><uicontrol>block.cross.protocol.system.entities</uicontrol> - If set to <b>true</b>
            (default value), XML external entities are blocked if their target URL does not have the
            same protocol as the URL of the file where the entity is declared.</li>
          <li irina="irina"><uicontrol>block.cross.protocol.author.references</uicontrol> - If set to <b>true</b>
            (default value), Author references (for example DITA <codeph>conref</codeph>) are
            blocked if their target URL has a different protocol than the URL of the file that
            contains the referencing element.</li>
          <li id="li_kkn_ysc_drb" irina="irina"><uicontrol>author.display.references.expanded</uicontrol> - If set
            to <b>false</b>, referenced content is not expanded and displayed in the visual
            editor.</li>
          <li irina="irina"><uicontrol>enable.file.protocol</uicontrol> - If set to <b>false</b> (default value),
            users cannot open resources (documents, images, etc.) whose URL uses the
              <codeph>file</codeph> protocol.</li>
        </ul>
      </p>
      <note id="note_w5n_lwt_drb">XML external entities that use URLs with the <codeph>jar</codeph>
        protocol are blocked unless the XML file that declares the entity is loaded from an URLs
        with the <codeph>jar</codeph> protocol.</note>
    </section>
  </body>
</topic>
