<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="text-field-editor">
  <title>Text Field Form Control</title>
  <shortdesc>The <codeph>oxy_textfield</codeph> built-in form control is used for entering a single
    line of text in a graphical user interface box. A text field may include optional content
    completion capabilities, used to present and edit the value of an attribute or an
    element.</shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>CSS extensions<indexterm>Form Controls<indexterm>Text
            field</indexterm></indexterm></indexterm>
        <indexterm>Form Controls<indexterm>Text field</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p id="p_lwd_dgk_54b">The <codeph>oxy_textfield</codeph> form control supports the following properties:</p>
    <ul id="ul_mwd_dgk_54b">
      <li id="li_nwd_dgk_54b" irina="irina"><ph conkeyref="reusables-author-mode-customization/edit_property"/><ul
          conkeyref="reusables-author-mode-customization/edit_property_ul" id="ul_owd_dgk_54b">
          <li id="li_pwd_dgk_54b" irina="irina"/>
        </ul></li>
      <li id="li_qwd_dgk_54b" irina="irina"><ph conkeyref="reusables-author-mode-customization/columns-property"
        /></li>
      <li id="li_rwd_dgk_54b" irina="irina"><ph conkeyref="reusables-author-mode-customization/width-property"
        /></li>
      <li id="li_swd_dgk_54b" irina="irina"><ph
          conkeyref="reusables-author-mode-customization/fontInherit-property"/></li>
      <li id="li_twd_dgk_54b" irina="irina"><ph conkeyref="reusables-author-mode-customization/visible-property"
        /></li>
      <li id="li_uwd_dgk_54b" irina="irina"><ph conkeyref="reusables-author-mode-customization/values-property"
        /></li>
      <li id="li_vwd_dgk_54b" irina="irina"><ph conkeyref="reusables-author-mode-customization/tooltips-property"
        /></li>
      <li id="li_wwd_dgk_54b" irina="irina"><ph conkeyref="reusables-author-mode-customization/tooltip-property"
        /></li>
      <li id="li_xwd_dgk_54b" irina="irina"><ph conkeyref="reusables-author-mode-customization/color-property"
        /></li>
      <li id="li_ywd_dgk_54b" irina="irina"><uicontrol>hasMultipleValues</uicontrol> - Specifies if the text field
        allows multiple values separated by spaces or just a single value.<note
          id="note_zwd_dgk_54b">If the value is <codeph>false</codeph>, the <xref
            keyref="glossentry_content-completion-assistant"><term>Content Completion
              Assistant</term></xref> considers the entire text as the prefix for its proposals. If
          the value is <codeph>true</codeph> (the default value), the space is the delimiter for the
          values and thus it is not included in the prefix (the prefix will be whatever comes after
          the space).<p id="p_axd_dgk_54b">For example, suppose the possible values for your text
            field are: <codeph>value a</codeph>, <codeph>value b</codeph>, and <codeph>other
              values</codeph>. If the <codeph>hasMultipleValues</codeph> property is set to
              <codeph>true</codeph> and the user enters <userinput>"value "</userinput> (notice the
            space character after 'value') in the text field, the <term>Content Completion
              Assistant</term> will suggest all three values because the prefix is whatever comes
            after the space, and in this case the user did not enter anything after the space. If
            the <codeph>hasMultipleValues</codeph> property was set to <codeph>false</codeph>, the
              <term>Content Completion Assistant</term> would only suggest <codeph>value a</codeph>
            and <codeph>value b</codeph> because the space is considered part of the
          prefix.</p></note></li>
      <li id="li_bxd_dgk_54b" irina="irina"><ph conkeyref="reusables-author-mode-customization/hover-property-li"
        /><codeblock outputclass="language-css" id="codeblock_cxd_dgk_54b">p:before {
  content: oxy_textfield(hoverPseudoclassName, 'showBorder')
}
p:showBorder {
  border: 1px solid red;
}</codeblock></li>
    </ul>
    <p id="p_dxd_dgk_54b"><b><u>Example: <term>oxy_textfield</term> Form
      Control</u></b><codeblock outputclass="language-css" id="codeblock_exd_dgk_54b">element {
    content: "Label: "
        oxy_textfield(
            edit, "@my_attr",
            values, "value1, value2",
            color, "red",
            columns, 40);
}</codeblock></p>
    <note type="tip" id="note_fxd_dgk_54b">To insert a sample of the <codeph>oxy_textfield</codeph>
      form control in a CSS file <ph product="author developer editor">(or LESS file)</ph>, invoke
      the <xref keyref="glossentry_content-completion-assistant"><term>Content Completion
          Assistant</term></xref> by pressing <uicontrol
        conkeyref="reusable-oxygen-shortcuts-list/ctrl_space"/> and select the <image
        href="../img/CodeTemplates12.gif" id="image_fg1_12h_5r"/>
      <codeph>oxy_textfield</codeph> code template.<p id="p_gxd_dgk_54b"><ph
          conkeyref="reusables-author-mode-customization/samples-ph"/></p></note>
    <section id="section_jhq_vr2_w5b">
      <title>Resources</title>
      <p id="p_xpd_dgk_54b">For more information about form controls, watch our video
        demonstration:</p>
      <p id="p_ypd_dgk_54b"><object width="450" height="250"
          data="https://www.youtube.com/embed/-WY3wzkMSLM" outputclass="iframe">
          <param name="allowfullscreen" value="true"/>
        </object></p>
    </section>
  </body>
  <related-links>
      <link href="dg-oxygen-css-functions.dita"/>
      <link href="dg-visibility-css-extension.dita"/>
  </related-links>
</topic>
