<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="author-customize-smart-paste">
  <title>Customizing Smart Paste Support</title>
  <titlealts>
    <navtitle>Smart Paste</navtitle>
  </titlealts>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Framework customization<indexterm>Customizing Smart Paste
          mapping</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p id="p_ls1_dgk_54b">The <xref href="smart-paste-support.dita#smart-paste-support"><term>Smart Paste</term>
        feature</xref> preserves certain style and structure information when copying content from
      some of the most common applications and pasting into <xref
        href="smart-paste-support.dita#smart-paste-support/doc-types-sp-p"><term>frameworks</term>
        (document types) that support <term>Smart Paste</term></xref> in <ph keyref="product"/>. For
      other document types, the default behavior of the paste operation is to keep only the text
      content without the styling.</p>
    <p id="p_ms1_dgk_54b">The style of the pasted content can be customized by editing an XSLT stylesheet for a
      particular document type (<xref keyref="glossentry_framework"><term>framework</term></xref>).
      The XSLT stylesheet must accept an XHTML flavor of the copied content as input, and transform
      it to the equivalent XML markup that is appropriate for the target document type of the paste
      operation.</p>
    <section id="how_to_customize_the_smart_paste_mapping">
      <title>How to Customize the Smart Paste Mapping</title>
      <p id="p_ns1_dgk_54b">To customize the mapping between the markup of the copied content and the markup of the
        pasted content for a particular document type, follow these steps:<ol id="ol_os1_dgk_54b">
          <li id="li_ps1_dgk_54b" irina="irina">
            <p id="p_qs1_dgk_54b">Make sure the particular <term>framework</term> contains a folder named
                <filepath>resources</filepath> in the following path structure:</p>
            <p id="p_rs1_dgk_54b"><filepath>/frameworks/[Document Type]/resources</filepath></p>
          </li>
          <li id="li_ss1_dgk_54b" irina="irina">
            <p id="p_ts1_dgk_54b">Create an XSLT file named <filepath>xhtml2content.xsl</filepath> and save it in the
                <filepath>resources</filepath> folder for the particular <term>framework</term>.</p>
            <p id="p_us1_dgk_54b">For example: <filepath>/frameworks/[Document
                Type]/resources/xhtml2content.xsl</filepath></p>
          </li>
          <li id="li_vs1_dgk_54b" irina="irina">Add your customized styling in the XSLT file. A list of supported parameters can be
            found in the <xref
              href="#author-customize-smart-paste/supported_parameters_for_the_custom_xslt"
              format="dita"/> section below.<note type="tip" id="note_ws1_dgk_54b">The built-in DITA framework includes an
                <filepath>xhtml2ditaDriver.xsl</filepath> file (in <filepath><term
                  conkeyref="reusables-user-guide/oxy-install-dir"
                />/frameworks/dita/resources</filepath>) that imports various other stylesheets that
              apply cleanup and handle the conversion from the pasted HTML content to DITA. If you
              are using a custom extension of the DITA framework, you can copy the entire contents
              of the built-in <filepath>dita/resources</filepath> folder and customize the
              stylesheets according to your needs.</note></li>
          <li id="li_xs1_dgk_54b" irina="irina">You can test modifications done in the stylesheet by pasting content without having to
            restart <ph keyref="product"/>.</li>
        </ol></p>
      <p id="p_ys1_dgk_54b"><b>Result:</b> When you paste content from external applications (such as a web browser or
        and Office document) to a document that is open in <uicontrol>Author</uicontrol> mode, and
        that matches the particular <term>framework</term>, the styling from the
          <filepath>xhtml2content.xsl</filepath> stylesheet will be applied on the clipboard
        contents.</p>
      <p id="p_zs1_dgk_54b"><b>Customized Smart Paste Stylesheet
        Sample:</b><codeblock outputclass="language-xml" id="codeblock_at1_dgk_54b">&lt;xsl:stylesheet version="1.0"
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns:xhtml="http://www.w3.org/1999/xhtml"
  xmlns="urn:hl7-org:v3"
  exclude-result-prefixes="xsl xhtml">

  &lt;xsl:output method="xml" indent="no" omit-xml-declaration="yes"/>

  &lt;xsl:template match="xhtml:b | xhtml:strong">
    &lt;content styleCode="bold" >
      &lt;xsl:apply-templates select="@* | node()"/>
    &lt;/content>
  &lt;/xsl:template>

  &lt;xsl:template match="*">
    &lt;xsl:apply-templates select="@* | node()"/>
  &lt;/xsl:template>

  &lt;xsl:template match="@* | node()">
    &lt;xsl:copy>
      &lt;xsl:apply-templates select="@* | node()"/>
    &lt;/xsl:copy>
  &lt;/xsl:template>

&lt;/xsl:stylesheet></codeblock></p>
    </section>
    <section id="supported_parameters_for_the_custom_xslt">
      <title>Supported Parameters for the Custom Smart Paste XSLT</title>
      <p id="p_bt1_dgk_54b">The following parameters can be used in your XSLT stylesheet for customizing the
          <term>Smart Paste</term> mechanism:</p>
      <p id="p_ct1_dgk_54b">
        <dl id="dl_dt1_dgk_54b">
          <dlentry id="dlentry_et1_dgk_54b">
            <dt>inTableContext</dt>
            <dd>The custom XSLT stylesheet receives this parameter with a value of <b>true</b> if
              the end-user is pasting content inside a table.</dd>
          </dlentry>
          <dlentry id="dlentry_ft1_dgk_54b">
            <dt>folderOfPasteTargetXml</dt>
            <dd>A URL pointing to the folder where the currently edited XML document is located.
              This is used to save images relative to the current XML document.</dd>
          </dlentry>
          <dlentry id="dlentry_gt1_dgk_54b">
            <dt>context.path.names</dt>
            <dd>A sequence of element names showing the current context in the XML document where
              the paste occurred.</dd>
          </dlentry>
          <dlentry id="dlentry_ht1_dgk_54b">
            <dt>context.path.uris</dt>
            <dd>A sequence of namespaces, one for each context path name.</dd>
          </dlentry>
          <dlentry id="dlentry_it1_dgk_54b">
            <dt>context.path.separator</dt>
            <dd>The separator between the path names. Its value can be used to split the context
              path names to a sequence.</dd>
          </dlentry>
        </dl>
      </p>
      <p id="p_jt1_dgk_54b">By default, there is an extra check in place to ensure that the applied
        XSLT does not remove the original text from the pasted content. If there is a file called
          <filepath>externalPasteOptions.xml</filepath> in the <filepath>resources</filepath>
        folder, you can use it to specify the default behavior for checking if the XSLT stylesheet
        loses content during
        conversion:<codeblock outputclass="language-xml" id="codeblock_kt1_dgk_54b">&lt;!-- Options that control external paste 
(automatic conversions when pasting HTML and URL flavors from the clipboard). -->
&lt;pasteOptions>
    &lt;!-- True to check if the entire sequence of words which get pasted are
         converted to the target vocabulary. If the check fails, the content
         will be inserted as a simple sequence of words without any formatting. -->
    &lt;checkEntireContentIsFullyPreserved>true&lt;/checkEntireContentIsFullyPreserved>
&lt;/pasteOptions></codeblock></p>
    </section>
  </body>
  <related-links>
    <linklist>
      <title>Related Information:</title>
      <link href="smart-paste-support.dita#smart-paste-support"/>
      <link format="html" href="https://blog.oxygenxml.com/topics/howSpecialPasteWorksInOxygen.html"
        scope="external">
        <linktext>Oxygen XML Blog: How Special Paste Works in Oxygen (DITA)</linktext>
      </link>
      <link href="dg-drop-paste-handler.dita"/>
    </linklist>
  </related-links>
</topic>
