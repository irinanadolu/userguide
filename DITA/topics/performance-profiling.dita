<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="performance-profiling">
  <title>Performance Profiling of XSLT Stylesheets and XQuery Documents</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Debugging XSLT<indexterm>Performance profiling</indexterm></indexterm>
        <indexterm>XSLT Debugger perspective<indexterm>Performance profiling</indexterm></indexterm>
        <indexterm>Debugging XQuery<indexterm>Performance profiling</indexterm></indexterm>
        <indexterm>XQuery Debugger perspective<indexterm>Performance
          profiling</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p id="p_mpz_cgk_54b">Whether you are trying to identify a performance issue that is causing your production
      XSLT/XQuery transformation to not meet customer expectations or you are trying to proactively
      identify issues prior to deploying your XSLT/XQuery transformation, using the XSLT/XQuery
      profiler feature is essential to helping you save time and ultimately ensure a better
      performing, more scalable XSLT/XQuery transformation.</p>
    <p id="p_npz_cgk_54b">The XSLT/XQuery profiling feature can use any available XSLT/XQuery processor that can be
      used for debugging and it is available from the debugging <xref
        keyref="glossentry_perspective"><term>perspective</term></xref>.</p>
    <section id="enabling_the_profiler">
      <title>Enabling the Profiler</title>
      <p id="p_opz_cgk_54b">Enabling and disabling the profiler is controlled by the <xref
          href="debug-control-toolbar.dita#debug-control-toolbar/profiling"><uicontrol><image
              href="../img/Profiling16.png" id="image_orn_y2n_wr"/>/<image
              href="../img/ProfilingSelected16.png"/>Profiler</uicontrol> button from the debugger
          Control toolbar</xref>. The XSLT/XQuery profiler is off by default. This option is not
        available during a debugger session so you need to set it before starting the
        transformation. For information about a common debugging procedure, see <xref
          href="steps-in-typical-debug-process.dita"/>.</p>
    </section>
    <section id="profiling_information_views">
      <title>Profiling Information Views</title>
      <p id="p_ppz_cgk_54b">Immediately after enabling the profiler, two new information views are added to the current
        debugger <xref href="debug-info-view.dita">information views</xref>:</p>
      <ul id="ul_qpz_cgk_54b">
        <li id="li_rpz_cgk_54b" irina="irina"><xref href="invocation-tree-view.dita"><uicontrol>Invocation tree</uicontrol>
            view</xref> on left side</li>
        <li id="li_spz_cgk_54b" irina="irina"><xref href="hotspots-view.dita"><uicontrol>Hotspots</uicontrol> view</xref> on right
          side</li>
      </ul>
      <p id="p_tpz_cgk_54b">Profiling data is available only after the transformation ends successfully.</p>
      <p id="p_upz_cgk_54b">On the left side (<xref href="invocation-tree-view.dita"><uicontrol>Invocation
            tree</uicontrol> view</xref>), you can examine how style instructions are processed.
        This result view is also named call-tree, as it represents the order of style processing.
        The profiling result shows the duration time for each of the style-instruction including the
        time needed for its called children.</p>
      <p id="p_vpz_cgk_54b">On the right side (<xref href="hotspots-view.dita"><uicontrol>Hotspots</uicontrol>
          view</xref>), you can immediately spot the time the processor spent in each instruction.
        As an instruction usually calls other instructions, the used time of the called instruction
        is extracted from the duration time of the caller (the hotspot only presents the inherent
        time of the instruction).</p>
    </section>
    <section id="source_backmapping">
      <title>Source Backmapping</title>
      <p id="p_wpz_cgk_54b">In either the <xref href="invocation-tree-view.dita"><uicontrol>Invocation
          tree</uicontrol></xref> or <xref href="hotspots-view.dita"><uicontrol>Hotspots</uicontrol>
          view</xref>, you can use the backmapping feature to find the XSLT stylesheet or XQuery
        expression definition. Clicking the selected item causes <ph keyref="product"/> to highlight
        the XSLT stylesheet or XQuery expression source line where the instruction is defined.</p>
      <p id="p_xpz_cgk_54b">
        <fig id="figure-profiler-backmapping-oxygen" product="editor developer">
          <title>Source Backmapping</title>
          <image href="../img/sa_profiler_backmapping.png"/>
        </fig>
      </p>
      <p id="p_ypz_cgk_54b">
        <fig id="figure-profiler-backmapping-oxygenEclipse" product="editorEclipse developerEclipse">
          <title>Source Backmapping</title>
          <image href="../img/ec_profiler_backmapping.png"/>
        </fig>
      </p>
    </section>
    <section id="saving_and_customizing_profiling_data">
      <title>Saving and Customizing Profiling Data</title>
      <p id="p_zpz_cgk_54b">The profiling data can be saved (exported) into XML and HTML format. In either the <xref
          href="invocation-tree-view.dita"><uicontrol>Invocation tree</uicontrol></xref> or <xref
          href="hotspots-view.dita"><uicontrol>Hotspots</uicontrol> view</xref>, right-click
        anywhere in the view and select <uicontrol>Export to XML</uicontrol> or <uicontrol>Export to
          HTML</uicontrol>. The HTML report can be customized based upon the profiling raw data.
        When you select <uicontrol>Export to HTML</uicontrol>, <ph keyref="product"/> will save it
        as XML and apply an XSLT stylesheet to render the report as XML. You can customize these
        stylesheets to suit your needs. By default, they are located in: <filepath><term
            conkeyref="reusables-user-guide/oxy-install-dir"/>/frameworks/profiler/</filepath>.</p>
    </section>
    <section id="other_profiling_notes">
      <title>Other Profiling Notes</title>
      <p id="p_aqz_cgk_54b">
        <ul id="ul_bqz_cgk_54b">
          <li id="li_cqz_cgk_54b" irina="irina">If you want to change the <xref href="preferences-profiler.dita">XSLT/XQuery profiler
              settings</xref>, use the contextual menu and choose the corresponding <uicontrol>View
              settings</uicontrol> entry.</li>
          <li id="li_dqz_cgk_54b" irina="irina">Profiling exhaustive transformations may run into an <b>OutOfMemory</b> error due to
            the large amount of information being collected. If this is the case, you can close
            unused projects when running the profiling or use high values for Java VM options
              <codeph>-Xms</codeph> and <codeph>-Xmx</codeph>. If this does not help you can shorten
            your source XML file and try again.</li>
        </ul>
      </p>
    </section>
    <section id="section_qsd_1z2_w5b">
      <title>Resources</title>
      <p id="p_fqz_cgk_54b">For more information about the XSLT/XQuery Profiler, watch our video
        demonstration:</p>
      <p id="p_gqz_cgk_54b"><object width="450" height="250"
          data="https://www.youtube.com/embed/4ftHschjLqA" outputclass="iframe">
          <param name="allowfullscreen" value="true"/>
        </object></p>
    </section>
  </body>
</topic>
