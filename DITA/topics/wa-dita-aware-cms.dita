<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="wa-dita-aware-cms">
  <title>Integrating Web Author with a DITA-aware CMS</title>
  <body>
    <p id="p_qvr_dgk_54b"><ph keyref="webappProduct"/> supports the use of some API extensions and a method from
        <i>Oxygen XML Editor</i> that can be used to customize nodes within the <uicontrol>DITA
        Map</uicontrol> view. The following are supported:<ul id="ul_upq_yly_kjb">
        <li id="li_rvr_dgk_54b" irina="irina">
          <xref
            href="https://www.oxygenxml.com/InstData/Editor/SDK/javadoc/ro/sync/exml/workspace/api/editor/page/WSEditorPage.html#setReadOnly-java.lang.String-"
            format="html" scope="external"
              ><i>ro.sync.exml.workspace.api.standalone.ditamap.TopicRefTargetInfoProvider</i></xref>
          - API extension can be used to provide titles for topic references. This should be
          implemented as an optimization by a CMS that already has the titles of the topics cached
          in the database. By default, Web Author fetches each topic from the CMS, parses it, and
          extracts the title.</li>
        <li id="li_svr_dgk_54b" irina="irina">
          <xref
            href="https://www.oxygenxml.com/InstData/Editor/SDK/javadoc/ro/sync/exml/workspace/api/editor/page/WSEditorPage.html#setReadOnly-java.lang.String-"
            format="html" scope="external"
              ><i>ro.sync.exml.workspace.api.editor.page.ditamap.DITAMapNodeRendererCustomizer</i></xref>
          - API extension allows you to customize the rendering of information in the DITA Map view
          (for example, titles for topic references). This method is called after Web Author
          computes the title for topic references.</li>
        <li id="li_tvr_dgk_54b" irina="irina">
          <xref
            href="https://www.oxygenxml.com/InstData/Editor/SDK/javadoc/ro/sync/exml/workspace/api/editor/page/WSEditorPage.html#setReadOnly-java.lang.String-"
            format="html" scope="external"
              ><i>ro.sync.ecss.extensions.api.webapp.access.WebappPluginWorkspace.setDITAKeyDefinitionManagerProvider</i></xref>
          - This method sets an object that provides a DITA keys manager for each open document.
          This will override the Web Author's default behavior that will fetch the main DITA map and
          all the nested sub-maps from the CMS, parse them, and determine the keys.</li>
      </ul></p>
    <section id="section_tcb_bd5_dlb">
      <title>Setting the DITA Context Used to Load the Editor</title>
      <p id="p_uvr_dgk_54b">To open a topic with a specific DITA context, there are two options:</p>
      <p id="p_vvr_dgk_54b">
        <ul id="ul_m3z_hd5_dlb">
          <li id="li_wvr_dgk_54b" irina="irina">Use the <codeph>ditamap</codeph> and <codeph>dita.val.url</codeph>
            <xref
              href="webauthor-integrate-embedded-launch.dita#webauthor-integrate-embedded-launch/url_parameters"
              >URL parameters</xref> added to the <xref href="oxy-url.dita"
              ><term>OXY-URL</term></xref>.</li>
          <li id="li_xvr_dgk_54b" irina="irina">Use the <codeph>workspace.getEditingContextManager()</codeph> JavaScript API. A sample
            plugin that uses this API to set the DITA Map for some popular repository layouts is
            available on GitHub: <xref
              href="https://github.com/oxygenxml/web-author-sample-plugins/tree/master/web-author-impose-ditamap"
              format="html" scope="external"/>.</li>
        </ul>
      </p>
    </section>
    <section id="section_rct_wxl_pkb">
      <title>Changing the DITA Context After the Editor is Loaded</title>
      <p id="p_yvr_dgk_54b">When a topic is reused in multiple DITA contexts defined by a DITA map and DITAVAL filter,
        a CMS may provide the user a widget to switch between these contexts. To implement this
        behavior, you need to use the JavaScript API as in the following
        example:<codeblock outputclass="language-javascript" id="codeblock_zvr_dgk_54b">var map = "http://example.com/path/to/ditamap"; 
var filter = "http://example.com/path/to/ditaval"; 
var isDirty = editor.isDirty(); 
editor.getActionsManager() 
  .invokeOperation('ro.sync.servlet.operation.SetDitaMapOperation', { 
    ditamap: map, 
    ditaval: filter })
  .then(function(result) { 
    if (result === 'SUCCESS') { 
      var editingContextManager = workspace.getEditingContextManager();   
      editingContextManager.updateDitaContext(new sync.api.DitaContext(map, filter)); 
    } else { 
      alert('FAILED'); 
    } 
  }) 
  .thenAlways(function () { editor.setDirty(isDirty); });</codeblock></p>
    </section>
    <p id="p_awr_dgk_54b">where <codeph>map</codeph> and <codeph>filter</codeph> are the <xref href="oxy-url.dita"
        >OXY-URLs</xref> of the DITA map and DITAVAL filter files, respectively.</p>
  </body>
</topic>
