<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="customizing_ui">
  <title>Customizing the Web Author User Interface</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Customizing Web Author user interface</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p id="p_izs_dgk_54b">It is possible to customize the <ph keyref="webappProduct"/> user interface (including the
      side views, toolbars, contextual menu actions, and theme).</p>
    <section id="section_z4z_zzw_3bb">
      <title>Customizing the Toolbar and Contextual Menu Actions</title>
      <p id="p_jzs_dgk_54b">The <ph keyref="webappProduct"/> toolbar and contextual menu structure includes standard
        actions (such as <uicontrol>Undo</uicontrol>, <uicontrol>Redo</uicontrol>,
          <uicontrol>Cut</uicontrol>, etc.) as well as actions that are dictated by the framework
        configuration.</p>
      <p id="p_kzs_dgk_54b">There are several methods you can use to customize the actions that appear on the toolbar
        and contextual menu:<dl id="dl_lzs_dgk_54b">
          <dlentry id="dlentry_mzs_dgk_54b">
            <dt>Document Type Configuration in <b>Oxygen XML Editor/Author</b></dt>
            <dd>You can use the Document Type configuration dialog box in <b>Oxygen XML
                Editor/Author</b> (<menucascade>
                <uicontrol>Options</uicontrol>
                <uicontrol>Preferences</uicontrol>
                <uicontrol>Document Type Association</uicontrol>
                <uicontrol>[select framework]</uicontrol>
                <uicontrol>Edit</uicontrol>
              </menucascade>). This approach is entirely GUI-based and controls only the
              framework-specific configuration. You can add and remove actions, create drop-down
              sub-menus, or add separators.<note id="note_nzs_dgk_54b">If the framework contains <b>Author</b> mode
                operations (Java implementations of the
                  <codeph>ro.sync.ecss.extensions.api.AuthorOperation</codeph> interface), they can
                be enabled to be used by <ph keyref="webappProduct"/> using the
                  <codeph>ro.sync.ecss.extensions.api.WebappCompatible</codeph> annotation.
                  <b>Author</b> mode operations that use Java Swing components to display a
                graphical interface are not compatible with the <ph keyref="webappProduct"/> and
                they should not be annotated. If you want to prompt the user for input, you can use
                the <xref href="webapp_editor_variables.dita#webapp_editor_variables/edVar-ask"
                    ><i>${ask}</i> editor variable</xref> or use the JavaScript API.</note></dd>
          </dlentry>
          <dlentry id="dlentry_ozs_dgk_54b">
            <dt>Web Author JavaScript API</dt>
            <dd>
              <p id="p_pzs_dgk_54b">You can use the Web Author JavaScript API to <xref
                  keyref="jscript_api_customaction">add custom actions</xref> or <xref
                  keyref="jscript_api_removeaction">remove actions from the toolbar and contextual
                  menu</xref>.</p>
              <p id="p_qzs_dgk_54b">The advantages of using this approach include:<ul id="ul_rzs_dgk_54b">
                  <li id="li_szs_dgk_54b" irina="irina">You can remove any action, even standard ones.</li>
                  <li id="li_tzs_dgk_54b" irina="irina">You can remove actions from all the places where they appear in the GUI.</li>
                  <li id="li_uzs_dgk_54b" irina="irina">You can dynamically remove actions (for example, based on the user role). </li>
                  <li id="li_vzs_dgk_54b" irina="irina">You can add actions that have a web-based GUI.</li>
                </ul></p>
            </dd>
          </dlentry>
        </dl></p>
        <p id="p_wzs_dgk_54b">The base configuration of the toolbar and contextual menu for built-in frameworks, such
        as DITA or DocBook, can be viewed in the <xref
          href="https://www.oxygenxml.com/doc/ug-editor/topics/the-document-type-dialog.html"
          format="html" scope="external"><uicontrol>Document Type Configuration</uicontrol> dialog
          box</xref>. However, there will be some differences with respect to what you see in the
          <ph keyref="webappProduct"/> user interface:<ol id="ol_nqh_ljd_y3b">
          <li id="li_xzs_dgk_54b" irina="irina">Some actions are added <xref
              href="customizing_frameworks.dita#customizing_frameworks/adding_javascript_code_to_a_framework"
              >using JavaScript code in the framework</xref>. They are present in the <ph
              keyref="webappProduct"/> toolbar but not visible in the <xref
              href="https://www.oxygenxml.com/doc/ug-editor/topics/the-document-type-dialog.html"
              format="html" scope="external"><uicontrol>Document Type Configuration</uicontrol>
              dialog box</xref>.</li>
          <li id="li_yzs_dgk_54b" irina="irina">Some actions use an <codeph>AuthorOperation</codeph> that is not compatible with <ph
              keyref="webappProduct"/>. They are visible in the <xref
              href="https://www.oxygenxml.com/doc/ug-editor/topics/the-document-type-dialog.html"
              format="html" scope="external"><uicontrol>Document Type Configuration</uicontrol>
              dialog box</xref> but they are not present in the <ph keyref="webappProduct"/>
            toolbar.</li>
          <li id="li_zzs_dgk_54b" irina="irina">Some actions are not compatible with <ph keyref="webappProduct"/> as in the previous
            case, but they are replaced with another action <xref
              href="customizing_frameworks.dita#customizing_frameworks/adding_javascript_code_to_a_framework"
              >using JavaScript code in the framework</xref>, which is compatible. They will appear
            both in <ph keyref="webappProduct"/> and in the <xref
              href="https://www.oxygenxml.com/doc/ug-editor/topics/the-document-type-dialog.html"
              format="html" scope="external"><uicontrol>Document Type Configuration</uicontrol>
              dialog box</xref>.</li>
        </ol></p>
    </section>
    <section id="customizing_the_header_bar">
      <title>Customizing the Header Bar</title>
      <p id="p_a1t_dgk_54b">If you embed Web Author in a web page, you may want to remove the header bar that displays
        the logo, the name of the file, and the name of the author. You can hide it using the <xref
          keyref="jscript_api_hideAppBar"><codeph>hideAppBar()</codeph> JavaScript API</xref>.</p>
    </section>
    <section id="section_k3t_l1x_3bb">
      <title>Customizing the Side Views</title>
      <p id="p_b1t_dgk_54b">You can customize the side-views that appear in the editor by using the JavaScript API as
        described in the <xref keyref="jscript_api_customview">Customizing the Side Views
          tutorial</xref>.</p>
    </section>
    <section id="section_d3j_p1x_3bb">
      <title>Customizing the Theme</title>
      <p id="p_c1t_dgk_54b">Although Web Author has a neutral theme, to better match the theme of your application, you
        can customize it by injecting a custom CSS file using JavaScript code from a plugin. The CSS
        file should also be served by your plugin using the <xref
          href="customizing_plugins.dita#customizing_plugins/webapp-static-resource-folder"
            ><codeph>WebappStaticResourcesFolder</codeph> extension type</xref>.</p>
    </section>
  </body>
</topic>
