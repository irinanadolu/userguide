<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="content-completion-xslt-stylesheets">
  <title>Content Completion in XSLT Stylesheets</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>XSLT<indexterm>Content completion</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p id="p_qr1_cgk_54b">The list of proposals offered by the <xref keyref="glossentry_content-completion-assistant"
          ><term>Content Completion Assistant</term></xref> in XSLT are context-sensitive and
      includes proposals that are valid at the current cursor position. It can be manually activated
      with the <uicontrol conkeyref="reusable-oxygen-shortcuts-list/ctrl_space"/> shortcut.</p>
    <p id="p_rr1_cgk_54b">You can enhance the list of proposals by specifying an additional schema. This schema is
      defined in the <xref href="preferences-content-completion-xsl.dita"><uicontrol>Content
          Completion / XSLT</uicontrol> preferences</xref> page and can be any of the following: XML
      Schema, DTD, RELAX NG schema, or NVDL schema.</p>
    <p id="p_sr1_cgk_54b">
      <fig id="fig_tr1_cgk_54b">
        <title>XSLT Content Completion Assistant</title>
        <image href="../img/content-completion-xsl.png"/>
      </fig>
    </p>
    <p conkeyref="reusables-editing-documents/cca_text_mode" id="p_ur1_cgk_54b"/>
    <p id="p_vr1_cgk_54b">The <term>Content Completion Assistant</term> proposes numerous item types (such as
      templates, variables, parameters, keys, etc.) that are defined in the current stylesheet, and
      in the imported and included XSLT stylesheets. The <term>Content Completion Assistant</term>
      also includes <xref href="code-templates.dita">code templates that can be used to quickly
        insert code fragments</xref> into stylesheets.</p>
    <note id="note_wr1_cgk_54b">For XSL and XSD resources, the <term>Content Completion Assistant</term> collects its
      components starting from the <xref keyref="glossentry_main-file"><term>main
        files</term></xref>. The <term>main files</term> can be defined in the project or in the
      associated validation scenario. For further details about the <term>Main Files</term>
      support go to <xref href="defining_main_files.dita#defining_main_files">Defining Main
        Files at Project Level</xref>. </note>
    <p id="p_xr1_cgk_54b">The extension functions included in the Saxon <ph
        keyref="saxon6FullVersion"/> and <ph
        keyref="saxon9FullVersion"/> transformation
      engines are presented in the content completion list only if the Saxon namespace
        (<i>http://saxon.sf.net</i> for XSLT version 2.0 / 3.0 or <i>http://icl.com/saxon</i> for
      XSLT version 1.0) is declared and one of the following conditions is true:<ul id="ul_yr1_cgk_54b">
        <li id="li_zr1_cgk_54b" irina="irina">The edited file has a transformation scenario that uses as transformation engine Saxon
            <ph keyref="saxon6FullVersion"/> (for XSLT version 1.0), Saxon <ph
            keyref="saxon9FullVersion"/> PE or Saxon <ph keyref="saxon9FullVersion"/> EE (for XSLT
          version 2.0 / 3.0).</li>
        <li id="li_as1_cgk_54b" irina="irina">The edited file has a validation scenario that uses as validation engine Saxon <ph
            keyref="saxon6FullVersion"/> (for version 1.0), Saxon <ph keyref="saxon9FullVersion"/>
          PE or Saxon <ph keyref="saxon9FullVersion"/> EE (for version 2.0 / 3.0).</li>
        <li id="li_bs1_cgk_54b" irina="irina">The validation engine specified in <xref href="preferences-xslt.dita">Options</xref>
          page is Saxon <ph keyref="saxon6FullVersion"/> (for version 1.0), Saxon <ph
            keyref="saxon9FullVersion"/> PE or Saxon <ph keyref="saxon9FullVersion"/> EE (for
          version 2.0 / 3.0).</li>
      </ul></p>
    <p id="p_cs1_cgk_54b">Additionally. the Saxon-CE-specific extension functions and instructions are presented in the
      list of content completion assistance proposals only if the
        <codeph>http://saxonica.com/ns/interactiveXSLT</codeph> namespace is declared.</p>
    <p id="p_ds1_cgk_54b">Namespace prefixes in the scope of the current context are presented at the top of the
      content completion assistance window to speed up the insertion into the document of prefixed
      elements.</p>
    <p id="p_es1_cgk_54b">
      <fig id="figure-content-completion-namespace-prefixes-oxygen" product="editor developer">
        <title>Namespace Prefixes in the Content Completion Assistant</title>
        <image href="../img/sa_content_completion_namespace_prefixes.png"/>
      </fig>
    </p>
    <p id="p_fs1_cgk_54b">
      <fig product="editorEclipse developerEclipse" id="fig_gs1_cgk_54b">
        <title>Namespace Prefixes in the Content Completion Assistant</title>
        <image href="../img/ec_content_completion_namespace_prefixes.png"/>
      </fig>
    </p>
    <p id="p_hs1_cgk_54b">For the common namespaces such as XSL namespace
        (<codeph>http://www.w3.org/1999/XSL/Transform</codeph>), XML Schema namespace
        (<codeph>http://www.w3.org/2001/XMLSchema</codeph>), or Saxon namespace
        (<codeph>http://icl.com/saxon</codeph> for version 1.0,
        <codeph>http://saxon.sf.net/</codeph> for version 2.0 / 3.0), <ph keyref="product"/>
      provides an easy mode to declare them by proposing a prefix for these namespaces.</p>
    <note id="note_llb_wsz_r5b">For XSLT documents that are unversioned or have an unsupported
      version, the content completion in <ph keyref="product"/> uses version 3.0 as the
      fallback.</note>
  </body>
</topic>
