<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="working-copy-menu">
  <title>Working Copy View Contextual Menu Actions</title>
  <body>
    <p id="p_cjj_dgk_54b">The contextual menu in the <uicontrol>Working Copy</uicontrol> view contains the following
      actions: <dl id="dl_djj_dgk_54b">
        <dlentry id="action_edit_conflict">
          <dt><uicontrol>Edit conflict <shortcut>(Ctrl + E (Command + E on macOS))</shortcut></uicontrol></dt>
          <dd>Opens the <uicontrol>Compare</uicontrol> editor, allowing you to modify the content of
            the currently conflicting resources. For more information about editing conflicts, see
              <xref href="edit-conflict.dita">Edit conflicts</xref>. </dd>
        </dlentry>
        <dlentry id="dlentry_ejj_dgk_54b">
          <dt><uicontrol>Open in Compare Editor <shortcut>(Ctrl + Alt + C (Command + Option + C on
                macOS))</shortcut></uicontrol></dt>
          <dd>Displays changes made in the currently selected file.</dd>
        </dlentry>
        <dlentry id="dlentry_fjj_dgk_54b">
          <dt><uicontrol>Open <shortcut>(Ctrl + O (Command + O on macOS))</shortcut></uicontrol></dt>
          <dd>Opens the selected resource from the working copy. Files are opened with an internal
            editor or an external application associated with that file type, while folders are
            opened with the default file system browsing application (Windows Explorer on Windows,
            Finder on macOS, etc).</dd>
        </dlentry>
        <dlentry product="svnClient" id="dlentry_gjj_dgk_54b">
          <dt><uicontrol>Open with <shortcut>(Ctrl + Shift + O (Command + Shift + O on macOS))</shortcut></uicontrol></dt>
          <dd>Displays the <xref
              href="preferences-svn-file-editors.dita#preferences-svn-file-editors/figure-svn-open-with-dialog-preferences"
              >Open with</xref> dialog box to specify the editor where the selected file will be
            opened. If multiple files are selected, only external applications can be used to open
            the files. </dd>
        </dlentry>
        <dlentry product="editor author developer" id="dlentry_hjj_dgk_54b">
          <dt><b>Open with...</b></dt>
          <dd>Submenu that allows you to open the selected resource either with <ph
            keyref = "product"/>
            or with another application. </dd>
        </dlentry>
        <dlentry id="show-in-explorer">
          <dt><uicontrol>Show in Explorer</uicontrol>/<uicontrol>Show in Finder</uicontrol></dt>
          <dd>Opens the parent directory of the selected working copy file and selects the
            file.</dd>
        </dlentry>
        <dlentry id="action_expand_all">
          <dt><uicontrol><image href="../img/ExpandAll16.png" placement="inline"/>Expand All
                <shortcut>(Ctrl + Alt + X (Command + Option + X on
            macOS))</shortcut></uicontrol></dt>
          <dd>Displays all descendants of the selected folder. The same behavior is obtained by
            double-clicking a collapsed folder.</dd>
        </dlentry>
        <dlentry id="dlentry_ijj_dgk_54b">
          <dt><uicontrol><image href="../img/SVNRefresh16.png" id="image_ykg_t2w_sr"
                />Refresh<shortcut>(F5)</shortcut></uicontrol></dt>
          <dd>Re-scans the selected resources recursively and refreshes their status in the working
            copy view.</dd>
        </dlentry>
        <dlentry id="action_synchronize">
          <dt><uicontrol><image href="../img/SVNSynchronize16.png" id="image_enc_2c3_5r"
              />Synchronize <shortcut>(Ctrl + Shift + S (Command + Shift + S on macOS))</shortcut></uicontrol></dt>
          <dd>Connects to the repository and determines the working copy and repository changes made
            to the selected resources. The application switches to <uicontrol>Modified</uicontrol>
            view mode if the <xref
              href="preferences-svn-working-copy.dita#preferences-svn-working-copy" format="dita"
                ><uicontrol>Always switch to 'Modified' mode</uicontrol> option</xref> is selected. </dd>
        </dlentry>
        <dlentry id="dlentry_jjj_dgk_54b">
          <dt><uicontrol>Update <shortcut>(Ctrl + U (Command + U on macOS))</shortcut></uicontrol></dt>
          <dd>Updates the selected resources to the <i>HEAD</i> revision (latest modifications) from
            the repository. If the selection contains a directory, it will be updated depending on
            its depth. </dd>
        </dlentry>
        <dlentry id="action_update_rev_depth">
          <dt><uicontrol>Update to revision/depth</uicontrol></dt>
          <dd>Allows you to update the selected resources from the working copy to an earlier
            revision from the repository. You can also select the update <i>depth</i> for the
            current folder. You can find out more about the <i>depth</i> term in the <xref
              href="sparse-checkouts.dita">sparse checkouts</xref> section. </dd>
        </dlentry>
        <dlentry id="action_commit">
          <dt><uicontrol>Commit</uicontrol></dt>
          <dd>Collects the outgoing changes from the selected resources in the working copy and
            allows you to choose exactly what resources to commit. A directory will always be
            committed recursively. Unversioned resources will be deselected by default. In the
              <uicontrol>Commit</uicontrol> dialog box you can also enter a comment before sending
            your changes to the repository.</dd>
        </dlentry>
        <dlentry id="action_revert">
          <dt><uicontrol><image href="../img/SVNRevert16.png" placement="inline"/>Revert
                <shortcut>(Ctrl + Shift + V (Command + Shift + V on macOS))</shortcut></uicontrol></dt>
          <dd>Undoes all local changes for the selected resources. It does not contact the
            repository and the files are obtained from the <tm tmtype="tm">Apache Subversion</tm>
            pristine copy. It is available only for modified resources. See <xref
              href="revert-changes.dita">Revert your changes</xref> for more information. </dd>
        </dlentry>
        <dlentry id="action_override_update">
          <dt><uicontrol>Override and Update</uicontrol></dt>
          <dd>Drops any outgoing change and replaces the local resource with the HEAD revision. This
            action is available on resources with outgoing changes, including conflicting ones. See
            the <xref href="revert-changes.dita">Revert your changes</xref> section. </dd>
        </dlentry>
        <dlentry id="action_override_commit">
          <dt><uicontrol>Override and Commit</uicontrol></dt>
          <dd>Drops any incoming changes and sends your local version of the resource to the
            repository. This action is available on conflicting resources. For more information see
              <xref href="drop-incoming.dita">Drop incoming modifications</xref>. </dd>
        </dlentry>
        <dlentry id="action_mark_resolved">
          <dt><uicontrol><image href="../img/SVNMarkResolved16.png" placement="inline"/>Mark
              Resolved <shortcut>(Ctrl + Shift + R (Command + Shift + R on macOS))</shortcut></uicontrol></dt>
          <dd>Instructs the Subversion system that you resolved a conflicting resource. For more
            information, see <xref href="merge-conflicts.dita">Merge conflicts</xref>. </dd>
        </dlentry>
        <dlentry id="action_mark_merged">
          <dt><uicontrol><image href="../img/SVNMarkAsMerged16.png" placement="inline"/>Mark as
              Merged <shortcut>(Ctrl + Shift + M (Command + Shift + M on macOS))</shortcut></uicontrol></dt>
          <dd>Instructs the Subversion system that you resolved the pseudo-conflict by merging the
            changes and you want to commit the resource. Read the <xref href="merge-conflicts.dita"
              >Merge conflicts</xref> section for more information about how you can solve the
            pseudo-conflicts.</dd>
        </dlentry>
        <dlentry id="action_create_patch">
          <dt><uicontrol><image href="../img/SVNPatch16.png" placement="inline"/>Create patch
                <shortcut>(Ctrl + Alt + P (Command + Option + P on
            macOS))</shortcut></uicontrol></dt>
          <dd>Allows you to create a file containing all the differences between two resources,
            based on the <codeph>svn diff</codeph> command. To read more about creating patches, see
              <xref href="create-patch-wc-repository.dita">the section about
            patches</xref>.</dd>
        </dlentry>
        <dlentry id="dlentry_kjj_dgk_54b">
          <dt><uicontrol>Compare with</uicontrol>:</dt>
          <dd><ul id="ul_ljj_dgk_54b">
              <li id="li_mjj_dgk_54b" irina="irina"><uicontrol>Latest from HEAD <shortcut>(Ctrl + Alt + H (Command
                    + Option + H on macOS))</shortcut></uicontrol> - Performs a 3-way diff operation
                between the selected file and the <i>HEAD</i> revision from the repository and
                displays the result in the <uicontrol>Compare view</uicontrol>. The common ancestor
                of the 3-way diff operation is the <i>BASE</i> version of the file from the local
                working copy.</li>
              <li id="li_njj_dgk_54b" irina="irina"><uicontrol>BASE revision <shortcut>(Ctrl + Alt + C (Command +
                    Option + C on macOS))</shortcut></uicontrol> - Compares the working copy file
                with the BASE revision file (the so-called <i>pristine copy</i>).</li>
              <li id="li_ojj_dgk_54b" irina="irina"><uicontrol>Revision <shortcut>(Ctrl + Alt + R (Command +
                    Option + R on macOS))</shortcut></uicontrol> - Displays the <uicontrol>History
                  view</uicontrol> that contains the log history of that resource.</li>
              <li id="li_pjj_dgk_54b" irina="irina"><uicontrol>Branch/Tag</uicontrol> - Opens the <uicontrol>Compare with
                  Branch/Tag</uicontrol> dialog box that allows you to specify <xref
                  href="entering-local-paths-urls.dita#entering-local-paths-urls/url-section"
                  >another file from the repository</xref> (<uicontrol>To URL</uicontrol> field) to
                compare with the working copy file. You can specify the revision of the repository
                file by choosing between <uicontrol>HEAD revision</uicontrol> or specific
                  <uicontrol>Other revision</uicontrol>.<note type="tip" id="note_qjj_dgk_54b">To compare with a file that
                  was deleted, moved, or replaced, you need to specify the original URL (before the
                  file was removed) and use a <xref
                    href="../topics/using-peg-revisions.dita#using-peg-revisions"><term>peg</term>
                    revision</xref> at the end (for example,
                <codeph>URL@rev1234</codeph>).</note></li>
              <li id="li_rjj_dgk_54b" irina="irina"><uicontrol>Each other</uicontrol> - Compares two selected files with each
                other.</li>
            </ul> These <i>compare</i> actions are available only if the selected resource is a
            file. </dd>
        </dlentry>
        <dlentry id="dlentry_sjj_dgk_54b">
          <dt><uicontrol>Replace with</uicontrol>:</dt>
          <dd>
            <ul id="ul_tjj_dgk_54b">
              <li id="li_ujj_dgk_54b" irina="irina"><uicontrol>Latest from HEAD</uicontrol> - Replaces the selected resources with
                their versions from the <i>HEAD</i> revision of the repository.</li>
              <li id="li_vjj_dgk_54b" irina="irina"><uicontrol>BASE revision</uicontrol> - Replace the selected resources with their
                versions from the pristine copy (the BASE revision).</li>
            </ul>
            <note id="note_wjj_dgk_54b">In some cases it is impossible to replace the currently selected resources with
              their versions from the <i>BASE/HEAD</i> revision:<ul id="ul_xjj_dgk_54b">
                <li id="li_yjj_dgk_54b" irina="irina">For the <uicontrol>Replace with BASE revision</uicontrol> action, the resources
                  being unversioned or added have no <i>BASE</i> revision, and thus cannot be
                  replaced. However, they will be deleted if the action is invoked on a parent
                  folder. The action will never work for missing folders or for obstructing files
                  (folders being obstructed by a file), since you cannot recover a tree of
                  folders.</li>
                <li id="li_zjj_dgk_54b" irina="irina">For the <uicontrol>Replace with latest from HEAD</uicontrol> action, you must be
                  aware that there are cases when resources will be completely deleted or reverted
                  to the BASE revision and then updated to a HEAD revision to avoid conflicts. These
                  cases are:<ul id="ul_akj_dgk_54b">
                    <li id="li_bkj_dgk_54b" irina="irina">The resource is <i>unversioned</i>, <i>added</i>, <i>obstructed</i>, or
                        <i>modified</i>.</li>
                    <li id="li_ckj_dgk_54b" irina="irina">The resource is affected by a <codeph>svn:ignore</codeph> or
                        <codeph>svn:externals</codeph> property that is locally added on the parent
                      folder and not yet committed to the repository.</li>
                  </ul></li>
              </ul></note>
          </dd>
        </dlentry>
        <dlentry id="dlentry_dkj_dgk_54b">
          <dt><uicontrol><image href="../img/SVNDockableFrameHistory16.png" id="image_dmy_k13_5r"
              />Show History <shortcut>(Ctrl  + H (Command  + H on macOS))</shortcut></uicontrol></dt>
          <dd>Displays the <uicontrol>History view</uicontrol> where the log history for the
            selected resource will be presented. For more details about resource history, see the
            sections about <xref href="history-view.dita">the resource history view</xref> and <xref
              href="show-history.dita">requesting the history for a resource</xref>. </dd>
        </dlentry>
        <dlentry id="show-annotation-action-dlentry">
          <dt><uicontrol><image href="../img/SVNAnnotationsView16.gif" id="image_ufv_db3_5r"/>Show
              Annotation</uicontrol> (<uicontrol
              conkeyref="reusable-oxygen-shortcuts-list/ctrl_shift_a"/>)</dt>
          <dd>Opens the <uicontrol>Show Annotation</uicontrol> dialog box that computes <xref
              href="annotations-view.dita#annotations-view">the annotations for a file and displays
              them in the <uicontrol>Annotations</uicontrol> view</xref>, along with the history of
            the file in the <uicontrol>History</uicontrol> view. </dd>
        </dlentry>
        <dlentry id="dlentry_ekj_dgk_54b">
          <dt><uicontrol><image href="../img/SVNRevisionGraph16.gif" id="image_pvl_jb3_5r"/>Revision
              Graph <shortcut>(Ctrl + G (Command + G on macOS))</shortcut></uicontrol></dt>
          <dd>This action allows you to see the graphical representation history of a resource. For
            more details about the revision graph of resources, see <xref
              href="svn-history-graph.dita">Revision Graph</xref>. </dd>
        </dlentry>
        <dlentry id="dlentry_fkj_dgk_54b">
          <dt><uicontrol>Copy URL Location <shortcut>(Ctrl + Alt + U (Command + Option + U on
                macOS))</shortcut></uicontrol></dt>
          <dd>Copies the encoded URL of the selected resource from the Working Copy to the
            clipboard.</dd>
        </dlentry>
        <dlentry id="mark-as-copied">
          <dt><uicontrol>Mark as copied</uicontrol></dt>
          <dd>You can use this action to mark an item from the working copy as a copy of another
            item under <i>version control</i>, when the copy operation was performed outside of an
            SVN client. The <uicontrol>Mark as copied</uicontrol> action is available when you
            select two items (both the new item and source item), and it depends on the state of the
            source item. </dd>
        </dlentry>
        <dlentry id="mark-as-moved">
          <dt><uicontrol>Mark as moved</uicontrol></dt>
          <dd>You can use this action to mark an item from the working copy as being moved from
            another location of the working copy, when the move operation was performed outside of
            an SVN client. The <uicontrol>Mark as moved</uicontrol> action is available when you
            select two items from different locations (both the new item and the source item that is
            usually reported as <i>missing</i>), and it depends on the state of the source
            item.</dd>
        </dlentry>
        <dlentry id="mark-as-renamed">
          <dt><uicontrol>Mark as renamed</uicontrol></dt>
          <dd>You can use this action to mark an item from the working copy as being renamed outside
            of an SVN client. The <uicontrol>Mark as renamed</uicontrol> action is available when
            you select two items from the same directory (both the new item and the source item that
            is usually reported as <i>missing</i>), and it depends on the state of the source
            item.</dd>
        </dlentry>
        <dlentry id="dlentry_gkj_dgk_54b">
          <dt><uicontrol><image href="../img/SVNCopyMove16.png" placement="inline"/>Copy
              to</uicontrol></dt>
          <dd>Copies the currently selected resource to a specified location.</dd>
        </dlentry>
        <dlentry id="dlentry_hkj_dgk_54b">
          <dt><uicontrol>Move to </uicontrol> (<uicontrol
              conkeyref="reusable-oxygen-shortcuts-list/ctrl_m"/>)</dt>
          <dd>Moves the currently selected resource to a specified location.</dd>
        </dlentry>
        <dlentry id="dlentry_ikj_dgk_54b">
          <dt><uicontrol>Rename <shortcut>(F2)</shortcut></uicontrol></dt>
          <dd>As with the move command, a copy of the original resource will be made with the new
            name and the original will be marked as deleted. Note that you can only rename one
            resource at a time. </dd>
        </dlentry>
        <dlentry id="dlentry_jkj_dgk_54b">
          <dt><uicontrol><image href="../img/SVNDelete16.gif" id="image_i5f_wbp_5r"/>Delete
                <shortcut>(Delete)</shortcut></uicontrol></dt>
          <dd>Schedules selected items for deletion upon the next commit and removes them from the
            disk. Depending on the state of each item, you are prompted to confirm the
            operation.</dd>
        </dlentry>
        <dlentry id="working-copy-new-menu-item">
          <dt><uicontrol>New</uicontrol>:</dt>
          <dd>
            <p id="p_kkj_dgk_54b">
              <ul id="ul_lkj_dgk_54b">
                <li id="li_mkj_dgk_54b" irina="irina"><uicontrol><image href="../img/SVNNewFile16.png" placement="inline"/>New
                    File</uicontrol> - Creates a new file inside the selected folder. The newly
                  created file will be added under version control only if the parent folder is
                  already versioned.</li>
                <li id="li_nkj_dgk_54b" irina="irina"><uicontrol>New Folder <shortcut>(Ctrl + Shift + F (Command + Shift + F on macOS))</shortcut></uicontrol> - Creates a child folder inside the selected
                  folder. The newly created folder will be added under version control only if its
                  parent is already versioned.</li>
                <li id="li_okj_dgk_54b" irina="irina">
                  <p id="p_pkj_dgk_54b"><uicontrol>New External Folder <shortcut>(Ctrl + Shift + W (Command + Shift + W
                        on macOS))</shortcut></uicontrol> - This operation allows you to add a new
                    external definition on the selected folder. An external definition is a mapping
                    of a local directory to <xref
                      href="entering-local-paths-urls.dita#entering-local-paths-urls/url-section">a
                      URL of a versioned directory</xref>, and ideally a particular revision, stored
                    in the <codeph>svn:externals</codeph> property of the selected folder.<note
                      type="tip" id="note_qkj_dgk_54b">You can specify a particular revision of the external item by using
                      a <xref href="../topics/using-peg-revisions.dita#using-peg-revisions"
                          ><term>peg</term> revision</xref> at the end of the URL (for example,
                        <codeph>URL@rev1234</codeph>). You can also use peg revisions to access
                      external items that were deleted, moved, or replaced. </note></p>
                  <p id="p_rkj_dgk_54b">The URL used in the external definition format can be relative. You can specify
                    the repository URL that the external folder points to by using one of the
                    following relative formats: <ul id="ul_bfw_5xv_g4">
                      <li id="li_skj_dgk_54b" irina="irina"><b>../</b> - Relative to the URL of the directory that the
                          <codeph>svn:externals</codeph> property is set.</li>
                      <li id="li_tkj_dgk_54b" irina="irina"><b>^/</b> - Relative to the root of the repository where the
                          <codeph>svn:externals</codeph> property is versioned.</li>
                      <li id="li_ukj_dgk_54b" irina="irina"><b>//</b> - Relative to the scheme of the URL of the directory that the
                          <codeph>svn:externals</codeph> property is set.</li>
                      <li id="li_vkj_dgk_54b" irina="irina"><b>/</b> - Relative to the root URL of the server that has the
                          <codeph>svn:externals</codeph> property versioned. </li>
                    </ul></p>
                  <p id="p_wkj_dgk_54b">
                    <note type="important" id="note_xkj_dgk_54b">To change the target URL of an external definition, or to
                      delete an external item, do the following:<ol id="ol_nk2_klr_qq">
                        <li id="li_ykj_dgk_54b" irina="irina">Modify or delete the item definition found in the
                            <codeph>svn:externals</codeph> property that is set on the parent
                          folder.</li>
                        <li id="li_zkj_dgk_54b" irina="irina">For the change to take effect, use the <uicontrol>Update</uicontrol>
                          operation on the parent folder of the external item.</li>
                      </ol></note>
                    <note type="note" id="note_alj_dgk_54b">Syncro SVN Client does not support definitions of local
                      relative external items.</note>
                  </p>
                </li>
              </ul>
            </p>
          </dd>
        </dlentry>
        <dlentry id="action_svn_ignore">
          <dt><uicontrol>Add to "svn:ignore" <shortcut>(Ctrl + Alt + I (Command + Option + I on
                macOS))</shortcut></uicontrol></dt>
          <dd>Allows you to add files that should not participate in the <i>version control</i>
            operations inside your working copy. This action can only be performed on resources not
            under <i>version control</i>. It actually modifies the value of the
              <codeph>svn:ignore</codeph> property in the parent directory of the resource. Read
            more about this in the <xref
              href="ignore-resources-working-copy.dita#ignore-resources-working-copy" format="dita"
              >Ignore Resources Not Under Version Control</xref> section. </dd>
        </dlentry>
        <dlentry id="action_add_version_control">
          <dt><uicontrol><image href="../img/SVNAdd16.png" placement="inline"/>Add to version
              control <shortcut>(Ctrl + Alt + V (Command + Option + V on
              macOS))</shortcut></uicontrol></dt>
          <dd>Allows you to add resources that are not under <i>version control</i>. For
            further details, see <xref
              href="add-resources-working-copy.dita#add-resources-working-copy">Add Resources to
              Version Control </xref> section. </dd>
        </dlentry>
        <dlentry id="remove-from-version-control">
          <dt><uicontrol>Remove from version control</uicontrol></dt>
          <dd>Schedules the selected items for deletion from the repository upon the next commit.
            The items are not removed from the file system after committing.</dd>
        </dlentry>
        <dlentry id="action_cleanup">
          <dt><uicontrol><image href="../img/SVNCleanUpWorkingCopy16.png" id="image_m4x_kcp_5r"
              />Clean up <shortcut>(Ctrl + Shift + C (Comman + Shift + Cd on macOS))</shortcut></uicontrol></dt>
          <dd>Performs a maintenance cleanup operation on the selected resources from the working
            copy. This operation removes the Subversion maintenance locks that were left behind.
            This is useful when you already know where the problem originated and want to fix it as
            quickly as possible. It is only active for resources under <i>version
            control</i>.</dd>
        </dlentry>
        <dlentry id="action_locking">
          <dt><uicontrol>Locking</uicontrol>:</dt>
          <dd>
            <p id="p_blj_dgk_54b">
              <ul id="ul_clj_dgk_54b">
                <li id="li_dlj_dgk_54b" irina="irina"><uicontrol>Scan for locks <shortcut>(Ctrl + L (Command + L on macOS))</shortcut></uicontrol> - Contacts the repository and recursively obtains the
                  list of locks for the selected resources. A dialog box containing the locked files
                  and the lock description will be displayed. This is only active for resources
                  under <i>version control</i>. For more details see <xref href="scan-locks.dita"
                    >Scanning for locks</xref>.</li>
                <li id="li_elj_dgk_54b" irina="irina"><uicontrol><image href="../img/Lock16.png" placement="inline"/>Lock
                      <shortcut>(Ctrl + K (Command + K on macOS))</shortcut></uicontrol> - Allows you
                  to lock certain files that need exclusive access. You can write a comment
                  describing the reason for the lock and you can also force (<i>steal</i>) the lock.
                  This action is active only on files under <i>version control</i>. For more details
                  on the use of this action see <xref href="lock-file.dita"> Locking a
                  file</xref>.</li>
                <li id="li_flj_dgk_54b" irina="irina"><uicontrol><image href="../img/Unlock16.png"
                      placement="inline"/>Unlock <shortcut>(Ctrl + Alt + K (Command + Option + K on
                      macOS))</shortcut></uicontrol> - Releases the exclusive access to a file from
                  the repository. You can also choose to unlock it by force (<i>break the lock</i>). </li>
              </ul>
            </p>
          </dd>
        </dlentry>
        <dlentry id="dlentry_glj_dgk_54b">
          <dt><uicontrol><image href="../img/SVNProperties16.png" placement="inline"/>Show SVN
              Properties</uicontrol> (<uicontrol conkeyref="reusable-oxygen-shortcuts-list/ctrl_p"
            />) </dt>
          <dd>Brings up the <xref href="properties-view.dita">Properties view</xref> and displays
            the SVN properties for the selected resource. </dd>
        </dlentry>
        <dlentry id="dlentry_hlj_dgk_54b">
          <dt><uicontrol><image href="../img/SVNInfo16.png" id="image_el1_rcp_5r"/>Show SVN
              Information</uicontrol> (<uicontrol conkeyref="reusable-oxygen-shortcuts-list/ctrl_i"
            />)</dt>
          <dd>Provides additional information for the selected resource from the working copy. For
            more details, go to <xref href="show-info.dita">Obtain information for a
            resource</xref>. </dd>
        </dlentry>
      </dl>
    </p>
  </body>
</topic>
