<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="marklogic-development">
  <title>MarkLogic Development in <ph keyref="product"/></title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Databases<indexterm>Connections<indexterm>MarkLogic
            development</indexterm></indexterm></indexterm>
        <indexterm>MarkLogic for the developer</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p id="p_cpx_cgk_54b">The <ph keyref="product"/> support for MarkLogic includes features designed for developers,
      such as debugging XQuery transformations, remote and collaborative debugging, XQuery editing
      and validation, and an <xref href="xquery-builder-view.dita#xquery-builder-view">XQuery
        builder</xref> that helps to improve productivity.</p>
    <section id="working_with_xquery_files">
      <title>Working with XQuery Files</title>
      <p id="p_dpx_cgk_54b">MarkLogic supports working with XQuery files to create queries over stored XML content. You
        can open an XQuery file, configure a transformation scenario to match your MarkLogic
        connection, write the XQuery, and then execute it.</p>
      <p id="p_epx_cgk_54b">When editing XQuery modules stored on the MarkLogic server, the <xref
          href="xquery-outline.dita#xquery-outline"><uicontrol>Outline</uicontrol> view</xref>
        collects and displays all the functions from all imported modules. The <xref
          keyref="glossentry_content-completion-assistant"><term>Content Completion
          Assistant</term></xref> also presents all of these functions along with the latest
        built-in XQuery functions in accordance with the server version. </p>
      <p id="p_fpx_cgk_54b">When developing queries for MarkLogic, it is best to open the resources from the <xref
          href="relational-database-explorer.dita#relational-database-explorer"><uicontrol>Data
            Source Explorer</uicontrol> view</xref>. When you execute or debug XQuery files opened
        from this view, imported modules can be resolved better by the MarkLogic server. Another
        advantage is that validation is automatically performed on the MarkLogic server, including
        any imported modules.</p>
    </section>
    <section id="xquery_debugging">
      <title>XQuery Debugging</title>
      <p id="p_gpx_cgk_54b"><ph keyref="product"/> allows you to use MarkLogic connections to debug real applications
        that use XQuery (for example, web applications that trigger XQuery executions). By setting
        the server in debug mode, you can intercept all the XQuery scripts that run on that server.
          <ph keyref="product"/> connects to the MarkLogic server, shows you the running XQuery
        scripts, and allows you to debug them. The remote debugging support also allows you to debug
        collaboratively. Multiple users can participate in the same debugging session. You can start
        a debugging session and another user can continue it, and vice versa.</p>
    </section>
    <section id="working_with_modules">
      <title>Working with Modules</title>
      <p id="p_hpx_cgk_54b">MarkLogic has a concept of two types of XQuery modules, <i>library</i> and
          <i>main</i> modules. A <i>library</i> module is used to define functions.
        Library modules cannot be evaluated directly. They are imported, either from other library
        modules or from main modules. A <i>main</i> module is used as an entry point that can
        be executed as an XQuery program. For more information on these types of modules, see <xref
          href="https://docs.marklogic.com/guide/app-dev/import_modules#id_45509" format="html"
          scope="external">XQuery Library Modules and Main Modules</xref>.</p>
      <p id="p_ipx_cgk_54b">When working with <i>library</i> modules, you need to create a validation scenario
        and associate it with the module. In the validation scenario you need to specify a main
        module as the entry point for validation. The modules need to be deployed on a MarkLogic
        server because <ph keyref="product"/> will request the server to validate the modules.</p>
      <p id="p_jpx_cgk_54b">To validate <i>library</i> modules stored on a MarkLogic server, follow these steps:<ol id="ol_kpx_cgk_54b">
          <li id="li_lpx_cgk_54b" irina="irina"><xref href="how-to-marklogic.dita#how-to-marklogic">Configure a MarkLogic database
              connection</xref>.</li>
          <li id="li_mpx_cgk_54b" irina="irina">Expand the MarkLogic connection in the <xref
              href="relational-database-explorer.dita#relational-database-explorer"><uicontrol>Data
                Source Explorer</uicontrol> view</xref> and open the <i>library</i> modules.
            The <i>main</i> module must also be opened from the <xref
              href="../topics/relational-database-explorer.dita#relational-database-explorer"
                ><uicontrol>Data Source Explorer</uicontrol> view</xref>.</li>
          <li id="li_npx_cgk_54b" irina="irina">
            <p id="p_opx_cgk_54b"><xref href="create-validation-scenario.dita#create-validation-scenario">Configure a
                validation scenario</xref> for each <i>library</i> module. Specify the <i>main</i>
              module in the <uicontrol>URL of the file to validate</uicontrol> field.</p>
            <p id="p_ppx_cgk_54b"><b>Result:</b> Validation is done on the server that contains the <i>main</i> module.
              The <i>main</i> module and all other <i>library</i> modules involved in the validation
              must be saved. Otherwise, the server will validate what was saved on the server,
              without the uncommitted changes. Also, the <xref
                keyref="glossentry_content-completion-assistant"><term>Content Completion
                  Assistant</term></xref> and the <xref href="xquery-outline.dita#xquery-outline"
                  ><uicontrol>Outline</uicontrol> view</xref> should now present the functions from
              all the modules.</p>
          </li>
        </ol></p>
    </section>
  </body>
  <related-links>
    <linklist>
      <title>Related Information:</title>
      <link href="xquery-debugging-with-marklogic.dita#xquery-debugging-with-marklogic"/>
      <link href="how-to-marklogic.dita#how-to-marklogic"/>
    </linklist>
  </related-links>
</topic>
