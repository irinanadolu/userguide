<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="composing-web-service-calls">
  <title>WSDL SOAP Analyzer Tool (Deprecated)</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>WSDL documents<indexterm>SOAP analyzer</indexterm></indexterm>
        <indexterm>WSDL SOAP Analyzer tool</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p id="p_ad2_cgk_54b"><uicontrol>WSDL SOAP Analyzer</uicontrol> is a tool that helps you test if the messages
      defined in a Web Service Descriptor (WSDL) are accepted by a Web Services server. </p>
    <p id="p_bd2_cgk_54b">After you edit and validate your Web service descriptor against a mix of the XML Schemas for
      WSDL and SOAP, it is easy to check if the defined SOAP messages are accepted by the remote Web
      Services server by using the integrated <uicontrol>WSDL SOAP Analyzer</uicontrol> tool
      (available from the toolbar or <uicontrol product="developer editor"
        >Tools</uicontrol><uicontrol product="developerEclipse editorEclipse">WSDL</uicontrol>
      menu).</p>
    <p id="p_cd2_cgk_54b"><ph keyref="product"/> provides two ways of testing, one for the currently edited WSDL
      document and another for the remote WSDL documents that are published on a web server. To open
      the <uicontrol>WSDL SOAP Analyzer</uicontrol> tool for the currently edited WSDL document do
      one of the following:<ul id="ul_dd2_cgk_54b">
        <li id="li_ed2_cgk_54b" irina="irina">Click the <uicontrol><image href="../img/WsdlShowDialog16.png" id="image_mnh_zxh_5r"
              placement="inline"/>WSDL SOAP Analyzer</uicontrol> toolbar button.</li>
        <li id="li_fd2_cgk_54b" irina="irina">Use the <uicontrol><image href="../img/WsdlShowDialog16.png" id="image_cbm_mxn_ds"
              placement="inline"/>WSDL SOAP Analyzer</uicontrol> action from the <uicontrol
            product="developer editor">Tools</uicontrol><uicontrol
            product="developerEclipse editorEclipse">WSDL</uicontrol> menu.</li>
        <li id="li_gd2_cgk_54b" irina="irina">Go to <menucascade product="editor developer">
            <uicontrol>Open with</uicontrol>
            <uicontrol><image href="../img/WsdlShowDialog16.png" id="image_ms4_txn_ds"
                placement="inline"/>WSDL SOAP Analyzer </uicontrol>
          </menucascade><menucascade product="developerEclipse editorEclipse">
            <uicontrol>Open with</uicontrol>
            <uicontrol>WSDL Editor</uicontrol>
          </menucascade> in the contextual menu of the <xref
            href="using-the-project-view.dita#using-the-project-view"><uicontrol
              product="developer editor">Project</uicontrol><uicontrol
              product="developerEclipse editorEclipse">Project Explorer</uicontrol></xref> view.</li>
      </ul></p>
    <p id="p_hd2_cgk_54b">
      <fig id="figure-testing-wsdl-oxygen" product="editor developer">
        <title>WSDL SOAP Analyzer Dialog Box</title>
        <image href="../img/sa_wsdl_analyser.png" placement="inline"/>
      </fig>
    </p>
    <p id="p_id2_cgk_54b">
      <fig id="figure-testing-wsdl-oxygenEclipse" product="editorEclipse developerEclipse">
        <title>WSDL SOAP Analyzer View</title>
        <image href="../img/ec_wsdl_analyser.png" placement="inline"/>
      </fig>
    </p>
    <p id="p_jd2_cgk_54b">This tool contains a SOAP analyzer and sender for Web Services Description Language file
      types. The analyzer fields are as follows:<ul id="ul_kd2_cgk_54b">
        <li id="li_ld2_cgk_54b" irina="irina"><uicontrol>Services</uicontrol> - The list of services defined by the WSDL file.</li>
        <li id="li_md2_cgk_54b" irina="irina"><uicontrol>Ports</uicontrol> - The ports for the selected service.</li>
        <li id="li_nd2_cgk_54b" irina="irina"><uicontrol>Operations</uicontrol> - The list of available operations for the selected
          service.</li>
        <li id="li_od2_cgk_54b" irina="irina"><uicontrol>Action URL</uicontrol> - The script that serves the operation.</li>
        <li id="li_pd2_cgk_54b" irina="irina"><uicontrol>SOAP Action</uicontrol> - Identifies the action performed by the script.</li>
        <li id="li_qd2_cgk_54b" irina="irina"><uicontrol>Version</uicontrol> - Choose between 1.1 and 1.2. The SOAP version is
          selected automatically depending on the selected port.</li>
        <li id="li_rd2_cgk_54b" irina="irina"><uicontrol>Request Editor</uicontrol> - It allows you to compose the web service
          request. When an action is selected, <ph keyref="product"/> tries to generate as much
          content as possible for the SOAP request. The envelope of the SOAP request has the correct
          namespace for the selected SOAP version, that is
            <i>http://schemas.xmlsoap.org/soap/envelope/</i> for SOAP 1.1 or
            <i>http://www.w3.org/2003/05/soap-envelope</i> for SOAP 1.2. Usually you just have to
          change a few values for the request to be valid. The <xref
            keyref="glossentry_content-completion-assistant"><term>Content Completion
              Assistant</term></xref> is available for this editor and is driven by the schema that
          defines the type of the current message. While selecting various operations, <ph
            keyref="product"/> remembers the modified request for each one. You can click the
            <uicontrol>Regenerate</uicontrol> button to overwrite your modifications for the current
          request with the initial generated content.</li>
        <li id="li_sd2_cgk_54b" irina="irina"><uicontrol>Attachments List</uicontrol> - You can define a list of file URLs to be
          attached to the request.</li>
        <li id="li_td2_cgk_54b" irina="irina"><uicontrol>Response Area</uicontrol> - Initially it displays an auto generated server
          sample response so you can have an idea about how the response looks like. After pressing
          the <uicontrol>Send</uicontrol> button, it presents the message received from the server
          in response to the Web Service request. It may show also error messages. If the response
          message contains attachments, <ph keyref="product"/> prompts you to save them, then tries
          to open them with the associated system application.</li>
        <li id="li_ud2_cgk_54b" irina="irina"><uicontrol>Errors List</uicontrol> - There may be situations where the WSDL file is
          respecting the WSDL XML Schema, but it fails to be valid (for example, in the case of a
          message that is defined by means of an element that is not found in the types section of
          the WSDL). In such a case, the errors are listed here. This list is presented only when
          there are errors.</li>
        <li id="li_vd2_cgk_54b" irina="irina"><uicontrol>Send Button</uicontrol> - Executes the request. A status dialog box is
          displayed when <ph keyref="product"/> is connecting to the server.</li>
      </ul></p>
    <p id="p_wd2_cgk_54b">The testing of a WSDL file is straight-forward. Click the WSDL analysis button, then select
      the service, the port, and the operation. The editor generates the skeleton for the SOAP
      request. You can edit the request, eventually attach files to it and send it to the server.
      Watch the server response in the response area. You can find more details in the <xref
        href="testing-remote-wsdl-files.dita#testing-remote-wsdl-files">Testing Remote WSDL
        Files</xref> section.<note id="note_xd2_cgk_54b">SOAP requests and responses are automatically validated in the
          <uicontrol>WSDL SOAP Analyzer</uicontrol> using the XML Schemas specified in the WSDL
        file.</note></p>
    <p id="p_yd2_cgk_54b">Once defined, a request derived from a Web Service descriptor can be saved with the
        <uicontrol>Save</uicontrol> button to a Web Service SOAP Call (WSSC) file for later reuse.
      In this way, you save time in configuring the URLs and parameters.</p>
    <p id="p_zd2_cgk_54b">You can open the result of a Web Service call in an editor panel using the
        <uicontrol>Open</uicontrol> button.</p>
  </body>
</topic>
