<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="edit-schematron-in-main-files-content">
  <title>Modular Contextual Schematron Editing Using 'Main Files' Support</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Schematron<indexterm>Editing in Main Files context</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p id="p_mvg_cgk_54b">Smaller interrelated modules that define a complex Schematron cannot be correctly edited or
      validated individually, due to their interdependency with other modules. For example, a
      diagnostic defined in a main schema document is not visible when you edit an included module.
        <ph keyref="product"/> provides the support for defining the main module (or modules), thus
      allowing you to edit any of the imported/included schema files in the context of the larger
      schema structure.</p>
    <p id="p_nvg_cgk_54b">You cat set a main Schematron document <ph>either using the <xref
          href="defining_main_files.dita#defining_main_files"><term>main files</term> support from
          the <uicontrol product="developer editor">Project</uicontrol><uicontrol
            product="developerEclipse editorEclipse">Project Explorer</uicontrol> view</xref>,
        or</ph> using a validation scenario.</p>
    <p id="p_ovg_cgk_54b">To set a main file using a validation scenario, add validation units that point to the main
      schemas. <ph keyref="product"/> warns you if the current module is not part of the
      dependencies graph computed for the main schema. In this case, it considers the current module
      as the main schema.</p>
    <p id="p_pvg_cgk_54b">The advantages of editing in the context of main file include:<ul id="ul_qvg_cgk_54b">
        <li id="li_rvg_cgk_54b" irina="irina">Correct validation of a module in the context of a larger schema structure. </li>
        <li id="li_svg_cgk_54b" irina="irina"><xref keyref="glossentry_content-completion-assistant"><term>Content Completion
              Assistant</term></xref> displays all the referable components valid in the current
          context. This include components defined in modules other than the currently edited
          one.</li>
      </ul></p>
  </body>
</topic>
