<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE troubleshooting PUBLIC "-//OASIS//DTD DITA Troubleshooting//EN" "troubleshooting.dtd">
<troubleshooting id="stretched-images-pdf-output">
  <title>Images Appear Stretched Out in the PDF Output</title>
  <troublebody>
    <condition id="problem">
      <title>Problem</title>
      <p id="p_y4k_dgk_54b">When publishing XML content (DITA, DocBook, etc.), images are sometimes scaled up in the
        PDF outputs but are displayed perfectly in the HTML (or WebHelp) output.</p>
    </condition>
    <troubleSolution>
      <remedy id="solution">
        <title>Solution</title>
        <steps-informal>
          <p id="p_z4k_dgk_54b">PDF output from XML content is obtained by first obtaining an intermediary XML format
            called XSL-FO and then applying an XSL-FO processor to it to obtain the PDF. This
            stretching problem is caused by the fact that all XSL-FO processors take into account
            the DPI (dots-per-inch) resolution when computing the size of the rendered image.</p>
          <p id="p_apk_dgk_54b">The PDF processor that comes out of the box with the application is the open-source
            Apache FOP processor. Here is what Apache FOP does when deciding the image size:<ol id="ol_bpk_dgk_54b">
              <li id="li_cpk_dgk_54b" irina="irina">If the XSL-FO output contains width, height or a scale specified for the image
                <xmlelement>external-graphic</xmlelement> tag, then these dimensions are used. This means
                that if in the XML (DITA, DocBook, etc.) you set explicit dimensions to the image
                they will be used as such in the PDF output.</li>
              <li id="li_dpk_dgk_54b" irina="irina">If there are no sizes (width, height or scale) specified on the image XML element,
                the processor looks at the image resolution information available in the image
                content. If the image has such a resolution saved in it, the resolution will be used
                and combined with the image width and height to obtain the rendered image
                dimensions.</li>
              <li id="li_epk_dgk_54b" irina="irina">If the image does not contain resolution information inside, Apache FOP will look
                at the FOP configuration file for a default resolution. The FOP configuration file
                for XSLT transformations that output PDF is located in the <filepath><term
                    conkeyref="reusables-user-guide/oxy-install-dir"/>/lib/fop.xconf</filepath>.
                DITA publishing uses the DITA Open Toolkit that has the Apache FOP configuration
                file located in <filepath>[<term keyref="glossentry_dita_ot_dir"
                  />/plugins/org.dita.pdf2.fop/fop/conf/fop.xconf</filepath>. The configuration file
                contains two XML elements called <xmlelement>source-resolution</xmlelement> and
                <xmlelement>target-resolution</xmlelement>. The values set to those elements can be
                increased (usually a DPI value of 110 or 120 should render the image in PDF the same
                as in the HTML output).</li>
            </ol></p>
          <p id="p_fpk_dgk_54b">The commercial <b>RenderX XEP</b> XSL-FO processor behaves similarly but as a fallback
            it uses 120 as the DPI value instead of using a configuration file.<note type="tip" id="note_gpk_dgk_54b">It
              is best to save your images without any DPI resolution information. For example, when
              saving a PNG image in the open-source GIMP image editor, you do not want to save the resolution.<p id="p_hpk_dgk_54b">
                <image href="../img/gimpSaveResolution.png" id="image_b4x_zrk_wh" placement="break"
                />
              </p><p id="p_ipk_dgk_54b">This allows you to control the image resolution from the configuration file for
                all referenced images.</p></note></p>
        </steps-informal>
      </remedy>
    </troubleSolution>
  </troublebody>
</troubleshooting>
