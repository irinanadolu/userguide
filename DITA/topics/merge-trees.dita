<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task
  PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="merge-trees">
  <title>Merge Two Different Trees</title>
  <taskbody>
    <context>
      <p id="p_cp3_dgk_54b">This merge type is useful when you need to duplicate changes from one child branch (for
        example, <codeph>CB1</codeph>) to another child branch (<codeph>CB2</codeph>) from the same
        parent branch. The SVN client will calculate the changes necessary to get from the
          <codeph>HEAD</codeph> revision of the parent branch (or the <i>trunk</i>) to the
          <codeph>HEAD</codeph> revision of one of its child branches (<codeph>CB1</codeph>), and
        apply those changes to your working copy of the other branch (<codeph>CB2</codeph>). The
        result is that the latter child branch (<codeph>CB2</codeph>) will also include the changes
        made on the original child branch (<codeph>CB1</codeph>), although that branch was not
        reintegrated into the parent branch.</p>
      <p id="p_dp3_dgk_54b">This merge type could also be used to reintegrate a child branch back into its parent when
        the repository does not support <i>merge tracking</i>.</p>
      <note id="note_ep3_dgk_54b">If the server does not support <i>merge-tracking</i>, then this is the only way to merge
        a branch back to its parent.</note>
    </context>
    <steps>
      <step id="start-wizard">
        <cmd>Go to menu <menucascade>
            <uicontrol>Tools</uicontrol>
            <uicontrol>Merge</uicontrol>
          </menucascade>.</cmd>
        <stepresult>The <uicontrol>Merge</uicontrol> wizard is opened.</stepresult>
      </step>
      <step>
        <cmd>Select the option <uicontrol>Merge two different trees</uicontrol>.</cmd>
      </step>
      <step id="pre-merge-checks-step">
        <cmd>It is recommended that you select the <uicontrol>Perform pre-merge best practices
            checks of the working copy target</uicontrol> option to make sure that the working copy
          target item is ready for the merge operation.</cmd>
        <substeps id="substeps_b4c_vqr_4r">
          <substep>
            <cmd>Click the <uicontrol>Next</uicontrol> button.</cmd>
            <stepresult>If the <uicontrol>Perform pre-merge best practices checks of the working
                copy target</uicontrol> option is selected, <xref
                href="pre-merge-checks.dita#pre-merge-checks">the <uicontrol>Pre-Merge
                  Checks</uicontrol> wizard page</xref> is displayed.<note id="note_fp3_dgk_54b">If errors are found you
                need to solve them before proceeding.</note></stepresult>
          </substep>
        </substeps>
      </step>
      <step>
        <cmd>Click the <uicontrol>Next</uicontrol> button.</cmd>
        <stepresult>The <uicontrol>Merge two different trees</uicontrol> wizard is
          displayed.</stepresult>
      </step>
      <step>
        <cmd>In the <b>From (starting URL and revision)</b> section, enter <xref
            href="entering-local-paths-urls.dita#entering-local-paths-urls/url-section">the URL of
            the first branch</xref>.</cmd>
        <info>You may also click the <uicontrol>Browse</uicontrol> button to browse the repository
          and find the desired branch. If you have previously merged from this branch, then you can
          simply use the drop-down menu, which displays a history of previously used URLs.<p id="p_gp3_dgk_54b">
            <note type="tip" id="note_hp3_dgk_54b">If you are using this method to merge a feature branch back to its
              parent branch, you need to start the merge wizard from within a working copy of the
              parent. In this field enter the full URL of the parent branch. This may sound wrong,
              but remember that the parent is the starting point to which you want to add the branch
              changes.</note>
            <note type="note" id="different-repository-note">If the URL belongs to a different
              repository than the working copy, the <uicontrol>Ignore ancestry / Disable merge
                tracking</uicontrol> option (in the <xref href="merge-options.dita#merge-options"
                  ><uicontrol>Merge Options</uicontrol> wizard page</xref>) will be selected
              automatically (and you cannot change this). This is because the <xref
                href="final-words-merge.dita#final-words-merge/merge-from-foreign-repositories"
                >Subversion client cannot track changes between different
              repositories</xref>.</note>
            <note type="tip" id="note_ip3_dgk_54b"><ph id="merge-source-peg-revision">You can also specify a <xref
                  href="using-peg-revisions.dita#using-peg-revisions"><term>peg
                  revision</term></xref> at the end of the URL (for example,
                  <codeph>URL@rev1234</codeph>).</ph> By default, the <codeph>HEAD</codeph> revision
              is assumed.</note>
          </p></info>
      </step>
      <step>
        <cmd>Enter the last revision number at which the two trees were synchronized by choosing
          between <uicontrol>HEAD revision</uicontrol> and <uicontrol>other
          revision</uicontrol>.</cmd>
        <info>
          <p id="p_jp3_dgk_54b">
            <ul id="ul_jsx_1dy_4r">
              <li id="li_kp3_dgk_54b" irina="irina"><uicontrol>HEAD revision</uicontrol> - Use this option if you are sure that no one
                else has committed changes since the last synchronization.</li>
              <li id="li_lp3_dgk_54b" irina="irina"><uicontrol>other revision</uicontrol> - Use this option to input a specific
                revision number and avoid losing recent commits. You can use the
                  <uicontrol>History</uicontrol> button to see a list of all revisions.</li>
            </ul>
          </p>
        </info>
      </step>
      <step>
        <cmd>In the <uicontrol>To (ending URL and revision)</uicontrol> section, enter <xref
            href="entering-local-paths-urls.dita#entering-local-paths-urls/url-section">the URL of
            the second branch</xref>.</cmd>
        <info>You may also click the <uicontrol>Browse</uicontrol> button to browse the repository
          and find the desired branch. If you have previously merged from this branch, then you can
          simply use the drop-down menu, which displays a history of previously used URLs.<note
            type="tip" id="note_mp3_dgk_54b">If you are using this method to merge a feature branch back to its parent
            branch, enter the URL of the feature branch. This way, only the changes unique to this
            branch will be merged, since the branch should have been periodically synchronized with
            its parent.</note><note type="attention" id="note_np3_dgk_54b">The URL must point to the same repository as
            the one in the <uicontrol>From (starting URL and revision)</uicontrol> field. Otherwise,
            the operation will not be allowed, since Subversion cannot compute changes between items
            from different repositories.</note><note type="tip" id="note_op3_dgk_54b">You can also specify a <xref
              href="using-peg-revisions.dita#using-peg-revisions"><term>peg revision</term></xref>
            at the end of the URL (for example, <codeph>URL@rev1234</codeph>). By default, the
              <codeph>HEAD</codeph> revision is assumed.</note></info>
      </step>
      <step>
        <cmd>Select a revision to compute all changes committed up to that point by choosing between
            <uicontrol>HEAD revision</uicontrol> and <uicontrol>other revision</uicontrol>.</cmd>
        <info>
          <ul id="ul_nn5_4dy_4r">
            <li id="li_pp3_dgk_54b" irina="irina"><uicontrol>HEAD revision</uicontrol> - This is the default selected revision.</li>
            <li id="li_qp3_dgk_54b" irina="irina"><uicontrol>other revision</uicontrol> - Use this option if you want to enter a
              previous revision. You can use the <uicontrol>History</uicontrol> button to see a list
              of all revisions.</li>
          </ul>
        </info>
      </step>
      <step id="next-button">
        <cmd><ph id="config-options-ph">Optionally, if you want to <xref
              href="merge-options.dita#merge-options">configure the options</xref> for
          your merge, click the <uicontrol>Next</uicontrol> button.</ph></cmd>
        <stepresult><ph id="options-set-result">The <xref
              href="merge-options.dita#merge-options"><uicontrol>Merge Options</uicontrol>
              wizard page</xref> is displayed that allows you to configure options for the
            operation.</ph><note type="warning" id="note_rp3_dgk_54b">If the <uicontrol>Ignore ancestry / Disable merge
              tracking</uicontrol> option is selected and you chose <uicontrol>all
              revisions</uicontrol> in the <uicontrol>Revisions to merge</uicontrol> section,
            revisions that were previously merged will also be included, which may result in
            conflicts.</note></stepresult>
      </step>
      <step id="perform-merge">
        <cmd>Click the <uicontrol>Merge</uicontrol> button.</cmd>
        <stepresult>The merge operation is performed.</stepresult>
      </step>
    </steps>
    <result id="merge-result">
      <p id="p_sp3_dgk_54b">If the merge is completed successfully, all the changes corresponding to the selected
        revisions should be merged in your working copy.</p>
    </result>
    <postreq id="merge-postreq">
      <p id="p_tp3_dgk_54b">It is recommended to look at the results of the merge, in the working copy, to review the
        changes and see if it meets your expectations. Since merging can sometimes be complicated,
          <xref href="resolve-merge-conflicts.dita#resolve-merge-conflicts" format="dita"
          >you may need to resolve conflicts</xref> after making major changes.<note type="note" id="note_up3_dgk_54b"><ph
            id="commit-merge-result">The merge result is only in your local working copy and needs
            to be committed to the repository for it to be available to others.</ph></note></p>
    </postreq>
  </taskbody>
</task>
