<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="optionpage-plugin">
  <title>Option Page Plugin Extension</title>
  <shortdesc>This type of <xref keyref="glossentry_plugin"><term>plugin extension</term></xref>
    allows you to add custom <b>Preferences</b> pages.</shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Plugin extensions<indexterm>Option Page</indexterm></indexterm>
        <indexterm>Option Page plugin extension</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <conbody>
    <p id="p_in2_dgk_54b">The extension must implement the
        <term>ro.sync.exml.plugin.option.OptionPagePluginExtension</term> class. The provided
      callbacks allows you to create a custom <term>Swing</term> component that will be added to the
      page and to react to various calls to persistently save the page settings using the
        <codeph>OptionsStorage</codeph> API. </p>
    <p id="p_jn2_dgk_54b">All preferences pages that are contributed by a <term>plugin</term> are listed in the
        <b>Preferences</b> dialog box in the <uicontrol>Plugins</uicontrol> category. As long as the
      added preferences page has the same name as its <term>plugin</term>, it will be promoted to
      the first level of the hierarchy within the <uicontrol>Plugins</uicontrol> category.</p>
    <p id="p_kn2_dgk_54b">The <filepath>plugin.xml</filepath> configuration file can specify one or more such
      extensions using constructs like
      this:<codeblock outputclass="language-xml" id="codeblock_ln2_dgk_54b">&lt;extension type="OptionPage" class="my.pack.CustomOptionPagePluginExtension"/></codeblock></p>
    <section id="section_dcx_tgq_cpb">
      <title>Sharing Options Through Project Files</title>
      <p>To share options that are configured in certain plugin preferences pages, you can store
        them in a project file (<filepath>.xpr</filepath> file extension) that can easily be shared
        with others. To do this, perform these steps:<ol id="ol_nyw_thq_cpb">
          <li irina="irina">Override
              <codeph>ro.sync.exml.plugin.option.OptionPagePluginExtension.getProjectLevelOptionKeys()</codeph>
            and return a set of options that need to be saved inside the project.</li>
          <li irina="irina"><xref href="howto-install-plugins.dita">Install the plugin in an <ph keyref="product"
              /> instance</xref>.</li>
          <li conkeyref="reusables-editing-documents/li_evt_bgk_54b" id="li_emn_kcd_dpb" irina="irina"/>
          <li conkeyref="reusables-editing-documents/li_fvt_bgk_54b" id="li_tj2_lcd_dpb" irina="irina"/>
          <li conkeyref="reusables-editing-documents/li_gvt_bgk_54b" id="li_tdx_lcd_dpb" irina="irina"/>
          <li conkeyref="reusables-editing-documents/li_ivt_bgk_54b" id="li_ox2_ncd_dpb" irina="irina"/>
        </ol></p>
    </section>
  </conbody>
</concept>
