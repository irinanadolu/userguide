<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="localizing_frameworks">
  <title>Localizing Frameworks</title>
  <titlealts>
    <navtitle>Localization</navtitle>
  </titlealts>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Localizing frameworks</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p id="p_d2b_dgk_54b"><ph keyref="product"/> supports <xref keyref="glossentry_framework"
        ><term>framework</term></xref> localization (translating <term>framework</term> actions,
      buttons, and menu entries to various languages). This lets you develop and distribute a
        <term>framework</term> to users that speak other languages without changing the distributed
        <term>framework</term>. <ph product="author developer editor">Changing the language used in
          <ph keyref="product"/> in the Global preferences page is enough to set the right language
        for each <term>framework</term>.</ph></p>
    <p id="p_e2b_dgk_54b">To localize the content of a <term>framework</term>, follow this procedure:</p>
    <p id="p_f2b_dgk_54b">
      <ol id="ol_xxx_hdy_4lb">
        <li id="li_g2b_dgk_54b" irina="irina">
          <p id="p_h2b_dgk_54b">Create a <filepath>translation.xml</filepath> file that contains all the translation
            (key, value) mappings. The <filepath>translation.xml</filepath> has the following
            format:</p>
          <p id="p_i2b_dgk_54b">
            <codeblock outputclass="language-xml" id="codeblock_j2b_dgk_54b">&lt;translation>
    &lt;languageList>
        &lt;language description="English" lang="en_US"/>
        &lt;language description="German" lang="de_DE"/>
        &lt;language description="French" lang="fr_FR"/>
    &lt;/languageList>
    &lt;key value="list">
        &lt;comment>List menu item name.&lt;/comment>
        &lt;val lang="en_US">List&lt;/val>
        &lt;val lang="de_DE">Liste&lt;/val>
        &lt;val lang="fr_FR">Liste&lt;/val>
    &lt;/key>  
......................
&lt;/translation> </codeblock>
          </p>
          <p id="p_k2b_dgk_54b"><ph keyref="product"/> matches the GUI language with the language set in the
              <filepath>translation.xml</filepath> file. If this language is not found, the first
            available language declared in the <xmlelement>languagelist</xmlelement> tag for the
            corresponding <term>framework</term> is used.</p>
        </li>
        <li id="li_l2b_dgk_54b" irina="irina">The <filepath>translation.xml</filepath> file must be stored in a
          directory named <filepath>i18n</filepath> located in the framework folder. You also need
          to add a reference to the <filepath>i18n</filepath> directory in the <xref
            href="document-type-classpath-tab.dita"><uicontrol>Classpath</uicontrol> list
            corresponding to the edited document type</xref>.<p id="p_dpw_2kf_x5b"><image
              href="../img/classpath-screen0.png"/></p><note id="note_ygf_shf_x5b">If you are
            working with an extension of a framework, you have to add the reference to your
            directory after (below) the reference to the <filepath>i18n</filepath> directory for the
            base directory:<p id="p_ag4_mlf_x5b"><image href="../img/classpath-screen1.png"
            /></p></note></li>
        <li id="li_m2b_dgk_54b" irina="irina">
          <p id="p_n2b_dgk_54b">After you create this file, you can use the keys defined in it to customize the name
            and description of the following:<ul id="ul_jsf_mdy_4lb">
              <li id="li_o2b_dgk_54b" irina="irina">Actions</li>
              <li id="li_p2b_dgk_54b" irina="irina">Menu entries</li>
              <li id="li_q2b_dgk_54b" irina="irina">Contextual menus</li>
              <li id="li_r2b_dgk_54b" irina="irina">Toolbars</li>
              <li id="li_s2b_dgk_54b" irina="irina">Static CSS content</li>
            </ul></p>
          <p id="p_t2b_dgk_54b">For example, if you want to localize the bold action, <ph
              conkeyref="reusables-preferences-pages/open-the-preferences-page"/> and go to
              <uicontrol>Document Type Association</uicontrol>. Use the <uicontrol>New</uicontrol>
            or <uicontrol>Edit</uicontrol> button to open the <xref
              href="the-document-type-dialog.dita#the-document-type-dialog"><uicontrol>Document
                type</uicontrol> configuration dialog box</xref>, go to <menucascade>
              <uicontrol>Author</uicontrol>
              <uicontrol>Actions</uicontrol>
            </menucascade>, and rename the bold action to <codeph>${i18n(translation_key)}</codeph>.
            Actions with a name format other than <codeph>${i18n(translation_key)}</codeph> are not
            localized. <term>Translation_key</term> corresponds to the key from the
              <filepath>translation.xml</filepath> file.</p>
        </li>
        <li id="li_u2b_dgk_54b" irina="irina">
          <p id="p_v2b_dgk_54b">Next, open the <filepath>translation.xml</filepath> file and edit the translation entry
            if it exists or create one if it does not exist. This is an example of an entry in the
            translation.xml file:</p>
          <codeblock outputclass="language-xml" id="codeblock_w2b_dgk_54b">&lt;key value="translation_key">
        &lt;comment>Bold action name.&lt;/comment>
        &lt;val lang="en_US">Bold&lt;/val>
        &lt;val lang="de_DE">Bold&lt;/val>
        &lt;val lang="fr_FR">Bold&lt;/val>
    &lt;/key></codeblock>
          <p id="p_x2b_dgk_54b">To use a description from the <filepath>translation.xml</filepath>
            file in the Java code used by your custom <term>framework</term>, use the new <xref
              href="https://www.oxygenxml.com/InstData/Editor/SDK/javadoc/ro/sync/ecss/extensions/api/AuthorAccess.html"
              format="html" scope="external"
                ><term>ro.sync.ecss.extensions.api.AuthorAccess.getAuthorResourceBundle()</term></xref>
            API method to request the associated value for a certain key. This allows all the dialog
            boxes that you present from your custom operations to have labels translated in multiple
            languages.</p>
          <p id="p_y2b_dgk_54b">You can also reference a key directly in the CSS
            content:<codeblock outputclass="language-css" id="codeblock_z2b_dgk_54b">title:before{
    content:"${i18n(title.key)} : ";
}</codeblock></p>
          <note id="note_afb_dgk_54b" type="tip">You can enter any language you want in the
              <xmlelement>languagelist</xmlelement> tag and any number of keys.</note>
        </li>
      </ol>
    </p>
    <note type="other" othertype="DocBook Example" id="note_bfb_dgk_54b">
      <p id="p_cfb_dgk_54b">The <filepath>translation.xml</filepath> file for the DocBook
          <term>framework</term> is located here:<filepath><term
            conkeyref="reusables-user-guide/oxy-install-dir"
          />/frameworks/docbook/i18n/translation.xml</filepath>. In the
          <uicontrol>Classpath</uicontrol> list corresponding to the DocBook document type, the
        following entry was added: <codeph>${framework}/i18n/</codeph>.</p>
      <p id="p_dfb_dgk_54b">To see how the DocBook actions are defined to use these keys for their
        name and description, <ph conkeyref="reusables-preferences-pages/open-the-preferences-page"
        /> and go to <menucascade>
          <uicontrol>Document Type Association</uicontrol>
          <uicontrol>Author</uicontrol>
          <uicontrol>Actions</uicontrol>
        </menucascade>. If you look in the Java class
          <term>ro.sync.ecss.extensions.docbook.table.SADocbookTableCustomizerDialog</term>
        available in the <term>oxygen-sample-framework</term> module of the <xref
          href="https://www.oxygenxml.com/oxygen_sdk.html" scope="external" format="html">Oxygen
          SDK</xref> Maven archetype, you can see how the new
          <term>ro.sync.ecss.extensions.api.AuthorResourceBundle</term> API is used to retrieve
        localized descriptions for various keys.</p>
    </note>
  </body>
</topic>
