<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="compile-xsl-for-saxon">
  <title>Compiling an XSL Stylesheet for Saxon</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Editing XSLT<indexterm>Compile XSL Stylesheet for Saxon
          tool</indexterm></indexterm>
        <indexterm>Compile XSL Stylesheet for Saxon tool</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p id="p_ihb_cgk_54b">As of Saxon <ph keyref="saxon9FullVersion"/>, it is possible to export a
      compiled form of a stylesheet as a JSON or XML file (called a <term>stylesheet export
        file</term> or SEF). <ph keyref="product"/> includes a simple tool called <uicontrol>Compile
        XSL Stylesheet for Saxon</uicontrol> (found in the <uicontrol product="developer editor"
        >Tools</uicontrol><uicontrol product="developerEclipse editorEclipse">XML Tools</uicontrol>
      menu) that does this for you.</p>
    <section id="usecases_for_a_stylesheet_export_file_sef">
      <title>Use-Cases for a Stylesheet Export File (SEF)</title>
      <ul id="ul_jhb_cgk_54b">
        <li id="li_khb_cgk_54b" irina="irina"><b>Use Saxon-JS to run transformations in a browser</b> - A <term>stylesheet export
            file</term> (SEF) is needed if you want to use the <xref
            href="http://www.saxonica.com/saxon-js/documentation/index.html" format="html"
            scope="external">Saxon-JS product</xref> to run transformations in a browser, as in the
          following
          example:<codeblock outputclass="language-javascript" id="codeblock_lhb_cgk_54b">&lt;script type="text/javascript" src="SaxonJS/SaxonJS.min.js">&lt;/script>
&lt;script>
    window.onload = function() {
      SaxonJS.transform({
         stylesheetLocation: "books.sef",
         sourceLocation: "books.xml"
         });
    }     
&lt;/script></codeblock></li>
        <li id="li_mhb_cgk_54b" irina="irina"><b>Use SEF to run transformations in <ph keyref="product"/></b> - You can also use a
            <term>stylesheet export file</term> (SEF) in <ph keyref="product"/> to apply an XSLT
          transformation over an XML file. This requires <uicontrol>Saxon-EE</uicontrol> or
            <uicontrol>Saxon-PE</uicontrol> versions of the Saxon product and you must select one of
          those two versions for the <xref href="#compile-xsl-for-saxon/target" format="dita"
              ><uicontrol>Target</uicontrol> when you configure the SEF file</xref>. When
          configuring the XSLT transformation, you will specify the SEF file in the <xref
            href="xslt-tab.dita#xslt-tab/xsl-url"><uicontrol>XSL URL</uicontrol> field</xref>.</li>
      </ul>
    </section>
    <section id="compiling_an_sef_file">
      <title>Compiling an SEF File</title>
      <p id="p_nhb_cgk_54b">The <uicontrol>Compile XSL Stylesheet for Saxon</uicontrol> tool can be
        found in the <uicontrol product="developer editor">Tools</uicontrol><uicontrol
          product="developerEclipse editorEclipse">XML Tools</uicontrol> menu and it compiles a
        specified stylesheet as a JSON or an XML file (<i>stylesheet export file</i>).</p>
      <p id="p_gn4_qsd_rsb">If you choose <uicontrol>Saxon-JS</uicontrol> as the
          <uicontrol>Target</uicontrol> (the type of Saxon product that the export file will be used
        with), then the compiled stylesheet will be a JSON file with a file extension of
          <codeph>.sef</codeph> by default.</p>
      <p id="p_mcg_tsd_rsb">If you choose <uicontrol>Saxon-EE</uicontrol>,
          <uicontrol>Saxon-PE</uicontrol>, or <uicontrol>Saxon-HE</uicontrol> for the
          <uicontrol>Target</uicontrol>, then the compiled stylesheet will be an XML file with a
        file extension of <filepath>.xsef</filepath> by default.</p>
      <p id="p_ohb_cgk_54b">Selecting this tool opens the <uicontrol>Compile XSL Stylesheet for Saxon</uicontrol>
        dialog box that allows you to configure some options for conversion.</p>
      <p id="p_phb_cgk_54b">
        <fig id="figure-trang-converter-dialog-oxygen">
          <title>Compile XSLT Stylesheet for Saxon Dialog Box</title>
          <image href="../img/Compile_xsl_for_saxon.png"/>
        </fig>
      </p>
      <p id="p_shb_cgk_54b">This dialog box includes the following options:<dl id="dl_thb_cgk_54b">
          <dlentry id="dlentry_uhb_cgk_54b">
            <dt><uicontrol>XSL URL</uicontrol></dt>
            <dd>Allows you to select URL of the source XSL stylesheet. You can specify the URL by
              using the text field, the history drop-down, or the browsing actions in the
                  <uicontrol><image href="../img/BrowseDrop.png" product="developer editor"/><image
                  href="../img/BrowseDropEC.png" product="developerEclipse editorEclipse"
                />Browse</uicontrol> drop-down list.</dd>
          </dlentry>
          <dlentry id="dlentry_whb_cgk_54b">
            <dt><uicontrol>Output file</uicontrol></dt>
            <dd>You can specify the path where the output file will be saved by entering it in the
              text field, using the <uicontrol><image href="../img/InsertEditorVariables16.png"
                  id="image_pdh_bwg_gs"/>Insert Editor Variables</uicontrol> button, or using the
              browsing actions in the <uicontrol><image href="../img/BrowseDrop.png"
                  product="developer editor"/><image href="../img/BrowseDropEC.png"
                  product="developerEclipse editorEclipse"/>Browse</uicontrol> drop-down list.</dd>
            <dd>
              <p id="p_xhb_cgk_54b">
                <dl id="dl_yhb_cgk_54b">
                  <dlentry id="dlentry_zhb_cgk_54b">
                    <dt><uicontrol>Open in Editor</uicontrol></dt>
                    <dd>Select this option to open the resulting <term>stylesheet export file</term>
                      in the main <ph keyref="product"/> editing pane.</dd>
                  </dlentry>
                </dl>
              </p>
            </dd>
          </dlentry>
          <dlentry id="target">
            <dt><uicontrol>Target</uicontrol></dt>
            <dd>Allows you to select the type of Saxon product that the export file will be used
              with. You can choose <uicontrol>Saxon-JS</uicontrol>, <uicontrol>Saxon-EE</uicontrol>,
                <uicontrol>Saxon-PE</uicontrol>, or <uicontrol>Saxon-HE</uicontrol>.</dd>
          </dlentry>
          <dlentry id="dlentry_vhb_cgk_54b">
            <dt><uicontrol>Relocatable</uicontrol></dt>
            <dd>Can be used to control the Saxon <codeph>-relocate</codeph> parameter. You can
              select this option to produce a <i>relocatable</i> export package (SEF) that can be
              deployed to a different location, with a different base URI.</dd>
          </dlentry>
          <dlentry id="dlentry_azs_hgs_vrb">
            <dt><uicontrol>Set the default namespace for unprefixed element names
                ("-ns")</uicontrol></dt>
            <dd>
              <p id="p_pgj_jgs_vrb">Can be used to control the
                  <codeph>-ns:(uri|##any|##html5)</codeph> Saxon parameter that defines the handling
                of unprefixed element names that appear as name tests in path expressions and match
                patterns in the stylesheet:</p>
              <ul id="ul_qgj_jgs_vrb">
                <li id="li_rgj_jgs_vrb" irina="irina">The <uicontrol>##any</uicontrol> value declares that
                  unprefixed names are treated as a test on the local name of the element only. They
                  will match regardless of namespace.</li>
                <li id="li_sgj_jgs_vrb" irina="irina">The <uicontrol>##html5</uicontrol> value declares that an
                  unprefixed element name will match either a name in the XHTML namespace or a name
                  in no namespace. This option is primarily intended for use when generating
                  stylesheets to run under Saxon-JS in the browser since the resulting behavior is
                  close to that defined by the special rules in the HTML5 specification for XSLT and
                  XPath running against an HTML5 DOM.</li>
                <li id="li_tgj_jgs_vrb" irina="irina">You can also specify a valid URI by editing the value in the
                  combo box. Specifying a URI sets the default namespace for elements and types
                  (effectively a default value for <codeph>xpath-default-namespace</codeph>). Note
                  that an explicit value for this attribute takes precedence.</li>
              </ul>
            </dd>
          </dlentry>
          <dlentry conkeyref="reusables-transforming-documents/xslt-use-config-file" id="dlentry_a3b_cgk_54b">
            <dt/>
            <dd/>
          </dlentry>
          <dlentry id="dlentry_b3b_cgk_54b">
            <dt><uicontrol>Compile</uicontrol></dt>
            <dd>Use this button to generate the <term>stylesheet export file</term> according the
              options selected in this dialog box.</dd>
          </dlentry>
        </dl></p>
    </section>
  </body>
</topic>
