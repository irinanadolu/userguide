<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="webapp-create-plugin-config-page">
  <title>Creating a Plugin Configuration Page</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Administration page<indexterm>Create plugin configuration
          page</indexterm></indexterm>
        <indexterm>Create plugin configuration page in Web Author</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p id="p_txq_dgk_54b">To create a configuration page for a <xref keyref="glossentry_plugin"
      ><term>plugin</term></xref> that does not already have the <uicontrol><image
        href="../img/ConfigureSearchScope16.png"/>Configure</uicontrol> icon displayed in the
      <uicontrol>Administration</uicontrol> page, follow these steps:<ol id="ol_uxq_dgk_54b">
        <li id="li_vxq_dgk_54b" irina="irina">
          <p id="p_wxq_dgk_54b">Register a <codeph>WebappServlet</codeph> extension type with a <codeph>role</codeph>
            attribute set to <b>config</b> in your <filepath>plugin.xml</filepath> file, as in the
            following
            example:<codeblock outputclass="language-xml" id="codeblock_xxq_dgk_54b">&lt;extension type="WebappServlet" role="config" class="com.ex.MyPluginConfigExt"/></codeblock></p>
          <p id="p_yxq_dgk_54b">The <codeph>class</codeph> attribute value should point to an extension of the <xref
            href="https://www.oxygenxml.com/InstData/Editor/SDK/javadoc/ro/sync/ecss/extensions/api/webapp/plugin/PluginConfigExtension.html"
            format="html" scope="external"><i>PluginConfigExtension</i></xref> class.</p>
        </li>
        <li id="li_zxq_dgk_54b" irina="irina">When extending the <xref
          href="https://www.oxygenxml.com/InstData/Editor/SDK/javadoc/ro/sync/ecss/extensions/api/webapp/plugin/PluginConfigExtension.html"
          format="html" scope="external"><i>PluginConfigExtension</i></xref> class, consider the
          following notes:<ul id="ul_ayq_dgk_54b">
            <li id="li_byq_dgk_54b" irina="irina">Implement the <i>getOptionsForm</i> method to return an HTML
              form and make sure it contains inputs with the <codeph>name</codeph> attribute the
              same as the option you want to configure.</li>
            <li id="li_cyq_dgk_54b" irina="irina">Implement the <i>getOptionsJson</i> method to return a JSON
              string that contains the options that you want to make available to the JavaScript
              code. They will be accessible in your plugin's JavaScript code using the
              <codeph>sync.options.PluginsOptions.getClientOption(optionName)</codeph> method.
              <note id="note_dyq_dgk_54b">The JSON should only contain key values, where values
                are of the type <codeph>string|number|boolean</codeph> with no arrays or other
                objects.</note><note type="tip" id="note_eyq_dgk_54b">You should not include any
                  sensitive information (e.g. OAuth secrets) in the options returned by this
                  method.</note></li>
            <li id="li_fyq_dgk_54b" irina="irina">
              <p id="p_gyq_dgk_54b">Implement the <i>getPath</i> method to return a non-empty string
                that represents the path that will have this extension served.</p>
              <p id="p_hyq_dgk_54b">For
                example:<codeblock outputclass="language-bourne" id="codeblock_iyq_dgk_54b"> {webapp-context}/plugins-dispatcher/RESULT_OF_GETPATH</codeblock></p>
            </li>
            <li id="li_jyq_dgk_54b" irina="irina">Override the <i>init</i> method to set some defaults for your
              options and make sure you call <i>super.init()</i>. Otherwise, options will not be
              saved to disk and will be lost when you restart the application.</li>
            <li id="li_kyq_dgk_54b" irina="irina">Optionally, if you need to override any of the
              <i>doPut/doDelete</i> methods, make sure you call the <i>saveOptions</i> method at
              the end to save the options to disk.</li>
            <li id="li_lyq_dgk_54b" irina="irina">Optionally, if you need to override the <i>doGet</i> method,
              make sure it responds with the result of <i>getOptionsForm</i> for header
              <codeph>Accept=text/html</codeph>, and with the result of <i>getOptionsJson</i> when
              called with header <codeph>Accept=application/json</codeph>. Use the <i>getOption</i>
              or <i>getDefaultOptions</i> methods to access the current or default options.</li>
          </ul><note type="tip" id="note_myq_dgk_54b">For an implementation example, you can look at
            <i>com.oxygenxml.examples.webdav.WebdavPluginConfigExtension</i> in the <xref
              href="https://github.com/oxygenxml/web-author-webdav-plugin" format="html"
              scope="external">web-author-webdav-plugin</xref>.</note></li>
        <li id="li_nyq_dgk_54b" irina="irina">To use these options from the Java code of your plugin, use the <xref
          href="https://www.oxygenxml.com/InstData/Editor/SDK/javadoc/ro/sync/ecss/extensions/api/OptionsStorage.html"
          format="html" scope="external"><i>ro.sync.ecss.extensions.api.OptionsStorage</i></xref>
          API, as in the following
          example:<codeblock outputclass="language-bourne" id="codeblock_oyq_dgk_54b">PluginWorkspaceProvider.getPluginWorkspace().getOptionsStorage().getOption(name, defaultValue);</codeblock></li>
      </ol><b>Result:</b> A <uicontrol><image href="../img/ConfigureSearchScope16.png"
      />Configure</uicontrol> icon is now displayed next to its name in the
      <uicontrol>Administration</uicontrol> page. </p>
  </body>
  <related-links>
    <link href="webapp-configure-plugins.dita#webapp-configure-plugins"/>
  </related-links>
</topic>
