<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task
  PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="xproc-API-external-engine">
  <title>Integrating an External XProc Engine</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Transformation Scenarios<indexterm>Integrate external XProc
          engine</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <taskbody>
    <context>
      <p id="p_lbm_cgk_54b"><ph keyref="product"/> includes a bundled version of the <i>Calabash</i> XProc engine that
        can be used for XProc transformations and validation, but you can also integrate other
        external XProc engines. When you edit an XProc transformation scenario, there is a
          <uicontrol>Processor</uicontrol> drop-down menu where you can select the XProc engine to
        be used for the transformation.</p>
      <p id="p_mbm_cgk_54b">If you do not need the external XProc engine to be used for automatic validation or pass
        parameters/ports and it is not Java-based, you can simply add the external engine by using
        the <xref href="preferences-xproc-engines.dita"><uicontrol>XProc</uicontrol> preferences
          page</xref>. Otherwise, if the external engine is Java-based, or it has validation
        support, or it can receive parameters or ports passed from the transformation, you need to
        integrate it using the plugin extension procedure below.</p>
      <p id="p_nbm_cgk_54b">For example, there is a public project on GitHub that is an
        implementation for integrating <i>Morgana XProc</i> with <ph keyref="product"/>: <xref
          href="https://github.com/xml-project/support-for-xmleditor" format="html" scope="external"
        />. Also, the Javadoc documentation of the XProc API is available for download from the
        application website as a zip file: <xref
          href="https://www.oxygenxml.com/InstData/Editor/SDK/xprocAPI.zip" scope="external"
          format="zip"><i>xprocAPI.zip</i></xref>.</p>
      <p id="p_obm_cgk_54b">To create an XProc integration project, follow these steps:</p>
    </context>
    <steps>
      <step>
        <cmd>Move the <filepath>oxygen.jar</filepath> file from <filepath><term
              conkeyref="reusables-user-guide/oxy-install-dir"/>/lib</filepath> to the
            <filepath>lib</filepath> folder of your project.</cmd>
      </step>
      <step>
        <cmd>Implement the <i>ro.sync.xml.transformer.xproc.api.XProcTransformerInterface</i>
          interface.</cmd>
      </step>
      <step>
        <cmd>Create a <xref keyref="glossentry_jar"><term>Java archive (JAR)</term></xref> from the
          classes you created.</cmd>
      </step>
      <step>
        <cmd>Create an <filepath>engine.xml</filepath> file according to the
          <filepath>engine.dtd</filepath> file. The attributes of the <xmlelement>engine</xmlelement>
          element are as follows: </cmd>
        <info>
          <ol id="ol_pbm_cgk_54b">
            <li id="li_qbm_cgk_54b" irina="irina"><b>name</b> - The name of the XProc engine.</li>
            <li id="li_rbm_cgk_54b" irina="irina"><b>description</b> - A short description of the XProc engine.</li>
            <li id="li_sbm_cgk_54b" irina="irina"><b>class</b> - The complete name of the class that implements
                <i>ro.sync.xml.transformer.xproc.api.XProcTransformerInterface</i>.</li>
            <li id="li_tbm_cgk_54b" irina="irina"><b>version</b> - The version of the integration.</li>
            <li id="li_ubm_cgk_54b" irina="irina"><b>engineVersion</b> - The version of the integrated engine.</li>
            <li id="li_vbm_cgk_54b" irina="irina"><b>vendor</b> - The name of the vendor / implementer.</li>
            <li id="li_wbm_cgk_54b" irina="irina"><b>supportsValidation</b> - <b>true</b> if the engine supports validation
              (otherwise, <b>false</b>).</li>
          </ol>
          <p id="p_xbm_cgk_54b">The <xmlelement>engine</xmlelement> element has only one child, <xmlelement>runtime</xmlelement>. The
            <xmlelement>runtime</xmlelement> element contains several <xmlelement>library</xmlelement> elements
            with the <xmlatt>name</xmlatt> attribute containing the relative or absolute location of
            the libraries necessary to run this integration.</p>
        </info>
      </step>
      <step>
        <cmd>Create a new folder (for example, named <filepath>MyXprocEngine</filepath>) and place
          the <filepath>engine.xml</filepath> and all the libraries necessary to run the new
          integration in that folder.</cmd>
      </step>
      <step>
        <cmd>Place that new folder (e.g. <filepath>MyXprocEngine</filepath>) inside a new plugin
          folder. This new plugin folder should also contain a <filepath>plugin.xml</filepath> file
          that points to the new engine folder (e.g. <filepath>MyXprocEngine</filepath>).</cmd>
        <info>The <filepath>plugin.xml</filepath> file would look like this<ph
            product="author developer editor"> (it is based on the <xref
              href="additional-xproc-engine.dita#additional-xproc-engine"
                ><b>AditionalXProcEngine</b>
          extension</xref>)</ph>:<codeblock outputclass="language-xml" id="codeblock_ybm_cgk_54b">&lt;plugin
 id="morgana.xproc.addon"
 name="Contribute Morgana XProc"
 description="Contribute Morgana XProc"
 version="1.0"
 vendor="Syncro Soft"
 class="ro.sync.exml.plugin.Plugin"
 classLoaderType="preferReferencedResources">
 &lt;extension type="AdditionalXProcEngine" path="MyXprocEngine/">&lt;/extension>
&lt;/plugin></codeblock></info>
      </step>
    </steps>
  </taskbody>
  <related-links>
    <linklist>
      <title>Related Information:</title>
      <link href="editing-xproc-scripts.dita#editing-xproc-scripts"
        product="developer editor developerEclipse editorEclipse"/>
      <link href="xproc-transformation-scenario.dita#xproc-transformation-scenario">
        <linktext>Creating an XProc Transformation Scenario</linktext>
      </link>
      <link href="additional-xproc-engine.dita" product="author developer editor"/>
    </linklist>
  </related-links>
</task>
