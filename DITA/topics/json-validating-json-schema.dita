<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="json-validating-json-schema">
  <title>Validating JSON Schema Documents</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>JSON documents<indexterm>Validating JSON schema</indexterm></indexterm>
        <indexterm>Validating JSON schema</indexterm>
        <indexterm>JSON schema</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p id="p_jgg_cgk_54b">A <i>valid</i> JSON Schema document is a <i>well-formed</i> document that also conforms to
      the JSON meta-schema rules that defines the legal syntax of a JSON Schema document.</p>
    <p id="p_kgg_cgk_54b">If a JSON document includes a meta-schema URL in the document root with the <b>"$schema"</b>
      key, the file will be validated as a JSON Schema against the specified meta-schema.</p>
    <p id="p_lgg_cgk_54b"><b><u>Quick Reference</u></b><ul id="ul_mgg_cgk_54b">
        <li id="li_ngg_cgk_54b" irina="irina">If there is a <b>"$schema": "http://json-schema.org/draft-04/schema"</b> property in the
          schema root, then <xref
            href="https://tools.ietf.org/html/draft-fge-json-schema-validation-00" format="html"
            scope="external">Draft 4</xref> will be used.</li>
        <li id="li_ogg_cgk_54b" irina="irina">If there is a <b>"$schema": "http://json-schema.org/draft-06/schema"</b> property in the
          schema root, then <xref
            href="https://tools.ietf.org/html/draft-wright-json-schema-validation-01" format="html"
            scope="external">Draft 6</xref> will be used.</li>
        <li id="li_pgg_cgk_54b" irina="irina">If there is a <b>"$schema": "http://json-schema.org/draft-07/schema"</b> property in the
          schema root, then <xref
            href="https://tools.ietf.org/html/draft-handrews-json-schema-validation-01"
            format="html" scope="external">Draft 7</xref> will be used.</li>
        <li id="li_qgg_cgk_54b" irina="irina">If there is a <b>"$schema":
              "<b>http://json-schema.org/draft/2019-09/schema</b>"</b> property in the schema root,
          then <xref href="https://json-schema.org/draft/2019-09/json-schema-validation.html"
            format="html" scope="external">2019-09</xref> will be used.</li>
        <li id="li_gxp_t2t_drb" irina="irina">If there is a <b>"$schema":
              "<b>http://json-schema.org/draft/2020-12/schema</b>"</b> property in the schema root,
          then <xref href="https://json-schema.org/draft/2020-12/json-schema-validation.html"
            format="html" scope="external">2020-12</xref> will be used.</li>
        <li id="li_rgg_cgk_54b" irina="irina">If there is a <b>"$schema"</b> property in the schema root, but with
          a different draft value, then an error will be displayed (<i>"could not determine
            version"</i>).</li>
        <li id="li_sgg_cgk_54b" irina="irina">If none of these are found, then it is validated as a simple JSON instance.</li>
        <li id="li_tgg_cgk_54b" irina="irina">You could also select the <uicontrol>JSON Schema Validator</uicontrol> in a <xref
            href="json-validation-scenario.dita">JSON validation scenario</xref> and it will use the
          version specified in the JSON Schema, or if a version is not specified, the <xref
            href="https://tools.ietf.org/html/draft-fge-json-schema-validation-00" format="html"
            scope="external">JSON Schema draft-04</xref> will be used.</li>
      </ul></p>
    <p id="p_ugg_cgk_54b">For information about how to associate a JSON Schema for the purposes of
      validation, see <xref href="json-associate-schema-validation-scenario.dita"/>.</p>
    <p id="p_bgg_cgk_54b">For information about using a JSON Schema to validate documents, see <xref
        href="json-validating-documents-against-schema.dita"/>. </p>
    <section id="section_n4d_llf_y5b">
      <title>2019-09 and 2020-12 Validator Limitations</title>
    </section>
    <p>The JSON Schema Validator handles all the newly introduced keywords in 2019-09 and
      2020-12 specifications. However, there are still some limitations:<ol
        id="ol_rdf_2lf_y5b">
        <li irina="irina">The keywords <b>"$recursiveRef"</b> and <b>"$recursiveAnchor"</b> (2019-09) are
          not supported. This is also indicated by a validation warning.</li>
        <li irina="irina">The keyword <b>"$dynamicRef"</b> has the same functionality as <b>"$ref"</b>, and
            <b>"$dynamicAnchor"</b> (2020-12) is not supported. This is also indicated by a
          validation warning.</li>
        <li irina="irina">The keywords <b>"unevaluatedProperties"</b> / <b>"unevaluatedItems"</b> can "see
          through" the subschemas of adjacent keywords <b>"if", "then", "else",</b> but do not know
          about successfully validated <i>properties</i> / <i>items</i>. This means that all the
            <i>properties</i> / <i>items</i> defined by those subschemas are considered
          evaluated.</li>
        <li irina="irina">The keywords <b>"unevaluatedProperties"</b> / <b>"unevaluatedItems"</b> can "see
          through" the nested subschemas of adjacent keywords <b>"oneOf", "anyOf", "allOf"</b>, but
          all the <i>properties</i> / <i>items</i> defined by those subschemas are considered
          evaluated, regardless of other nested restrictions.</li>
      </ol></p>
  </body>
</topic>
