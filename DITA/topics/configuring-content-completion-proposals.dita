<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="configuring-content-completion-proposals">
  <title>Configuring the Proposals for Attribute and Element Values </title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Framework customization<indexterm>Configuring content completion
            proposals</indexterm></indexterm>
        <indexterm>Configuring content completion proposals</indexterm>
        <indexterm>Content completion configuration file (cc_config.xml)</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p id="p_yx1_dgk_54b"><ph keyref="product"/> includes support for configuring the proposed values that appear in
      the <xref keyref="glossentry_content-completion-assistant"><term>Content Completion
          Assistant</term></xref>. To do so, a configuration file is used, along with the associated
      schema, to add or replace possible values for attributes or elements that are proposed in the
        <term>Content Completion Assistant</term>.</p>
    <p id="p_zx1_dgk_54b">For an example of a specific use-case, suppose that you want the <term>Content Completion
        Assistant</term> to propose several possible values for the language code when you use an
        <xmlatt>xml:lang</xmlatt> attribute.</p>
    <section conkeyref="reusables-editing-documents/how_to_configure_the_proposed_values_in_cc"
      id="d2e47"/>
    <section id="configuration_file">
      <title>Configuring Proposed Values</title>
      <p id="p_ay1_dgk_54b">For the purposes of adding or replacing the values that are proposed,
        the configuration file (<filepath>cc_config.xml</filepath>) includes a series of
          <codeph>valueProposals</codeph> instructions that will match an element or attribute name
        and has the following attributes:<ul id="ul_ssl_g5p_cpb">
          <li irina="irina"><p><b>path</b> - A path within the document that matches the element or attribute that
              will have its content completion proposals changed. For example:<ul
                id="ul_ddd_hcq_cpb">
                <li irina="irina"><codeph>path="title"</codeph> matches all the <xmlelement>title</xmlelement>
                  elements in the document.</li>
                <li irina="irina"><codeph>path="chapter/title"</codeph> matches only the
                    <xmlelement>title</xmlelement> elements that are direct children of the
                    <xmlelement>chapter</xmlelement> element.</li>
                <li irina="irina"><codeph>path="@xml:lang"</codeph> matches all the <xmlatt>xml:lang</xmlatt>
                  attributes in the document.</li>
                <li irina="irina"><codeph>path="title/@xml:lang"</codeph> matches only the
                    <xmlatt>xml:lang</xmlatt> attributes that appear on
                    <xmlelement>title</xmlelement> elements. </li>
              </ul></p>You can use simplified forms of XPath in this attribute.<p
              conkeyref="reusables-author-mode-customization/p_path_attr_first" id="p_mfw_1yc_dpb"
              /><p conkeyref="reusables-author-mode-customization/p_f51_dgk_54b" id="p_qmh_byc_dpb"
              /><p conkeyref="reusables-author-mode-customization/p_l51_dgk_54b" id="p_gxs_byc_dpb"
              /><p conkeyref="reusables-author-mode-customization/p_path_attr_examples"
              id="p_pdh_cyc_dpb"/></li>
          <li irina="irina"><b>editable</b> - Specifies the editable state of the attribute values, as reflected
            in the <xref href="author-attributes-view.dita#author-attributes-view"
                ><uicontrol>Attributes</uicontrol> view</xref> and the <xref
              href="author-attributes-view.dita#author-attributes-view/in-place-attr-editor"
                ><uicontrol>In-place Attributes Editor</uicontrol></xref>. The possible values for
            the <xmlatt>editable</xmlatt> attribute are:<ul id="ul_by1_dgk_54b">
              <li id="li_cy1_dgk_54b" irina="irina"><b>true</b> - The attribute values can be edited by choosing
                from a combo box or manually providing a value.</li>
              <li id="li_dy1_dgk_54b" irina="irina"><b>false</b> - The attribute values cannot be edited.</li>
              <li id="li_ey1_dgk_54b" irina="irina"><b>onlyAllowedItems</b> - The attribute values can be edited,
                but only by choosing from a list of proposed values, in a non-editable combo
                box.</li>
            </ul></li>
        </ul></p>
      <p id="p_fy1_dgk_54b">The new value proposals are specified in the
          <xmlelement>valueProposals</xmlelement> element through: <ul id="ul_kbn_ldq_cpb">
          <li irina="irina">One or more <xmlelement>item</xmlelement> elements, which are grouped inside an
              <xmlelement>items</xmlelement> element.<note id="note_npp_r2q_sqb" type="tip">The
                <xmlelement>item</xmlelement> element can have a <xmlatt>listValue</xmlatt>
              attribute, which can be set to <b>true</b> if you want those items to be part of a
              list attribute value (such as <codeph>attr="item1 item2"</codeph>).</note></li>
          <li irina="irina">An <xmlelement>xslt</xmlelement> element that references an XSLT script that gets
            executed and must return an <xmlelement>items</xmlelement> element.</li>
        </ul></p>
      <p>The behavior of the <xmlelement>items</xmlelement> or <xmlelement>xslt</xmlelement>
        elements are specified with the help of the <xmlatt>action</xmlatt> attribute, which can
        have any of the following values:<ul id="ul_ghd_c55_kr">
          <li id="li_gy1_dgk_54b" irina="irina"><b>append</b> - Adds new values to appear in the proposals list
            (default value).</li>
          <li id="li_hy1_dgk_54b" irina="irina"><b>addIfEmpty</b> - Adds new values to the proposals list only if
            no other values are contributed by the schema.</li>
          <li id="li_iy1_dgk_54b" irina="irina"><b>replace</b> - Replaces the values contributed by the schema
            with new values to appear in the proposals list.</li>
        </ul></p>
      <p id="p_jy1_dgk_54b">The values in the configuration file can be specified either directly or
        by calling an external XSLT file that will extract data from an external source. An
          <xmlelement>xslt</xmlelement> element must be used in this situation.</p>
      <note id="note_xmh_qyp_cpb"><codeph>valueProposals</codeph> offers more flexibility compared
        to the old <codeph>match</codeph> element that was marked as
        deprecated.<codeblock id="codeblock_ytb_sbq_cpb" outputclass="language-xml">&lt;match elementName="lg" elementNS="http://www.oxygenxml.com/ns/samples">
    &lt;items action="replace">
        &lt;item value="stanza"/>
        &lt;item value="refrain"/>
    &lt;/items>
&lt;/match></codeblock></note>
    </section>
    <section id="other_important_notes">
      <title>Other Important Notes About the Configuration File</title>
      <note type="important" id="note_ky1_dgk_54b">
        <ul id="ul_ly1_dgk_54b">
          <li id="li_my1_dgk_54b" irina="irina">This configuration file only affects the content completion assistance, not
            validation.</li>
          <li id="li_ny1_dgk_54b" irina="irina">To test the effects of your changes, you should <xref
              href="author-editing-refreshing.dita">Refresh the source document</xref>.</li>
        </ul>
      </note>
    </section>
    <section id="example_specifying_values_directly">
      <title>Example: Specifying Values Directly</title>
      <p id="p_oy1_dgk_54b">If you want to specify the values directly, the configuration file should look like
        this:</p>
      <p id="p_py1_dgk_54b">
        <codeblock outputclass="language-xml" id="codeblock_qy1_dgk_54b">&lt;!-- Replaces the values for an element with the local name "lg",
      from the given namespace -->
&lt;valueProposals path="x:lg" xmlns:x="http://www.oxygenxml.com/ns/samples">
  &lt;items action="replace">
    &lt;item value="stanza"/>
    &lt;item value="refrain"/>
  &lt;/items>
&lt;/valueProposals>

&lt;!-- Adds two values for an attribute "type", from no namespace -->
&lt;valueProposals path="@type" editable="onlyAllowedItems">
    &lt;items>
        &lt;item value="stanza"/>
        &lt;item value="refrain"/>
    &lt;/items>
&lt;/valueProposals></codeblock>
      </p>
    </section>
    <section id="section_vsr_fxp_cpb">
      <title>Example: Using Attribute Conditions</title>
      <p>The possible values of an attribute depend on the value of another attribute from the same
        element:</p>
      <p>
        <codeblock outputclass="language-xml" id="codeblock_wsr_fxp_cpb">&lt;valueProposals path="property[@name='color']">
  &lt;items>
    &lt;item value="red"/>
    &lt;item value="blue"/>
  &lt;/items>
&lt;/valueProposals>

&lt;valueProposals path="property[@name='shape']">
  &lt;items>
    &lt;item value="rectangle"/>
    &lt;item value="square"/>
  &lt;/items>
&lt;/valueProposals></codeblock>
      </p>
    </section>
    <section id="example_calling_an_external_xslt_script">
      <title>Example: Calling an External XSLT Script</title>
      <p id="p_ry1_dgk_54b">If you want to collect values from an external XSLT script, the configuration file should
        include something like this:</p>
      <p id="p_sy1_dgk_54b">
        <codeblock outputclass="language-xml" id="codeblock_ty1_dgk_54b">&lt;xslt href="../xsl/get_values_from_db.xsl" useCache="false" action="replace"/></codeblock>
      </p>
      <p id="p_uy1_dgk_54b">In this example, the <codeph>get_values_from_db.xsl</codeph> is executed
        to extract values from a database.<note type="tip" id="note_vy1_dgk_54b">You can use
            <codeph>xsl:message</codeph> as a debugging mechanism. These messages are presented in
          the results area at the bottom of the application whenever the <term>Content Completion
            Assistant</term> is invoked.</note><note id="note_wy1_dgk_54b">A comprehensive XSLT
          sample is included in the <uicontrol>Content Completion Configuration</uicontrol> document
          template (in the <menucascade>
            <uicontrol>Framework Templates</uicontrol>
            <uicontrol>Oxygen Extensions</uicontrol>
          </menucascade> section of the <xref href="new-dialog-sa.dita#new-dialog-sa"
            product="author developer editor"><uicontrol>New</uicontrol> document wizard</xref><xref
            href="creating-from-templates.dita#creating-from-templates"
            product="authorEclipse developerEclipse editorEclipse"><uicontrol>New from
              templates</uicontrol> wizard</xref>).</note><note id="note_hjq_jkb_xpb">If
            <xmlatt>useCache</xmlatt> is set to <term>false</term>, then the XSLT will be invoked
          any time the proposals are needed. If <xmlatt>useCache</xmlatt> is set to
            <term>true</term>, then the XSLT is executed once and the obtained proposals are kept in
          a cache and returned every time the proposals are requested again. You can use the
              <uicontrol><image href="../img/Validate16.png"/>Validate</uicontrol> action to drop
          the cached values and recompute them.</note></p>
    </section>
    <section id="configuring_proposed_values_in_context">
      <title>Configuring Proposed Values in the Context Where the Content Completion was
        Invoked</title>
      <note type="other" othertype="Web Author Customization Note" id="note_xy1_dgk_54b">This particular scenario is not
        supported for an <ph keyref="webappProduct"/> customization.</note>
      <p id="p_yy1_dgk_54b">A more complex scenario is if you want to choose the possible values to propose, depending
        on the context of the element where the content completion was invoked.</p>
      <p id="p_zy1_dgk_54b">Suppose that you want to propose certain possible values for one property (for example,
          <i>color</i>) and other values for another property (for example, <i>shape</i>). If the
        property represents a color, then the values should represent applicable colors, while if
        the property represents a shape, then the values should represent applicable shapes. See the
        following code snippets:</p>
      <p id="p_az1_dgk_54b">Your main
        document:<codeblock outputclass="language-xml" id="codeblock_bz1_dgk_54b">&lt;sampleArticle>
  &lt;!-- The possible values for @value should be "red" and "blue" -->
  &lt;property name="color" value=""/>
  &lt;!-- The possible values for @value should be "square" and "rectangle" -->
  &lt;property name="shape" value=""/>
&lt;/sampleArticle></codeblock>The content completion configuration
        file:<codeblock outputclass="language-xml" id="codeblock_cz1_dgk_54b">&lt;config xmlns="http://www.oxygenxml.com/ns/ccfilter/config">
    &lt;valueProposals path="property/@value">
      &lt;xslt href="get_values.xsl" useCache="false" action="replace"/>
    &lt;/valueProposals>
&lt;/config></codeblock>The stylesheet that defines the possible values based on the context
        of the property on which the content completion was
        invoked:<codeblock outputclass="language-xml" id="codeblock_dz1_dgk_54b">&lt;xsl:stylesheet 
  xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns:xs="http://www.w3.org/2001/XMLSchema"
  exclude-result-prefixes="xs"
  version="3.0">
  
  &lt;xsl:param name="documentSystemID" as="xs:string">&lt;/xsl:param>
  &lt;xsl:param name="contextElementXPathExpression" as="xs:string">&lt;/xsl:param>
  
  &lt;xsl:template name="start">
    &lt;xsl:apply-templates select="doc($documentSystemID)"/>
  &lt;/xsl:template>
  
  &lt;xsl:template match="/">
   &lt;xsl:variable name="propertyElement" as="element()">
     &lt;xsl:evaluate xpath="$contextElementXPathExpression" context-item="./*"/>
   &lt;/xsl:variable>
    
   &lt;items>
     &lt;xsl:if test="$propertyElement/@name = 'color'">
       &lt;item value='red'/>
       &lt;item value='blue'/>  
     &lt;/xsl:if>
     &lt;xsl:if test="$propertyElement/@name = 'shape'">
       &lt;item value='rectangle'/>
       &lt;item value='square'/>  
     &lt;/xsl:if>
   &lt;/items>
  &lt;/xsl:template>
&lt;/xsl:stylesheet></codeblock></p>
      <p id="p_ez1_dgk_54b">The <codeph>contextElementXPathExpression</codeph> parameter will be bound to an XPath
        expression that identifies the element in the context where the content completion was
        invoked.</p>
    </section>
  </body>
  <related-links>
      <link
        href="configure-elements-attr-cc-individually.dita#configure-elements-attr-cc-individually"/>
      <link href="rendering-elements-cc-author.dita#rendering-elements-cc-author"
        product="author editor authorEclipse editorEclipse"/>
  </related-links>
</topic>
