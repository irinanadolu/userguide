<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="validator-plugin-extension">
  <title>Validator Plugin Extension</title>
  <shortdesc>This type of <xref keyref="glossentry_plugin"><term>plugin</term></xref> allows you to
    add an external validation engine from a <term>plugin</term>.</shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Plugin extensions<indexterm>validator</indexterm></indexterm>
        <indexterm>validator plugin extension</indexterm>
      </keywords>
    </metadata>
  </prolog>
    <body>
        <p id="p_wp2_dgk_54b">The name of the <term>plugin</term> extension is
        <term>DocumentValidator</term> and it makes it possible to contribute your own
      implementation of a validation engine. After the plugin is installed, if you create a new
      validation scenario or edit an existing validation scenario to add a validation stage, you
      will find the name of the new engine contributed by the plugin in the <uicontrol>Validation
        Engine</uicontrol> combo box.</p>
    <p id="p_xp2_dgk_54b">To create a plugin that implements the validator extension:</p>
      <ol id="ul_jv4_q2x_lkb">
      <li id="li_aq2_dgk_54b" irina="irina">Implement the
          <term>ro.sync.exml.plugin.validator.ValidatorPluginExtension</term> interface in your
        plugin's libraries.</li>
      <li id="li_bq2_dgk_54b" irina="irina">In the <term>plugin</term> descriptor file, define the
          <xmlelement>extension</xmlelement> element that points to the implementation of your
        classes:<codeblock outputclass="language-xml" id="codeblock_cq2_dgk_54b">&lt;extension type="DocumentValidator" class="my.validator.plugin.extension"/></codeblock></li>
    </ol>
    </body>
</topic>
