<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="webapp-integrate-github-plugin">
  <title>Integrating Web Author with Git (GitHub, GitLab, Bitbucket)</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Git repository support<indexterm>Configuring GitHub
          integration</indexterm></indexterm>
        <indexterm>Git repository support<indexterm>Configuring GitLab
          integration</indexterm></indexterm>
        <indexterm>Git repository support<indexterm>Configuring Bitbucket
          integration</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p id="p_acr_dgk_54b"><ph keyref="webappProduct"/> includes a built-in <uicontrol>Git Plugin</uicontrol> that
      allows you to edit files stored in a Git repository. While it provides the ability to connect
      to any Git repository, it has better support for GitHub, GitLab, and Bitbucket integrations.
      The <uicontrol>Git Plugin</uicontrol> allows you to access repositories simply by using your
      login credentials.</p>
    <section id="github_integration">
      <title>GitHub Integration</title>
      <p id="p_bcr_dgk_54b">You can configure your Git <term>plugin</term> to allow <term>OAuth
          2.0</term> authentication for GitHub integrations to access files stored in a public or
        private repository. Your team will then have access to a <uicontrol>Connect with
          GitHub</uicontrol> button when connecting. You can configure your integration either by
        using <i>github.com</i> or with a <i>GitHub Enterprise</i> deployment.</p>
      <p id="p_ccr_dgk_54b">
        <fig id="fig_dcr_dgk_54b">
          <title>GitHub Connect</title>
          <image href="../img/WA_git_connect.png"/>
        </fig>
      </p>
      <p id="p_ecr_dgk_54b"><u><b>Configuring a Git Integration with <i>github.com</i></b></u></p>
      <p id="p_fcr_dgk_54b">To configure your Git integration using <i>github.com</i>, follow this procedure:<ol id="ol_gcr_dgk_54b">
          <li id="li_hcr_dgk_54b" irina="irina">Log in to GitHub and register a new OAuth application at <xref
              href="https://github.com/settings/applications/new" format="html" scope="external"/>.<ol id="ol_icr_dgk_54b">
              <li id="li_jcr_dgk_54b" irina="irina">Complete the form.</li>
              <li id="li_kcr_dgk_54b" irina="irina">The <uicontrol>Authorization callback URL</uicontrol> field should include the
                following path:
                  <filepath>[OXYGEN_WEBAUTHOR_URL]/plugins-dispatcher/github-oauth/callback</filepath>,
                where [OXYGEN_WEBAUTHOR_URL] is the location where Web Author is deployed (for
                example, <filepath>http://Your-Domain:8077/apps/webauthor</filepath>).</li>
            </ol></li>
          <li id="li_lcr_dgk_54b" irina="irina">Click on <uicontrol>Register application</uicontrol> to obtain the <uicontrol>Client
              ID</uicontrol> and <uicontrol>Client Secret</uicontrol> credentials (they are
            displayed at the top-right section of the resulting page).</li>
          <li id="li_mcr_dgk_54b" irina="irina">Set your <uicontrol>Client ID</uicontrol> and <uicontrol>Client Secret</uicontrol>
            credentials in your <term>plugin</term> configuration by doing the following:<ol id="ol_ncr_dgk_54b">
              <li id="li_ocr_dgk_54b" irina="irina">Go to the <xref href="../topics/webapp-admin-page.dita#webapp-admin-page"
                    ><uicontrol>Administration Page</uicontrol></xref>.</li>
              <li id="li_pcr_dgk_54b" irina="irina">
                <p id="p_qcr_dgk_54b">In the <uicontrol>Plugins</uicontrol> section, click on the <uicontrol><image
                      href="../img/ConfigureSearchScope16.png" id="image_vc3_sc5_53b"
                    />Configure</uicontrol> icon for the Git <term>plugin</term> and select the
                    <uicontrol>GitHub</uicontrol> tab.</p>
                <p id="p_rcr_dgk_54b">
                  <fig id="fig_scr_dgk_54b">
                    <title>GitHub Plugin Configuration Dialog Box</title>
                    <image href="../img/WA_GitHub_config.png"/>
                  </fig>
                </p>
              </li>
              <li id="li_tcr_dgk_54b" irina="irina">Enter the <uicontrol>Client ID</uicontrol> and <uicontrol>Client
                  Secret</uicontrol> in the <uicontrol>Plugin configuration</uicontrol> dialog
                box.</li>
              <li id="li_k5j_szy_51c" irina="irina">For the <uicontrol>Retrieve documents strategy</uicontrol>, if
                you select <i>GitHub REST API</i>, the documents are retrieved via individual
                HTTP(S) requests to the REST API of the Git server. If you select <i>Hybrid</i>, the
                repository is briefly cloned and stored in memory, then the application discards the
                clone after loading and switches to HTTP(S) requests to the REST API of the Git
                server.</li>
              <li id="li_ucr_dgk_54b" irina="irina">Click <uicontrol>Apply</uicontrol>.</li>
            </ol></li>
          <li id="li_vcr_dgk_54b" irina="irina"><xref href="webauthor-restart.dita">Restart <ph keyref="webappProduct"/></xref>.</li>
        </ol></p>
      <p id="p_wcr_dgk_54b"><b>Result:</b> You now have access to the <uicontrol>Connect with
          GitHub</uicontrol> button.</p>
      <note type="tip" id="note_xcr_dgk_54b">It is possible to control which GitHub teams are allowed to edit a part of a
        document when the users that belong to that team load the document. For details, see <xref
          href="https://www.oxygenxml.com/doc/ug-waCustom/topics/webauthor-user-management-integration.html#webauthor-user-management-integration__section_enable-github-team"
          format="html" scope="external">Customizing the UI Based on the GitHub Team for the Current
          User</xref>.</note>
      <p id="github_enterprise_integration"><u><b>Configuring a Git Integration with a <i>GitHub Enterprise</i> Deployment</b></u></p>
      <p id="p_ycr_dgk_54b">To configure your Git integration using a <i>GitHub Enterprise</i> deployment, follow this procedure:<ol id="ol_zcr_dgk_54b">
          <li id="li_adr_dgk_54b" irina="irina">Log in to GitHub Enterprise and register a new developer application. The URL is:
              <filepath>[GithubEnterpriseUrl]/settings/applications/new</filepath>.<ol id="ol_bdr_dgk_54b">
              <li id="li_cdr_dgk_54b" irina="irina">Complete the form.</li>
              <li id="li_ddr_dgk_54b" irina="irina">The <uicontrol>Authorization callback URL</uicontrol> field should include the
                following path:
                  <filepath>[OXYGEN_WEBAUTHOR_URL]/plugins-dispatcher/github-oauth/callback</filepath>,
                where [OXYGEN_WEBAUTHOR_URL] is the location where Web Author is deployed (for
                example, <filepath>http://Your-Domain:8077/apps/webauthor</filepath>).</li>
            </ol></li>
          <li id="li_edr_dgk_54b" irina="irina">Obtain the <uicontrol>Client ID</uicontrol> and <uicontrol>Client Secret</uicontrol>
            credentials at: <filepath>[GithubEnterpriseUrl]/settings/developers</filepath>.</li>
          <li id="li_fdr_dgk_54b" irina="irina">Set the <uicontrol>Client ID</uicontrol>, <uicontrol>Client Secret</uicontrol>, and
            the <uicontrol>API URL</uicontrol> in your <term>plugin</term> configuration by doing
            the following:<ol id="ol_gdr_dgk_54b">
              <li id="li_hdr_dgk_54b" irina="irina">Go to the <xref href="../topics/webapp-admin-page.dita#webapp-admin-page"
                    ><uicontrol>Administration Page</uicontrol></xref>.</li>
              <li id="li_idr_dgk_54b" irina="irina">
                <p id="p_jdr_dgk_54b">In the <uicontrol>Plugins</uicontrol> section, click on the <uicontrol><image
                      href="../img/ConfigureSearchScope16.png" id="image_fxz_sc5_53b"
                    />Configure</uicontrol> icon for the Git <term>plugin</term>, select the
                    <uicontrol>GitHub</uicontrol> tab, and select the <uicontrol>Use GitHub
                    Enterprise</uicontrol> option.</p>
                <p id="p_kdr_dgk_54b">
                  <fig id="fig_ldr_dgk_54b">
                    <title>GitHub Enterprise Plugin Configuration Dialog Box</title>
                    <image href="../img/WA_GitHub_Ent_config.png"/>
                  </fig>
                </p>
              </li>
              <li id="li_mdr_dgk_54b" irina="irina">Enter the <uicontrol>API URL</uicontrol>, <uicontrol>Client ID</uicontrol>, and
                  <uicontrol>Client Secret</uicontrol> in the <uicontrol>Plugin
                  configuration</uicontrol> dialog box. The <uicontrol>API URL</uicontrol> is the
                URL of your GitHub Enterprise deployment
                (<filepath>[GithubEnterpriseUrl]</filepath>).</li>
              <li id="li_izt_g1z_51c" irina="irina">For the <uicontrol>Retrieve documents strategy</uicontrol>, if
                you select <i>GitHub REST API</i>, the documents are retrieved via individual
                HTTP(S) requests to the REST API of the Git server. If you select <i>Hybrid</i>, the
                repository is briefly cloned and stored in memory, then the application discards the
                clone after loading and switches to HTTP(S) requests to the REST API of the Git
                server.</li>
              <li id="li_ndr_dgk_54b" irina="irina">Click <uicontrol>Apply</uicontrol>.</li>
            </ol></li>
          <li id="li_odr_dgk_54b" irina="irina"><xref href="webauthor-restart.dita">Restart <ph keyref="webappProduct"/></xref>.</li>
        </ol></p>
      <p id="p_pdr_dgk_54b"><b>Result:</b> You now have access to the <uicontrol>Connect with
          GitHub</uicontrol> button.<note id="note_qdr_dgk_54b">If your <i>GitHub Enterprise</i>
          deployment uses self-signed HTTPS certificates, <ph keyref="webappProduct"/> must be
          configured to automatically accept the security certificate (deselect the <xref
            href="webapp-admin-page.dita#webapp-admin-page/dlentry_mvq_dgk_54b"><uicontrol>Reject
              invalid security certificates</uicontrol> option in the Administration
          Page</xref>).</note></p>
    </section>
    <section id="gitlab_integration">
      <title>GitLab Integration</title>
      <p id="p_rdr_dgk_54b">You can configure your Git <term>plugin</term> to allow <term>OAuth
          2.0</term> authentication for GitLab integrations to access files stored in a public or
        private repository. Your team will then have access to a <uicontrol>Connect with
          GitLab</uicontrol> button when logging in.</p>
      <note type="attention" id="note_sdr_dgk_54b"><ph keyref="webappProduct"/> only supports GitLab version 9.5.10 or
        later.</note>
      <p id="p_tdr_dgk_54b">You can configure your integration either by using a <i>GitLab</i> or <i>GitLab
          On-Premise</i> deployment.</p>
      <p id="p_udr_dgk_54b">
        <fig id="fig_vdr_dgk_54b">
          <title>GitLab Connect</title>
          <image href="../img/WA_gitlab_connect.png"/>
        </fig>
      </p>
      <p id="p_wdr_dgk_54b"><u><b>Configuring a Git Integration with <i>GitLab</i></b></u></p>
      <p id="p_xdr_dgk_54b">To configure your Git integration using <i>GitLab</i>, follow this procedure:<ol id="ol_ydr_dgk_54b">
        <li id="li_zdr_dgk_54b" irina="irina">Sign in or register at <xref href="https://gitlab.com/-/user_settings/applications"
              format="html" scope="external"/>.</li>
          <li id="li_a2r_dgk_54b" irina="irina">Go to <uicontrol>Applications</uicontrol> and authorize Web Author to obtain the
            configuration parameters.<ol id="ol_b2r_dgk_54b">
              <li id="li_c2r_dgk_54b" irina="irina">The <uicontrol>Redirect URI</uicontrol> should be set as:
                  <filepath>[OXYGEN_WEBAUTHOR_URL]/plugins-dispatcher/gitlab-oauth/callback</filepath>,
                where [OXYGEN_WEBAUTHOR_URL] is the location where Web Author is deployed (for
                example, <filepath>http://Your-Domain:8077/apps/webauthor</filepath>).</li>
              <li id="li_d2r_dgk_54b" irina="irina">For the <uicontrol>Scopes</uicontrol>, select:
                  <uicontrol>api</uicontrol>, and <uicontrol>read_user</uicontrol>.</li>
            </ol></li>
          <li id="li_e2r_dgk_54b" irina="irina">Set your credentials and redirect URI in your <term>plugin</term> configuration by
            doing the following:<ol id="ol_f2r_dgk_54b">
              <li id="li_g2r_dgk_54b" irina="irina">Go to the <xref href="../topics/webapp-admin-page.dita#webapp-admin-page"
                    ><uicontrol>Administration Page</uicontrol></xref>.</li>
              <li id="li_h2r_dgk_54b" irina="irina">
                <p id="p_i2r_dgk_54b">In the <uicontrol>Plugins</uicontrol> section, click on the <uicontrol><image
                      href="../img/ConfigureSearchScope16.png" id="image_afm_tc5_53b"
                    />Configure</uicontrol> icon for the Git <term>plugin</term> and select the
                    <uicontrol>GitLab</uicontrol> tab.</p>
                <p id="p_j2r_dgk_54b">
                  <fig id="fig_k2r_dgk_54b">
                    <title>GitLab Plugin Configuration Dialog Box</title>
                    <image href="../img/WA_Gitlab_config.png"/>
                  </fig>
                </p>
              </li>
              <li id="li_l2r_dgk_54b" irina="irina">Enter the <uicontrol>Application ID</uicontrol> and <uicontrol>Secret</uicontrol>
                credentials.</li>
              <li id="li_m2r_dgk_54b" irina="irina">The <uicontrol>Redirect URI</uicontrol> must be set to:
                  <filepath>[OXYGEN_WEBAUTHOR_URL]/plugins-dispatcher/gitlab-oauth/callback</filepath>,
                where [OXYGEN_WEBAUTHOR_URL] is the location where Web Author is deployed (for
                example, <filepath>http://Your-Domain:8077/apps/webauthor</filepath>).</li>
              <li id="li_n2r_dgk_54b" irina="irina">Click <uicontrol>Apply</uicontrol>.</li>
            </ol></li>
          <li id="li_o2r_dgk_54b" irina="irina"><xref href="webauthor-restart.dita">Restart <ph keyref="webappProduct"/></xref>.</li>
        </ol></p>
      <p id="p_p2r_dgk_54b"><b>Result:</b> You now have access to the <uicontrol>Connect with
          GitLab</uicontrol> button.</p>
      <p id="GitLab-on-premise-deployment"><u><b>Configuring a Git Integration with a <i>GitLab
              On-Premise</i> Deployment</b></u></p>
      <p id="p_q2r_dgk_54b">To configure your Git integration using a <i>GitLab On-Premise</i> deployment, follow this procedure:<ol id="ol_r2r_dgk_54b">
          <li id="li_s2r_dgk_54b" irina="irina">Sign in to GitLab
            (<filepath>[GitLabOnPremiseUrl]/profile/applications</filepath>).</li>
          <li id="li_t2r_dgk_54b" irina="irina">Go to <uicontrol>Applications</uicontrol> and authorize Web Author to obtain the
            configuration parameters.<ol id="ol_u2r_dgk_54b">
              <li id="li_v2r_dgk_54b" irina="irina">The <uicontrol>Redirect URI</uicontrol> should be set as:
                  <filepath>[OXYGEN_WEBAUTHOR_URL]/plugins-dispatcher/gitlab-e-oauth/callback</filepath>,
                where [OXYGEN_WEBAUTHOR_URL] is the location where Web Author is deployed (for
                example, <filepath>http://Your-Domain:8077/apps/webauthor</filepath>).</li>
              <li id="li_w2r_dgk_54b" irina="irina">For the <uicontrol>Scopes</uicontrol>, select:
                  <uicontrol>api</uicontrol>, and <uicontrol>read_user</uicontrol>.</li>
            </ol></li>
          <li id="li_x2r_dgk_54b" irina="irina">Set your credentials, API URI, and redirect URI in your <term>plugin</term>
            configuration by doing the following:<ol id="ol_y2r_dgk_54b">
              <li id="li_z2r_dgk_54b" irina="irina">Go to the <xref href="../topics/webapp-admin-page.dita#webapp-admin-page"
                    ><uicontrol>Administration Page</uicontrol></xref>.</li>
              <li id="li_afr_dgk_54b" irina="irina">
                <p id="p_bfr_dgk_54b">In the <uicontrol>Plugins</uicontrol> section, click on the <uicontrol><image
                      href="../img/ConfigureSearchScope16.png" id="image_awz_tc5_53b"
                    />Configure</uicontrol> icon for the Git <term>plugin</term> and select the
                    <uicontrol>GitLab on-premise</uicontrol> tab.</p>
                <p id="p_cfr_dgk_54b">
                  <fig id="fig_dfr_dgk_54b">
                    <title>GitLab On-Premise Plugin Configuration Dialog Box</title>
                    <image href="../img/WA_Gitlab_OP_config.png"/>
                  </fig>
                </p>
              </li>
              <li id="li_efr_dgk_54b" irina="irina">Enter the <uicontrol>Application ID</uicontrol> and <uicontrol>Secret</uicontrol>
                credentials.</li>
              <li id="li_ffr_dgk_54b" irina="irina">Set the <uicontrol>API URI</uicontrol> to match the location where your GitLab
                instance is deployed.</li>
              <li id="li_gfr_dgk_54b" irina="irina">The <uicontrol>Redirect URI</uicontrol> must be set to:
                  <filepath>[OXYGEN_WEBAUTHOR_URL]/plugins-dispatcher/gitlab-e-oauth/callback</filepath>,
                where [OXYGEN_WEBAUTHOR_URL] is the location where Web Author is deployed (for
                example, <filepath>http://Your-Domain:8077/apps/webauthor</filepath>).</li>
              <li id="li_hfr_dgk_54b" irina="irina">Click <uicontrol>Apply</uicontrol>.</li>
            </ol></li>
          <li id="li_ifr_dgk_54b" irina="irina"><xref href="webauthor-restart.dita">Restart <ph keyref="webappProduct"/></xref>.</li>
        </ol></p>
      <p id="p_jfr_dgk_54b"><b>Result:</b> You now have access to the <uicontrol>Connect with
          GitLab</uicontrol> button.<note type="important" id="note_kfr_dgk_54b"><ph
            keyref="webappProduct"/> uses the <xref href="https://docs.gitlab.com/ee/api/rest/"
            format="html" scope="external">GitLab web API</xref> to edit repositories and Git over
          HTTPS for actions that are not available using the web API. Therefore, your <i>GitLab
            On-Premise</i> deployment will not work with <ph keyref="webappProduct"/> if you disable
          Git over HTTPS in your deployment.</note><note id="note_lfr_dgk_54b">If your <i>GitLab
            On-Premise</i> deployment uses self-signed HTTPS certificates, <ph
            keyref="webappProduct"/> must be configured to automatically accept the security
          certificate (deselect the <xref
            href="webapp-admin-page.dita#webapp-admin-page/dlentry_mvq_dgk_54b"><uicontrol>Reject
              invalid security certificates</uicontrol> option in the Administration
          Page</xref>).</note></p>
    </section>
    <section id="section_znr_ggh_1jb">
      <title>GitLab On-Premise Known Issues</title>
      <p id="p_mfr_dgk_54b"><u><b>Reverse Proxy Server in Front of <i>GitLab On-Premise</i></b></u></p>
      <p id="p_nfr_dgk_54b">If you have a reverse proxy in front of your <i>GitLab On-Premise</i> instance, make sure
        that requests are forwarded to the GitLab instance exactly as they are received.</p>
      <p id="p_ofr_dgk_54b">A common problem occurs when using Apache as a reverse proxy in front of GitLab when it is
        configured to not allow encoded slashes in URLs. Apache decodes the encoded slashes and
        sends the malformed request to GitLab.</p>
      <p id="p_pfr_dgk_54b"><u><b>External URL Configured Incorrectly for <i>GitLab On-Premise</i></b></u></p>
      <p id="p_qfr_dgk_54b"><i>GitLab On-Premise</i> needs to know the URL that is used to reach it. Make sure this URL
        is the same as the URL written in the API URI field of the <xref
          href="#webapp-integrate-github-plugin/GitLab-on-premise-deployment" format="dita">GitLab
          Plugin Configuration dialog box</xref>.</p>
    </section>
    <section id="bitucket_integration">
      <title>Bitbucket Integration</title>
      <p id="p_rfr_dgk_54b">You can configure your Git <term>plugin</term> to allow <term>OAuth 2.0</term>
        authentication for Bitbucket integrations to access files stored in a public or private
        repository. You can configure your integration either by using a <i>Bitbucket</i> or
          <i>Bitbucket Server</i> deployment.</p>
      <p id="p_sfr_dgk_54b"><u><b>Configuring a Git Integration with <i>Bitbucket</i></b></u></p>
      <p id="p_tfr_dgk_54b">To configure your Git integration using <i>Bitbucket</i>, follow this procedure:<ol
          id="ol_hsh_k5c_qnb">
          <li id="li_ufr_dgk_54b" irina="irina">Log in to Bitbucket and go to the user settings page ( <xref
              href="https://bitbucket.org/account" format="html" scope="external"/>).</li>
          <li id="li_vfr_dgk_54b" irina="irina">Go to go to the <uicontrol>OAuth</uicontrol> page and click <uicontrol>Add
              consumer</uicontrol> to obtain the <uicontrol>Key</uicontrol> and
              <uicontrol>Secret</uicontrol> credentials.</li>
          <li id="li_wfr_dgk_54b" irina="irina">Set your credentials in your <term>plugin</term> configuration by doing the
              following:<ol id="ol_ish_k5c_qnb">
              <li id="li_xfr_dgk_54b" irina="irina">Go to the <xref href="../topics/webapp-admin-page.dita#webapp-admin-page"
                    ><uicontrol>Administration Page</uicontrol></xref>.</li>
              <li id="li_yfr_dgk_54b" irina="irina">
                <p id="p_zfr_dgk_54b">In the <uicontrol>Plugins</uicontrol> section, click on the <uicontrol><image
                      href="../img/ConfigureSearchScope16.png" id="image_ofz_5c5_53b"
                    />Configure</uicontrol> icon for the Git <term>plugin</term> and select the
                    <uicontrol>Bitbucket</uicontrol> tab.</p>
                <p id="p_agr_dgk_54b">
                  <fig id="fig_jsh_k5c_qnb">
                    <title>Bitbucket Plugin Configuration Dialog Box</title>
                    <image href="../img/WA_Bitbucket_config.png" id="image_ksh_k5c_qnb"/>
                  </fig>
                </p>
              </li>
              <li id="li_bgr_dgk_54b" irina="irina">Enter the <uicontrol>Key</uicontrol> and <uicontrol>Secret</uicontrol>
                credentials.</li>
              <li id="li_cgr_dgk_54b" irina="irina">Click <uicontrol>Apply</uicontrol>.</li>
            </ol></li>
          <li id="li_dgr_dgk_54b" irina="irina"><xref href="webauthor-restart.dita">Restart <ph keyref="webappProduct"/></xref>.</li>
        </ol></p>
      <p id="p_egr_dgk_54b"><b>Result:</b> You now have access to the <uicontrol>Connect with
          Bitbucket</uicontrol> button.</p>
      <p id="p_fgr_dgk_54b">
        <fig id="fig_apf_gqm_gnb">
          <title>Bitbucket Connect</title>
          <image href="../img/WA_bitbucket_connect.png" id="image_bpf_gqm_gnb"/>
        </fig>
      </p>
    </section>
    <section id="bitbucket_server_integration">
      <title>Bitbucket Server Integration</title>
      <p id="p_ggr_dgk_54b">To configure your Git integration using <i>Bitbucket Server</i>, follow this procedure:<ol
          id="ol_uf4_f4m_gnb">
          <li id="li_hgr_dgk_54b" irina="irina">Set your credentials in your <term>plugin</term> configuration by doing the
              following:<ol id="ol_vf4_f4m_gnb">
              <li id="li_igr_dgk_54b" irina="irina">Go to the <xref href="../topics/webapp-admin-page.dita#webapp-admin-page"
                    ><uicontrol>Administration Page</uicontrol></xref>.</li>
              <li id="li_jgr_dgk_54b" irina="irina">
                <p id="p_kgr_dgk_54b">In the <uicontrol>Plugins</uicontrol> section, click on the <uicontrol><image
                      href="../img/ConfigureSearchScope16.png" id="image_wf4_f4m_gnb"
                    />Configure</uicontrol> icon for the Git <term>plugin</term> and select the
                    <uicontrol>Bitbucket Server</uicontrol> tab.</p>
                <p id="p_lgr_dgk_54b">
                  <fig id="fig_rgk_hkm_gnb">
                    <title>Bitbucket Server Plugin Configuration Dialog Box</title>
                    <image href="../img/WA_Bitbucket_server_config.png" id="image_sgk_hkm_gnb"/>
                  </fig>
                </p>
              </li>
              <li id="li_mgr_dgk_54b" irina="irina">Follow the on-screen instructions in the Bitbucket Server plugin configuration
                dialog box.</li>
              <li id="li_ngr_dgk_54b" irina="irina">Click <uicontrol>Apply</uicontrol>.</li>
            </ol></li>
          <li id="li_ogr_dgk_54b" irina="irina"><xref href="webauthor-restart.dita">Restart <ph keyref="webappProduct"/></xref>.</li>
        </ol></p>
      <p id="p_pgr_dgk_54b"><b>Result:</b> You now have access to the <uicontrol>Connect with
          Bitbucket Server</uicontrol> button.</p>
      <p id="p_qgr_dgk_54b">
        <fig id="fig_bgh_hqm_gnb">
          <title>Bitbucket Server Connect</title>
          <image href="../img/WA_bitbucket_server_connect.png" id="image_cgh_hqm_gnb"/>
        </fig>
      </p>
    </section>
    <section id="section_vfn_tjn_5jb">
      <title>General Git Support</title>
      <p id="p_rgr_dgk_54b">While <ph keyref="webappProduct"/> has more advanced support for GitHub, Gitlab, and
        Bitbucket, you can connect to any other Git repository. This support is enabled by default.
        Your team can connect to your Git repository by clicking the generic <uicontrol><image
            href="../img/git24.png" id="image_jlg_jfz_tkb"/>Git</uicontrol> icon in the Web Author
          <uicontrol>Dashboard</uicontrol>.</p>
      <p id="p_sgr_dgk_54b">Administrators do have some options that are available for generic Git integrations and
        they can be found in the <uicontrol>Git</uicontrol> tab of the plugin configuration.</p>
      <ol id="ol_zht_bkn_5jb">
        <li id="li_tgr_dgk_54b" irina="irina">Go to the <xref href="../topics/webapp-admin-page.dita#webapp-admin-page"
              ><uicontrol>Administration Page</uicontrol></xref>.</li>
        <li id="li_ugr_dgk_54b" irina="irina">
          <p id="p_vgr_dgk_54b">In the <uicontrol>Plugins</uicontrol> section, click on the <uicontrol><image
                href="../img/ConfigureSearchScope16.png" id="image_lhz_xkn_5jb"
              />Configure</uicontrol> icon for the Git <term>plugin</term> and select the
              <uicontrol>Git</uicontrol> tab.</p>
          <p id="p_wgr_dgk_54b">
            <fig id="fig_mhz_xkn_5jb">
              <title>General Git Options</title>
              <image href="../img/WA_Git_config.png" id="image_nhz_xkn_5jb"/>
            </fig>
          </p>
          <p id="p_xgr_dgk_54b">The <uicontrol>Git</uicontrol> tab includes the following options:</p>
          <p id="p_ygr_dgk_54b">
            <dl id="dl_zgr_dgk_54b">
              <dlentry id="dlentry_ahr_dgk_54b">
                <dt>Enable Git submodules support</dt>
                <dd>When this option is enabled <ph keyref="webappProduct"/> will be able to browse
                  or edit files from Git submodules.</dd>
              </dlentry>
              <dlentry id="dlentry_bhr_dgk_54b">
                <dt>Allow users to commit on a new branch</dt>
                <dd>When this option is selected, users will be able to create new Git branches and
                  commit on them.</dd>
              </dlentry>
              <dlentry id="allow-users-signed-off">
                <dt>Allow users to add a Signed-off-by trailer to commit messages</dt>
                <dd>When this option is selected, users will have the option to specify a person who
                    <i>signed off</i> on the commit and it will be added to the commit message.</dd>
              </dlentry>
              <dlentry id="dlentry_chr_dgk_54b">
                <dt>Disable Generic Git</dt>
                <dd>When this option is selected, the generic Git button will not be present on the
                    <ph keyref="webappProduct"/> Dashboard.</dd>
              </dlentry>
              <dlentry id="dlentry_dhr_dgk_54b">
                <dt>Default generic Git repositories</dt>
                <dd>To enable users to connect to specific generic Git repositories, you can provide
                  a list of default Git repositories (one URI per line) that will be displayed on
                  the <ph keyref="webappProduct"/> Dashboard.</dd>
              </dlentry>
            </dl>
          </p>
          <p id="p_ehr_dgk_54b"><b><u>Custom Options for the Git Plugin</u></b></p>
          <p id="p_fhr_dgk_54b">It is possible to configure a service account for the Git connector so that users do
            not have to connect to edit documents. The following options can be set in the <xref
              href="customizing-options.dita#customizing-options"><ph keyref="webappProduct"/>
              <filepath>options.xml</filepath> file</xref>.<ul id="ul_dd1_hgz_tkb">
              <li id="li_ghr_dgk_54b" irina="irina"
                ><uicontrol>PLUGIN_CUSTOM_OPTIONS.git.enforced_user</uicontrol></li>
              <li id="li_hhr_dgk_54b" irina="irina"
                ><uicontrol>PLUGIN_CUSTOM_OPTIONS.git.enforced_pass</uicontrol></li>
              <li id="li_ihr_dgk_54b" irina="irina"
                ><uicontrol>PLUGIN_CUSTOM_OPTIONS.git.enforced_mail</uicontrol></li>
            </ul></p>
          <p id="p_jhr_dgk_54b"><b>Example:</b> The <filepath>options.xml</filepath> file would look like
            this:<codeblock outputclass="language-xml" id="codeblock_khr_dgk_54b">&lt;entry>
  &lt;String>PLUGIN_CUSTOM_OPTIONS.git.enforced_user&lt;/String>
  &lt;String>example_username&lt;/String>
&lt;/entry>
&lt;entry>
  &lt;String>PLUGIN_CUSTOM_OPTIONS.git.enforced_pass&lt;/String>
  &lt;String>example_password&lt;/String>
&lt;/entry>
&lt;entry>
  &lt;String>PLUGIN_CUSTOM_OPTIONS.git.enforced_mail&lt;/String>
  &lt;String>mail@example.com&lt;/String>
&lt;/entry></codeblock></p>
        </li>
      </ol>
    </section>
  </body>
  <related-links product="webauthor">
      <link href="using-webapp-github.dita"/>
  </related-links>
</topic>
