<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="debug-stack-view">
  <title>Stack View</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Debugging XSLT<indexterm>Information views<indexterm>Stack
            view</indexterm></indexterm></indexterm>
        <indexterm>XSLT Debugger perspective<indexterm>Information views<indexterm>Stack
              view</indexterm></indexterm></indexterm>
        <indexterm>Debugging XQuery<indexterm>Information views<indexterm>Stack
            view</indexterm></indexterm></indexterm>
        <indexterm>XQuery Debugger perspective<indexterm>Information views<indexterm>Stack
              view</indexterm></indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p id="p_whz_cgk_54b">The <uicontrol>Stack</uicontrol> view shows the current execution stack of both source and
      XSLT/XQuery nodes. <ph conkeyref="reusables-user-guide/reopen-view"/></p>
    <p id="p_xhz_cgk_54b">During the transformation, two stacks are managed. One for source nodes being processed and
      the other for XSLT/XQuery nodes being processed. <ph keyref="product"/> shows both node types
      in one common stack. The source (XML) nodes are preceded by a red color icon while XSLT/XQuery
      nodes are preceded by a green color icon. The advantage of this approach is that you can
      always see the source scope on which an XSLT/XQuery instruction is executed (the last red
      color node on the stack). The stack is oriented upside down.</p>
    <p id="p_yhz_cgk_54b">
      <fig id="the-stack-view-oxygen" product="editor developer">
        <title>Stack View</title>
        <image href="../img/sa_stack_view.png"/>
      </fig>
    </p>
    <p id="p_zhz_cgk_54b">
      <fig id="the-stack-view-oxygenEclipse" product="editorEclipse developerEclipse">
        <title>Stack View</title>
        <image href="../img/ec_stack_view.png"/>
      </fig>
    </p>
    <p id="p_a3z_cgk_54b">The contextual menu contains one action: <uicontrol>Go to</uicontrol>, which moves the
      selection in the editor panel to the line containing the XSLT element that is displayed on the
      selected line from the view.</p>
    <table frame="all" rowsep="1" colsep="1" id="table_b3z_cgk_54b">
      <title>Stack Columns</title>
      <tgroup cols="2">
        <colspec colname="c1" colnum="1" colwidth="1*"/>
        <colspec colname="c2" colnum="2" colwidth="3*"/>
        <thead>
          <row>
            <entry>Column</entry>
            <entry>Description</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>#</entry>
            <entry>Order number, represents the depth of the node (0 is the stack base).</entry>
          </row>
          <row>
            <entry>XML/XSLT/XQuery Node</entry>
            <entry>Node from source or stylesheet document currently being processed. One particular
              stack node is the document root, noted as <uicontrol>#document</uicontrol>.</entry>
          </row>
          <row>
            <entry>Attributes</entry>
            <entry>Attributes of the node (a list of <i>id="value"</i> pairs).</entry>
          </row>
          <row>
            <entry>Resource</entry>
            <entry>Resource file where the node is located. <ph product="editor developer">The
                entire path is available as tooltip.</ph></entry>
          </row>
        </tbody>
      </tgroup>
    </table>
    <note type="important" id="note_c3z_cgk_54b">Remarks:<ul id="ul_d3z_cgk_54b">
        <li id="li_e3z_cgk_54b" irina="irina">Clicking a record from the stack highlights that node's location inside resource.</li>
        <li id="li_f3z_cgk_54b" irina="irina">Using Saxon, the stylesheet elements are qualified with XSL proxy, while using Xalan you
          only see their names. (example: <codeph>xsl:template</codeph> using Saxon and
            <codeph>template</codeph> using Xalan).</li>
        <li id="li_g3z_cgk_54b" irina="irina">Only the Saxon processor shows element attributes.</li>
        <li id="li_h3z_cgk_54b" irina="irina">The Xalan processor shows also the built-in rules.</li>
      </ul></note>
  </body>
</topic>