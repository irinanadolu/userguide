<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="webauthor-integrate-with-another-app">
  <title>Integrating Web Author in a CMS or Another Application</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Integrating Web Author in a CMS</indexterm>
        <indexterm>Integrating Web Author in a web application</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p id="p_gxr_dgk_54b"><ph keyref="webappProduct"/> can be embedded in a CMS to offer editing functionality for
      documents stored in the CMS. It can also be embedded in other web applications.</p>
    <p id="p_hxr_dgk_54b">Web Author has two parts that need to be considered when integrating:<ol id="ol_ixr_dgk_54b">
        <li id="li_jxr_dgk_54b" irina="irina">A front-end HTML page that should be embedded using an <codeph>iframe</codeph> (load the
          main page (<filepath>app/oxygen.html</filepath>) in an <codeph>iframe</codeph>). Some of
          its options can be controlled using <xref
            href="#webauthor-integrate-with-another-app/passing_parameters_to_the_editor"
            format="dita">URL parameters</xref> and others by using the <xref
            href="customizing_js.dita#customizing_js"><ph keyref="webappProduct"/> JavaScript
            API</xref> from a plugin.</li>
        <li id="li_kxr_dgk_54b" irina="irina">The Java-based back-end that can also be <xref
            href="customizing_plugins.dita#customizing_plugins">customized using plugins</xref>.
            <note id="note_lxr_dgk_54b">It is recommended to deploy the back-end separately from your application. More
            details here: <xref href="how_to_share_tomcat.dita#how_to_share_tomcat"/>.</note></li>
      </ol></p>
    <section id="section_dvp_vgb_n5">
      <title>Security Restrictions</title>
      <p id="p_mxr_dgk_54b"><ph keyref="webappProduct"/> uses cookies to enforce its licensing and to maintain the
        editing state of the open documents. Some browsers block third-party cookies for security
        reasons. To avoid having the cookies blocked, <ph keyref="webappProduct"/> should be served
        from the same origin as the CMS host page.</p>
    </section>
    <section id="passing_parameters_to_the_editor">
      <title>Passing URL Parameters to the Editor</title>
      <p id="p_nxr_dgk_54b">To control the editor, you can use <xref href="oxy-url.dita">URL
          parameters</xref>. </p>
      <p conkeyref="reusables-webauthor-customization/oxy-url-p-2" id="p_oxr_dgk_54b"/>
      <p id="p_pxr_dgk_54b">To pass custom parameters, you can implement a <xref
          href="customizing_plugins.dita#customizing_plugins"><term>plugin</term> for <ph
            keyref="webappProduct"/></xref> that contains JavaScript code to interpret those
        parameters and configure the editor (<xref keyref="jscript_api_workspace_LoadingOptions"
            ><i>sync.api.Workspace.LoadingOptions</i></xref>).</p>
    </section>
    <section id="section_mbf_chb_n5">
      <title>Communicating with the Editor</title>
      <p id="p_qxr_dgk_54b">To communicate with the editor, you can send messages between the host CMS page and the <ph
          keyref="webappProduct"/> page. </p>
      <p id="p_rxr_dgk_54b">Browsers offer the <codeph>window.postMessage</codeph> JavaScript API that allows messages
        to be sent between pages. To receive the message, create a <xref
          href="customizing_plugins.dita#customizing_plugins"><term>plugin</term> for <ph
            keyref="webappProduct"/></xref> that contains JavaScript code that listens for the
        messages sent by the CMS host page and uses the <xref
          href="customizing_js.dita#customizing_js"><ph keyref="webappProduct"/> JavaScript
          API</xref> to implement the required functionality.</p>
    </section>
    <section id="section_mdx_vjz_pqb">
      <title>Redirecting Problem Reports</title>
      <p id="p_ndx_vjz_pqb">Users can report problems they experience using <ph
          keyref="webappProduct"/> by using the <uicontrol>Report problem</uicontrol> action in the
            <uicontrol><image href="../img/WebappMore18.png"/>More drop-down menu</uicontrol>
        located in the top toolbar. By default, the reports are sent to an HTTP endpoint on
          <filepath>http://oxygenxml.com</filepath>. When <ph keyref="webappProduct"/> is embedded
        in another application (such as a CMS), the reports should be redirected to an HTTP endpoint
        managed by the CMS.</p>
      <p id="p_yts_4kz_pqb">To override the default and redirect the problem reports, you can <xref
          href="webauthor-set-system-property.dita">set the value of the
            <codeph>com.oxygenxml.report.problems.url</codeph> system property</xref> on the Web
        Author server to the URL where the report should be sent.</p>
    </section>
    <section id="section_wnm_xhb_n5">
      <title>Other Notes</title>
      <ul id="ul_uxv_yhb_n5">
        <li id="li_sxr_dgk_54b" irina="irina">Some XML vocabularies (for example, DITA) support cross-document links. By default,
          clicking on a cross-document link will open that document in the <ph
            keyref="webappProduct"/> in another browser tab. If the editor is embedded, you may want
          to change this behavior using the <codeph>sync.api.Editor.EventTypes.LINK_OPENED</codeph>
          event that is triggered on the <xref keyref="jscript_api_Editor"
            ><i>sync.api.Editor</i></xref> instance.</li>
        <li id="li_txr_dgk_54b" irina="irina">When embedded in a larger page, sometimes it makes sense to remove the gray app-bar that
          contains the application logo, file name, and user name. To do this, you can use the <xref
            keyref="jscript_api_workspace"><codeph>workspace.getViewManager().hideAppBar();</codeph>
            API</xref>.</li>
        <li id="li_uxr_dgk_54b" irina="irina">It is possible to customize the <ph keyref="webappProduct"/> user interface through the
          use of JavaScript APIs. For more information, see <xref
            href="customizing_ui.dita#customizing_ui"/>.</li>
        <li id="li_p4w_pjz_pqb" irina="irina">It is possible to experience problems if the <i>iframe</i> is hidden
          while loading using <codeph>display: none</codeph>. You can use <codeph>visibility:
            hidden</codeph> for the same purpose.</li>
      </ul>
    </section>
  </body>
  <related-links>
      <link href="customizing_ui.dita#customizing_ui"/>
    <link href="oxy-url.dita"/>
  </related-links>
</topic>
