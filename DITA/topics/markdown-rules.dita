<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="markdown-rules">
  <title>Markdown Editor Syntax Rules and Specifications</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Markdown documents<indexterm>Rules and specifications</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p id="p_nj3_cgk_54b">The Markdown editor in <ph keyref="product"/> uses rules that were integrated from the most
      common set of <xref href="http://daringfireball.net/projects/markdown/syntax" format="html"
        scope="external">default Markdown syntax rules</xref> along with many of the <xref
        href="https://help.github.com/categories/writing-on-github/" format="html" scope="external"
        >GitHub Flavored Markdown rules</xref>.</p>
    <p id="p_oj3_cgk_54b">This topic lists the <ph keyref="product"/> implementation of the most commonly used syntax
      rules.</p>
    <section id="headers">
      <title>Headers</title>
      <p id="p_pj3_cgk_54b">The Markdown editor supports two styles of headers, <term>Setext</term>
        and <term>Atx</term>.</p>
      <p id="p_qj3_cgk_54b">
        <ul id="ul_rj3_cgk_54b">
          <li id="setext-header" irina="irina">
            <p id="p_sj3_cgk_54b"><u><uicontrol>Setext Style</uicontrol></u></p>
            <p id="p_tj3_cgk_54b">Setext-style headers are underlined using equal signs (for first-level headers) and
              dashes (for second-level headers). Any number of equal signs or dashes will result in
              the same output.</p>
            <p id="p_uj3_cgk_54b"><b><u>Example: <term>Setext</term> Style
              Headers</u></b><codeblock outputclass="language-text" id="codeblock_vj3_cgk_54b">First-Level Header (H1)
========

Second-Level Header (H2)
------------</codeblock></p>
          </li>
          <li id="atx-header" irina="irina">
            <p id="p_wj3_cgk_54b"><u><uicontrol>Atx Style</uicontrol></u></p>
            <p id="p_xj3_cgk_54b">Atx-style headers use 1-6 hash characters at the start of the line, corresponding to
              header levels 1-6. Optionally, you may close atx-style headers. This is purely
              cosmetic and the closing hashes do not need to match the number of hashes used to open
              the header. It is the number of opening hashes that determines the header level.</p>
            <p id="p_yj3_cgk_54b"><b><u>Example: <term>Atx</term> Style
              Headers</u></b><codeblock outputclass="language-ini" id="codeblock_zj3_cgk_54b"># H1 text #
## H2 text 
### H3 text ###### 
#### H4 text
##### H5 text ###
###### H6 text</codeblock></p>
          </li>
        </ul>
      </p>
    </section>
    <section id="horizontal_rules">
      <title>Horizontal Rules (for HTML output only)</title>
      <p id="p_ak3_cgk_54b">You can produce a horizontal rule tag (<xmlelement>hr</xmlelement>) by placing three or more
        hyphens, asterisks, or underscores on a line by themselves (they also need to be preceded
        and followed by a blank line). Optionally, they can be separated by spaces.</p>
      <p id="p_bk3_cgk_54b"><b><u>Example: Horizontal
        Rules</u></b><codeblock outputclass="language-ini" id="codeblock_ck3_cgk_54b">
* * *

*****

---------------------------------------

_ _ _ _
</codeblock></p>
    </section>
    <section id="paragraphs_and_line_breaks">
      <title>Paragraphs and Line Breaks</title>
      <p id="p_dk3_cgk_54b">A paragraph is simply one or more consecutive lines of text, separated by one or more blank
        lines. The text at the beginning of a paragraph should not be indented with spaces or tabs.
        To create a new paragraph, simply insert a blank line in between them.<note type="important" id="note_ek3_cgk_54b"
          >When converting to HTML, if you break a paragraph on multiple lines (without a blank line
          in between them), it will create a break tag (<xmlelement>br</xmlelement>. When converting
          to DITA, the text is kept in a single paragraph in this case and a blank line is required
          to break a paragraph. This behavior differs slightly from the default Markdown
          rules.</note></p>
      <p id="p_fk3_cgk_54b"><b><u>Example:
        Paragraphs</u></b><codeblock outputclass="language-ini" id="codeblock_gk3_cgk_54b">This is a paragraph that contains
two lines of text. (In HTML, a break tag is created in between the two lines)

This is a new paragraph.</codeblock></p>
    </section>
    <section id="styling_text">
      <title>Styling Text</title>
      <p id="p_hk3_cgk_54b">The Markdown editor supports some syntax rules for styling text (such as
        bold, italic, or strikethrough).<ul id="ul_ik3_cgk_54b">
          <li id="italic" irina="irina">
            <p id="p_jk3_cgk_54b"><u><b>Italic (Emphasis)</b></u></p>
            <p id="p_kk3_cgk_54b">Text wrapped with one asterisk or underscore produces an italic
              (emphasis)
              tag.<codeblock outputclass="language-ini" id="codeblock_lk3_cgk_54b">*italic*
_italic_</codeblock></p>
          </li>
          <li id="bold" irina="irina">
            <p id="p_mk3_cgk_54b"><u><b>Bold (Strong)</b></u></p>
            <p id="p_nk3_cgk_54b">Text wrapped with two asterisks or underscores produces a bold
              (strong)
              tag.<codeblock outputclass="language-ini" id="codeblock_ok3_cgk_54b">**bold**
__bold__</codeblock></p>
          </li>
          <li id="strikethrough" irina="irina">
            <p id="p_pk3_cgk_54b"><u><b>Strikethrough</b></u></p>
            <p id="p_qk3_cgk_54b">In HTML only, text wrapped with two tildes
                (<userinput>~~</userinput>) produces a strikethrough
              tag.<codeblock outputclass="language-ini" id="codeblock_rk3_cgk_54b">~~strikethrough~~</codeblock></p>
          </li>
          <li id="li_bhp_wdh_rsb" irina="irina">
            <p id="p_chp_wdh_rsb"><u><b>Underline</b></u></p>
            <p id="p_dhp_wdh_rsb">Text wrapped with two plus signs (<userinput>++</userinput>)
              produces an underline
              tag.<codeblock outputclass="language-ini" xml:space="preserve">++underline++</codeblock></p>
          </li>
        </ul><note type="tip" id="note_sk3_cgk_54b">You can also combine these styling rules. For
          example, <userinput>**BoldText _ItalicText_ BoldText**</userinput> would produce
          italicized text within bold text. Also, if you surround an asterisk or underscore with
          spaces, it will be treated as a literal asterisk or underscore. To produce a literal
          asterisk or underscore at a position where it would otherwise be used as a styling
          delimiter, you can escape it with a backslash (for example, <userinput>\*literal
            asterisks\*</userinput>.</note></p>
    </section>
    <section id="links">
      <title>Links</title>
      <p id="p_tk3_cgk_54b">The Markdown editor supports two types of links, <term>inline</term> and
          <term>reference</term>. In both cases, it begins with link text that is delimited by
        [square brackets].</p>
      <p id="p_uk3_cgk_54b">
        <ul id="ul_vk3_cgk_54b">
          <li id="li_wk3_cgk_54b" irina="irina">
            <p id="p_xk3_cgk_54b"><u><b>Inline Links</b></u></p>
            <p id="p_yk3_cgk_54b">To create an inline link, use a set of regular parentheses immediately after the
              closing square bracket for the link text. Inside the parentheses, put the URL where
              you want the link to point, and optionally a title surrounded in quotes. Also, if you
              reference a local resource on the same server, you can use relative paths.</p>
            <p id="p_zk3_cgk_54b"><b><u>Examples: Inline Link</u></b></p>
            <p id="p_al3_cgk_54b">With a
              title:<codeblock outputclass="language-ini" id="codeblock_bl3_cgk_54b">Text with [example link text](http://www.example.com/path "Title") inline link and title.</codeblock></p>
            <p id="p_cl3_cgk_54b">Without a
              title:<codeblock outputclass="language-ini" id="codeblock_dl3_cgk_54b">Text with [example link text](http://www.example.com/path) inline link without a title.</codeblock></p>
            <p id="p_el3_cgk_54b">Relative
              path:<codeblock outputclass="language-ini" id="codeblock_fl3_cgk_54b">Text with [example link text](/relative_path/) inline link with relative path.</codeblock></p>
          </li>
          <li id="li_gl3_cgk_54b" irina="irina">
            <p id="p_hl3_cgk_54b"><u><b>Reference Links</b></u></p>
            <p id="p_il3_cgk_54b">Reference-type links use a second set of square brackets that include a label (link
              identifier) to reference the target for the link (link identifier may consist of
              letters, numbers, spaces, and punctuation and it is not case-sensitive). You can
              optionally use a space to separate the sets of brackets. The labels (link identifiers)
              are only used for creating the links and do not appear in the
              output.<codeblock outputclass="language-ini" id="codeblock_jl3_cgk_54b">Text with [link text1][id 1] a reference-type link and [link text2][id_2] another one.</codeblock></p>
            <p id="p_kl3_cgk_54b">Then, somewhere in the document, you need to define your link label on a line by
              itself. The link identifier must be within square brackets followed by a colon, then
              after one or more spaces the URL for the link. Optionally this can be followed by a
              title enclosed in single quotes, double quotes, or parentheses. Also, the link may
              optionally be enclosed in angle brackets (<userinput>&lt;
              ></userinput>).<codeblock outputclass="language-ini" id="codeblock_ll3_cgk_54b">[id 1]: http://example1.com/ "Optional Title"
[id_2]: &lt;http://example2.com/> "Optional Title2"</codeblock></p>
            <p id="p_ml3_cgk_54b">Other notes about Reference Links:<ul id="ul_nl3_cgk_54b">
                <li id="li_ol3_cgk_54b" irina="irina">You can put the title on a second line and use extra spaces or tabs for padding.
                  This is useful for aesthetics when the URL is
                  long.<codeblock outputclass="language-ini" id="codeblock_pl3_cgk_54b">[id]: http://example.com/long/path/to/resource/here
    "Optional Title Here"</codeblock></li>
                <li id="li_ql3_cgk_54b" irina="irina">
                  <p id="p_rl3_cgk_54b">The label (link identifier) can be missing, in which case the link text (in
                    square brackets) is used as the
                    name.<codeblock outputclass="language-ini" id="codeblock_sl3_cgk_54b">[My Link][]</codeblock></p>
                  <p id="p_tl3_cgk_54b">and then defined
                    as:<codeblock outputclass="language-ini" id="codeblock_ul3_cgk_54b">[My Link]: http://example.com/</codeblock></p>
                </li>
              </ul></p>
          </li>
        </ul>
      </p>
    </section>
    <section id="automatic_links">
      <title>Automatic Links</title>
      <p id="p_vl3_cgk_54b">The Markdown editor supports a shortcut style for creating automatic
        links for URLs and email addresses. You simply surround the URL or email address with angle
          brackets.<note id="note_wl3_cgk_54b">These automatic links only work properly in HTML
          conversions. The <term>Preview</term> pane may display them properly in the DITA tab, but
          the DITA output will not properly recognize the format.</note></p>
      <p id="p_xl3_cgk_54b">
        <ul id="ul_yl3_cgk_54b">
          <li id="li_zl3_cgk_54b" irina="irina">
            <p id="p_am3_cgk_54b"><u><b>URLs</b></u></p>
            <p id="p_bm3_cgk_54b">By surrounding a URL with angle brackets, you can show the actual text of the URL
              while also making it clickable in the
              output.<codeblock outputclass="language-ini" id="codeblock_cm3_cgk_54b">&lt;http://example.com/></codeblock></p>
            <p id="p_dm3_cgk_54b">For example, in HTML it is converted
              to:<codeblock outputclass="language-ini" id="codeblock_em3_cgk_54b">&lt;a href="http://example.com/">http://example.com/&lt;/a></codeblock></p>
          </li>
          <li id="li_fm3_cgk_54b" irina="irina">
            <p id="p_gm3_cgk_54b"><u><b>Email Addresses</b></u></p>
            <p id="p_hm3_cgk_54b">Automatic links for email addresses work similarly, except that
              Markdown will also perform a bit of randomized decimal and hex entity-encoding to help
              obscure your address from address-harvesting
              <term>spambots</term>.<codeblock outputclass="language-ini" id="codeblock_im3_cgk_54b">&lt;address@example.com></codeblock></p>
            <p id="p_jm3_cgk_54b">In HTML, it is converted to something
              like:<codeblock outputclass="language-ini" id="codeblock_km3_cgk_54b">&lt;a href="&amp;#x6D;&amp;#x61;i&amp;#x6C;&amp;#x74;&amp;#x6F;:&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;
&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;
&amp;#109;">&amp;#x61;&amp;#x64;&amp;#x64;&amp;#x72;&amp;#x65;&amp;#115;&amp;#115;&amp;#64;&amp;#101;&amp;#120;&amp;#x61;
&amp;#109;&amp;#x70;&amp;#x6C;e&amp;#x2E;&amp;#99;&amp;#111;&amp;#109;&lt;/a></codeblock></p>
          </li>
        </ul>
      </p>
    </section>
    <section id="images">
      <title>Images</title>
      <p id="p_lm3_cgk_54b">The Markdown editor uses an image syntax that is intended to resemble
        the syntax for two types of links (<term>inline</term> and <term>reference</term>). In both
        cases, the syntax for images begins with an exclamation mark, followed by
          <codeph>Alt</codeph> attribute text surrounded by square brackets, and then followed by a
        set of parentheses that contain the URL or path to the image.</p>
      <p id="p_mm3_cgk_54b">
        <ul id="ul_nm3_cgk_54b">
          <li id="li_om3_cgk_54b" irina="irina">
            <p id="p_pm3_cgk_54b"><u><b>Inline Images</b></u></p>
            <p id="p_qm3_cgk_54b">For inline images, use a set of regular parentheses immediately after the closing
              square bracket for the <codeph>Alt</codeph> attribute text. Inside the parentheses,
              put the URL or path of the image, and optionally a title surrounded in quotes.</p>
            <p id="p_rm3_cgk_54b"><b><u>Examples: Inline Images</u></b></p>
            <p id="p_sm3_cgk_54b">With a
              title:<codeblock outputclass="language-ini" id="codeblock_tm3_cgk_54b">Text with ![Alt text](/path/to/img.jpg "Optional title") inline image and a title.</codeblock></p>
            <p id="p_um3_cgk_54b">Without a
              title:<codeblock outputclass="language-ini" id="codeblock_vm3_cgk_54b">Text with ![Alt text](/path/to/img.jpg) inline link without a title.</codeblock></p>
          </li>
          <li id="li_wm3_cgk_54b" irina="irina">
            <p id="p_xm3_cgk_54b"><u><b>Reference Images</b></u></p>
            <p id="p_ym3_cgk_54b">For reference-type images, use a second set of square brackets that include a label
              (image identifier) to identify the image (it may consist of letters, numbers, spaces,
              and punctuation and it is not case-sensitive). You can optionally use a space to
              separate the sets of brackets. The labels (image identifiers) do not appear in the
              output.<codeblock outputclass="language-ini" id="codeblock_zm3_cgk_54b">Text with ![Alt text1][id] a reference-type image.</codeblock></p>
            <p id="p_an3_cgk_54b">Then, somewhere in the document, you need to define your image label on a line by
              itself. The image identifier must be within square brackets followed by a colon, then
              after one or more spaces the URL or path of the image. Optionally this can be followed
              by a title enclosed in single quotes, double quotes, or
              parentheses.<codeblock outputclass="language-ini" id="codeblock_bn3_cgk_54b">[id]: url/to/image "Optional Title"</codeblock></p>
          </li>
        </ul>
      </p>
    </section>
    <section id="blockquotes">
      <title>Blockquotes</title>
      <p id="p_cn3_cgk_54b">The Markdown editor uses email-style greater than characters
          (<userinput>></userinput>) for <term>blockquotes</term>. You only need to put the
          <userinput>></userinput> before the first line of a hard-wrapped paragraph, but it looks
        better (and is clearer) if you put a <userinput>></userinput> before every line.</p>
      <p id="p_dn3_cgk_54b">
        <ul id="ul_en3_cgk_54b">
          <li id="li_fn3_cgk_54b" irina="irina"><b><u>Example:
            Blockquotes</u></b><codeblock outputclass="language-ini" id="codeblock_gn3_cgk_54b">> This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet,
> consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.
> Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.
> 
> Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse
> id sem consectetuer libero luctus adipiscing.</codeblock></li>
          <li id="li_hn3_cgk_54b" irina="irina">
            <p id="p_in3_cgk_54b"><b><u>Example: Nested Blockquotes</u></b></p>
            <p id="p_jn3_cgk_54b"><term>Blockquotes</term> can be nested by adding additional levels
              of <userinput>></userinput>
              characters.<codeblock outputclass="language-ini" id="codeblock_kn3_cgk_54b">> This is the first level of quoting.
>
> > This is nested blockquote.
>
> Back to the first level.</codeblock></p>
          </li>
          <li id="li_ln3_cgk_54b" irina="irina">
            <p id="p_mn3_cgk_54b"><b><u>Example: Blockquotes with Other Markdown Elements</u></b></p>
            <p id="p_nn3_cgk_54b"><term>Blockquotes</term> can also contain other Markdown elements
              (such as headers, lists, and code
              blocks).<codeblock outputclass="language-ini" id="codeblock_on3_cgk_54b">> ## This is a header.
> 
> 1.   This is the first list item.
> 2.   This is the second list item.
> 
> Here's some example code:
> 
>     return shell_exec("echo $input | $markdown_script")</codeblock></p>
          </li>
        </ul>
      </p>
    </section>
    <section id="quoting_code_inline_and_code_blocks">
      <title>Quoting Code (Inline and Code Blocks)</title>
      <p id="p_pn3_cgk_54b">The Markdown editor supports quoting code or commands inline within a sentence or in
        distinct blocks.</p>
      <p id="p_qn3_cgk_54b">
        <ul id="ul_rn3_cgk_54b">
          <li id="li_sn3_cgk_54b" irina="irina">
            <p id="p_tn3_cgk_54b"><u><b>Inline</b></u></p>
            <p id="p_un3_cgk_54b">You can quote or emphasize code within a sentence (inline) with single backticks
                (<userinput>`</userinput>). The text within the backticks will not be formatted.</p>
            <p id="p_vn3_cgk_54b"><b><u>Example: Inline Code
              Emphasis</u></b><codeblock outputclass="language-ini" id="codeblock_wn3_cgk_54b">This is a normal sentence with a `code` in the middle. </codeblock></p>
          </li>
          <li id="code-blocks" irina="irina">
            <p id="p_xn3_cgk_54b"><u><b>Code Blocks</b></u></p>
            <p id="p_yn3_cgk_54b">You can format code or text into its own distinct block by inserting a blank line
              before and after the content and using at least 4 spaces (or 1 tab), or by using
              opening and closing triple backticks (<userinput>```</userinput>) on separate
              lines.</p>
            <p id="p_zn3_cgk_54b"><b><u>Example: Code
              Block</u></b><codeblock outputclass="language-ini" id="codeblock_a43_cgk_54b">This is a normal paragraph:

    This is a code block

This is a normal paragraph:

```
This is a code block
```</codeblock></p>
            <p id="p_b43_cgk_54b">One level of indentation is removed from each line of a codeblock and it continues
              until it reaches a line that is not indented (or until the closing backticks).</p>
            <p id="p_c43_cgk_54b"><b><u>Example: Code Block with
              Indentation</u></b><codeblock outputclass="language-ini" id="codeblock_d43_cgk_54b">    tell application "something"
        beep
    end tell</codeblock></p>
            <p id="p_e43_cgk_54b">For example, in HTML the result would look like
              this:<codeblock outputclass="language-ini" id="codeblock_f43_cgk_54b">&lt;pre>&lt;code>tell application "Foo"
    beep
end tell
&lt;/code>&lt;/pre></codeblock></p>
            <p id="p_g43_cgk_54b">You can also add an optional language identifier to enable syntax
              highlighting in your code blocks. The <ph keyref="product"/> Markdown editor syntax
              highlight supports the following languages: <term>Java</term>,
              <term>JavaScript</term>, <term>CSS</term>, and <term>Python</term>.<ph
                product="author developer editor authorEclipse developerEclipse editorEclipse"> When
                publishing Markdown content as part of a DITA project, more language values are
                supported and produce syntax highlights in the published WebHelp or PDF outputs:
                  <xref href="add-syntax-highlights-codeblocks.dita"/>.</ph></p>
            <p id="p_h43_cgk_54b"><b><u>Example: Syntax Highlighting in Code
              Block</u></b><codeblock outputclass="language-ini" id="codeblock_i43_cgk_54b">```css
input[type="submit"] {
    color: white;
    font-weight: bold;
```</codeblock></p>
          </li>
        </ul>
      </p>
    </section>
    <section id="inline_xhtml">
      <title>Inline XHTML (for HTML output only)</title>
      <p id="p_j43_cgk_54b">The Markdown editor supports writing inline XHTML. Since Markdown is just a writing format,
        it requires a conversion for publishing purposes. If you are using the HTML conversion, for
        any markup that is not covered by Markdown syntax, you can simply use XHTML syntax.</p>
      <p id="p_k43_cgk_54b"><b><u>Example: Inline
        XHTML</u></b><codeblock outputclass="language-ini" id="codeblock_l43_cgk_54b">This is a regular paragraph.

&lt;table>
    &lt;tr>
        &lt;td>Col 1&lt;/td>
        &lt;td>Col 2&lt;/td>
    &lt;/tr>
&lt;/table>

This is another regular paragraph.</codeblock></p>
    </section>
    <section id="lists">
      <title>Lists</title>
      <p id="p_m43_cgk_54b">The Markdown editor supports ordered and unordered lists. You can also insert <xref
          href="#markdown-rules/blockquotes" format="dita"><term>blockquotes</term></xref> and <xref
          href="#markdown-rules/quoting_code_inline_and_code_blocks" format="dita"><term>code
            blocks</term></xref> inside list items. List markers typically start at the left margin,
        but may be indented by up to three spaces.</p>
      <p id="p_n43_cgk_54b">
        <ul id="ul_o43_cgk_54b">
          <li id="unordered-list" irina="irina">
            <p id="p_p43_cgk_54b"><u><b>Unordered Lists</b></u></p>
            <p id="p_q43_cgk_54b">For unordered lists, you can use asterisks (<userinput>*</userinput>), plus signs
                (<userinput>+</userinput>), and hyphens (<userinput>-</userinput>)
              interchangeably.<codeblock outputclass="language-ini" id="codeblock_r43_cgk_54b">* List item 1
+ List item 2
- List item 3</codeblock></p>
          </li>
          <li id="ordered-list" irina="irina">
            <p id="p_s43_cgk_54b"><u><b>Ordered Lists</b></u></p>
            <p id="p_t43_cgk_54b">For ordered lists, use numbers followed by periods. The actual numbers you use have
              no effect on the output. It simply converts them to list items within an ordered list
              and the actual number of list items will determine the numbers in the
              output.<codeblock outputclass="language-ini" id="codeblock_u43_cgk_54b">1. List item 1
8. List item 2
5. List item 3</codeblock></p>
          </li>
          <li id="li_v43_cgk_54b" irina="irina">
            <p id="p_w43_cgk_54b"><u><b>Nested Lists</b></u></p>
            <p id="p_x43_cgk_54b">You can create nested lists by indenting lines by three
              spaces.<codeblock outputclass="language-ini" id="codeblock_y43_cgk_54b">1. Ordered list item 1
   1. Nested ordered list item 1
   2. Nested ordered list item 2
      * 2nd level nested unordered list item 1
      * 2nd level nested unordered list item 2
         * 3rd level nested unordered list item 1
2. Ordered list item 2  </codeblock></p>
          </li>
          <li id="li_z43_cgk_54b" irina="irina">
            <p id="p_ap3_cgk_54b"><u><b>Paragraphs Inside Lists</b></u></p>
            <p id="p_bp3_cgk_54b">If list items are separated by blank lines, Markdown will wrap the items in a
              paragraph in the
              output.<codeblock outputclass="language-ini" id="codeblock_cp3_cgk_54b">* List item 1

* List item 2</codeblock></p>
            <p id="p_dp3_cgk_54b">For both DITA and HTML output, this would result
              in:<codeblock outputclass="language-ini" id="codeblock_ep3_cgk_54b">&lt;ul>
&lt;li>&lt;p>List item 1&lt;/p>&lt;/li>
&lt;li>&lt;p>List item 2&lt;/p>&lt;/li>
&lt;/ul></codeblock></p>
          </li>
          <li id="li_fp3_cgk_54b" irina="irina">
            <p id="p_gp3_cgk_54b"><u><b>Multiple Paragraphs Inside Lists</b></u></p>
            <p id="p_hp3_cgk_54b">List items may consist of multiple paragraphs. Each subsequent paragraph in a list
              item must be indented by either 4 spaces or one tab. Optionally, you can also indent
              each line of a paragraph to make it look
              nicer.<codeblock outputclass="language-ini" id="codeblock_ip3_cgk_54b">1.  This is a list item with two paragraphs. Lorem ipsum dolor
    sit amet, consectetuer adipiscing elit. Aliquam hendrerit
    mi posuere lectus.

    Vestibulum enim wisi, viverra nec, fringilla in, laoreet
    vitae, risus. Donec sit amet nisl. Aliquam semper ipsum
    sit amet velit.

2.  Suspendisse id sem consectetuer libero luctus adipiscing.</codeblock></p>
          </li>
          <li id="li_jp3_cgk_54b" irina="irina">
            <p id="p_kp3_cgk_54b"><u><b>Blockquotes Inside Lists</b></u></p>
            <p id="p_lp3_cgk_54b">To put a <term>blockquote</term> within a list item, the
              blockquote delimiters (<userinput>></userinput>) need to be indented so that they are
              under the first letter of the text after the list item
              marker.<codeblock outputclass="language-ini" id="codeblock_mp3_cgk_54b">*   A list item with a blockquote:
    > This is a blockquote
    > inside a list item.</codeblock></p>
          </li>
          <li id="li_np3_cgk_54b" irina="irina">
            <p id="p_op3_cgk_54b"><u><b>Code Blocks Inside Lists</b></u></p>
            <p id="p_pp3_cgk_54b">To put a code block within a list item, insert an empty line in between the list item
              and the code block, and the code block needs to be indented twice (with 8 spaces or 2
              tabs), or if you are using the triple backticks method, the opening triple backtick
              needs to be indented with 4 spaces or 1
              tab.<codeblock outputclass="language-ini" id="codeblock_qp3_cgk_54b">*   A list item with a code block:

        This is a code block inside a list item

    ```
    This is a code block inside a list item using the backticks method
    ```</codeblock></p>
          </li>
        </ul>
      </p>
    </section>
    <section id="task_lists">
      <title>Task Lists</title>
      <p id="p_rp3_cgk_54b">You can create task lists by prefacing list items with a hyphen followed by a space
        followed by square brackets (<userinput>- [ ]</userinput>). To mark a task as complete, use
          <userinput>- [x]</userinput>.</p>
      <p id="p_sp3_cgk_54b"><b><u>Example: Task
        Lists</u></b><codeblock outputclass="language-ini" id="codeblock_tp3_cgk_54b">- [ ] Unfinished task 1
- [x] Finished task 2</codeblock></p>
    </section>
    <section id="definition_lists">
      <title>Definition Lists</title>
      <p id="p_up3_cgk_54b">You can create definition lists by using a colon plus a space for each list item.</p>
      <p id="p_vp3_cgk_54b"><b><u>Example: Definition
        Lists</u></b><codeblock outputclass="language-ini" id="codeblock_wp3_cgk_54b">Term 1
: Definition A
: Definition B</codeblock></p>
    </section>
    <section id="tables">
      <title>Tables</title>
      <p id="p_xp3_cgk_54b">You can create tables in the Markdown editor by using pipes (<userinput>|</userinput>) and
        hyphens (<userinput>-</userinput>).</p>
      <p id="p_yp3_cgk_54b">
        <ul id="ul_zp3_cgk_54b">
          <li id="li_aq3_cgk_54b" irina="irina">
            <p id="p_bq3_cgk_54b"><u><b>Creating a Table</b></u></p>
            <p id="p_cq3_cgk_54b">Pipes are used to separate each column, while hyphens are used to create column
              headers. The pipes on either end of the table are optional. Cells can vary in width
              and do not need to be perfectly aligned within columns, but there must be at least
              three hyphens in each column of the header
              row.<codeblock outputclass="language-ini" id="codeblock_dq3_cgk_54b">| First Header  | Second Header |
| ------------- | ------------- |
| Column 1 Row 1 Cell  | Column 2 Row 1 Cell  |
| Column 1 Row 2 Cell  | Column 2 Row 2 Cell  |</codeblock></p>
          </li>
          <li id="li_eq3_cgk_54b" irina="irina">
            <p id="p_fq3_cgk_54b"><u><b>Formatting Rules in Table Cells</b></u></p>
            <p id="p_gq3_cgk_54b">You can use formatting rules inside the cells of the table (such as links, inline
              code blocks, and text
              styling).<codeblock outputclass="language-ini" id="codeblock_hq3_cgk_54b">| First Header  | Second Header |
| --- | --- |
| `inline code`  | Content with **bold text** inside cell  |</codeblock></p>
          </li>
          <li id="li_iq3_cgk_54b" irina="irina">
            <p id="p_jq3_cgk_54b"><u><b>Aligning Text in Tables</b></u></p>
            <p id="p_kq3_cgk_54b">You can align text to the left, right, or center of a column by including colons
                (<userinput>:</userinput>) to the left, right, or on both sides of the hyphens
              within the header
              row.<codeblock outputclass="language-ini" id="codeblock_lq3_cgk_54b">| Left-aligned | Center-aligned | Right-aligned |
| :---         |     :---:      |          ---: |
| Content Cell | Content Cell   | Content Cell  |</codeblock></p>
          </li>
          <li id="li_mq3_cgk_54b" irina="irina">
            <p id="p_nq3_cgk_54b"><u><b>Joining Cells (Span a Cell Over Multiple Columns)</b></u></p>
            <p id="p_oq3_cgk_54b">You can join cells horizontally (span a cell over multiple columns) by using multiple
              consecutive pipe characters (<userinput>|</userinput>) to the right of the particular
              cell. The number of consecutive pipes indicate the number of columns the cell will
              span (<userinput>||</userinput> for two, <userinput>|||</userinput> for three, and so
              on).<codeblock outputclass="language-ini" id="codeblock_pq3_cgk_54b">| First Header | Second Header | Third Header | Fourth Header |
| ------------ | ------------- | ------------ | ------------- |
| Content Cell | *Cell Span Over 3 Columns* |||</codeblock></p>
          </li>
        </ul>
      </p>
    </section>
    <section id="emoji">
      <title>Emoji</title>
      <p id="p_qq3_cgk_54b">You can add <term>emoji</term> in the Markdown editor by surrounding the
        EMOJICODE with colons (<userinput>:EMOJICODE:</userinput>).</p>
      <p id="p_rq3_cgk_54b"><b><u>Example:
        Emoji</u></b><codeblock outputclass="language-ini" id="codeblock_sq3_cgk_54b">:smile:
:laughing:</codeblock></p>
      <p id="p_tq3_cgk_54b">The resulting emoticons will appear in the output, but they are not
        displayed in the <term>Preview</term> pane.</p>
      <p id="p_uq3_cgk_54b">For a full list of available emoji codes, see <xref
          href="http://www.webpagefx.com/tools/emoji-cheat-sheet/" format="html" scope="external"
          >Emoji Cheat Sheet</xref>.</p>
    </section>
    <section id="backslash_escapes">
      <title>Backslash Escapes</title>
      <p id="p_vq3_cgk_54b">You can ignore Markdown formatting by using backslash escapes (<userinput>\</userinput>) to
        generate literal characters that would otherwise have special meaning in the Markdown
        syntax. For example, if you want to surround a word with literal asterisks (instead of an
        italic or emphasis tag), you can use backslashes to escape the
        asterisks.<codeblock outputclass="language-ini" id="codeblock_wq3_cgk_54b">\*literal asterisks\*</codeblock></p>
      <p id="p_xq3_cgk_54b">The Markdown editor provides backslash escapes for the following
        characters:<codeblock outputclass="language-ini" id="codeblock_yq3_cgk_54b">\   backslash
`   backtick
*   asterisk
_   underscore
{}  curly braces
[]  square brackets
()  parentheses
#   hash mark
+   plus sign
-   minus sign (hyphen)
.   dot
!   exclamation mark</codeblock></p>
    </section>
    <section id="automatic_escaping_for_special_characters">
      <title>Automatic Escaping for Special Characters</title>
      <p id="p_zq3_cgk_54b">The Markdown editor includes support for automatically escaping special characters such as
        angle brackets (<userinput>&lt; ></userinput>) and ampersands
        (<userinput>&amp;</userinput>). If you want to use them as literal characters, you must
        escape them as entities, as in the table below. The exception to this is in HTML output, if
        the special characters for a valid tag (for example, <xmlelement>b</xmlelement>), they are
        treated as literal characters and escaping is not necessary.</p>
      <p id="p_ar3_cgk_54b">
        <table frame="all" rowsep="1" colsep="1" id="table_br3_cgk_54b">
          <tgroup cols="2" align="left">
            <colspec colname="c1" colnum="1" colwidth="108.75pt"/>
            <colspec colname="c2" colnum="2" colwidth="105.75pt"/>
            <thead>
              <row>
                <entry align="center">Literal Character</entry>
                <entry align="center">Escaping Code</entry>
              </row>
            </thead>
            <tbody>
              <row>
                <entry align="center"><b>&lt;</b></entry>
                <entry align="center"><b>&amp;lt;</b></entry>
              </row>
              <row>
                <entry align="center"><b>></b></entry>
                <entry align="center"><b>&amp;gt;</b></entry>
              </row>
              <row>
                <entry align="center"><b>&amp;</b></entry>
                <entry align="center"><b>&amp;amp;</b></entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </p>
    </section>
    <section id="footnotes">
      <title>Footnotes</title>
      <p id="p_cr3_cgk_54b">The Markdown editor in <ph keyref="product"/> supports normal and inline footnotes. The
        following examples show the required syntax.</p>
      <p id="p_dr3_cgk_54b">
        <ul id="ul_er3_cgk_54b">
          <li id="li_fr3_cgk_54b" irina="irina"><b><u>Example: Normal
            Footnote</u></b><codeblock outputclass="language-ini" id="codeblock_gr3_cgk_54b">Here is a footnote reference,[^1]

[^1]: Here is the footnote.</codeblock></li>
          <li id="li_hr3_cgk_54b" irina="irina"><b><u>Example: Normal Footnote with Multiple
            Blocks</u></b><codeblock outputclass="language-ini" id="codeblock_ir3_cgk_54b">Here is a footnote reference,[^longnote]

[^longnote]: Here is the footnote with multiple blocks.

    Subsequent paragraphs are indented with 4 spaces or 1 tab to show that they
belong to the previous footnote.</codeblock></li>
          <li id="li_jr3_cgk_54b" irina="irina"><b><u>Example: Inline
            Footnote</u></b><codeblock outputclass="language-ini" id="codeblock_kr3_cgk_54b">Here is an inline note.^[Inlines notes are easier to write, since
you don't have to pick an identifier and move down to type the
note.]</codeblock></li>
        </ul>
      </p>
    </section>
    <section id="section_zff_35q_sqb" product="author editor authorEclipse editorEclipse">
      <title>DITA-Related Markdown Syntax</title>
      <p id="p_agf_35q_sqb">For information about unique Markdown features for DITA projects, see
          <xref href="markdown-dita.dita"/>. Also, for a list of Markdown rules and examples for
        DITA, see the <xref
          href="https://www.dita-ot.org/dev/topics/markdown-dita-syntax-reference.html"
          format="html" scope="external">Markdown DITA Syntax Reference</xref>.</p>
    </section>
  </body>
  <related-links>
      <link format="html" href="http://daringfireball.net/projects/markdown/syntax" scope="external">
        <linktext>Default Markdown Syntax</linktext>
      </link>
      <link format="html" href="https://help.github.com/categories/writing-on-github/"
        scope="external">
        <linktext>GitHub Flavored Markdown Rules</linktext>
      </link>
      <link href="markdown-editor.dita#markdown-editor"/>
      <link href="markdown-actions.dita#markdown-actions"/>
    <link href="markdown-dita.dita" product="author editor authorEclipse editorEclipse"/>
  </related-links>
</topic>
